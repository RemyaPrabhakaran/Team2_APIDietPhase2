<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="11" passed="10" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-08-21T12:48:46 EDT" name="Default suite" finished-at="2024-08-21T12:49:01 EDT" duration-ms="14858">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunner.TestRunner@37afeb11]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2024-08-21T12:48:46 EDT" name="Default test" finished-at="2024-08-21T12:49:01 EDT" duration-ms="14858">
      <class name="testRunner.TestRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:testRunner.TestRunner@37afeb11]" started-at="2024-08-21T12:48:46 EDT" name="setUpClass" finished-at="2024-08-21T12:48:48 EDT" duration-ms="1343" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@1bb0fa38]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunner.TestRunner@37afeb11]" started-at="2024-08-21T12:48:48 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-08-21T12:48:55 EDT" duration-ms="6755" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Patient creation"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Post Operation [create patient]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunner.TestRunner@37afeb11]" started-at="2024-08-21T12:48:55 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-08-21T12:48:55 EDT" duration-ms="813" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Patient creation"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Post Operation [create patient]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <201> but was <400>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <201> but was <400>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at stepDefinition.PatientPostStepDef.dietician_recieves_response_for_the_respective(PatientPostStepDef.java:115)
at âœ½.Dietician recieves response for the respective "ValidTwo"(file:///C:/Users/rashm/git/Team2_APIDietPhase2RestAssured/src/test/resources/Features/001_Patient.feature:13)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunner.TestRunner@37afeb11]" started-at="2024-08-21T12:48:55 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-08-21T12:48:56 EDT" duration-ms="767" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Patient creation"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Post Operation [create patient]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunner.TestRunner@37afeb11]" started-at="2024-08-21T12:48:56 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-08-21T12:48:57 EDT" duration-ms="642" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Patient creation"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Post Operation [create patient]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunner.TestRunner@37afeb11]" started-at="2024-08-21T12:48:57 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-08-21T12:48:57 EDT" duration-ms="639" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Patient creation"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Post Operation [create patient]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunner.TestRunner@37afeb11]" started-at="2024-08-21T12:48:57 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-08-21T12:48:58 EDT" duration-ms="668" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Patient creation"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Post Operation [create patient]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunner.TestRunner@37afeb11]" started-at="2024-08-21T12:48:58 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-08-21T12:48:59 EDT" duration-ms="689" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Update patient Add New Reports with/without Vitals for existing Patient"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Put Operation [Add New Reports with/without Vitals for existing Patient"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunner.TestRunner@37afeb11]" started-at="2024-08-21T12:48:59 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-08-21T12:48:59 EDT" duration-ms="488" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Update patient Add New Reports with/without Vitals for existing Patient"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Put Operation [Add New Reports with/without Vitals for existing Patient"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunner.TestRunner@37afeb11]" started-at="2024-08-21T12:48:59 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-08-21T12:49:00 EDT" duration-ms="390" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check dietician able to retrieve patients morbidity details by patient id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Get Operation [Get Patients Morbidity Details ]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunner.TestRunner@37afeb11]" started-at="2024-08-21T12:49:00 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-08-21T12:49:01 EDT" duration-ms="976" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check dietician able to retrieve patients by field"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Get Operation [Retrieve Patient file by FileId ]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunner.TestRunner@37afeb11]" started-at="2024-08-21T12:49:01 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-08-21T12:49:01 EDT" duration-ms="454" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check dietician able to delete patient by ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Get Operation [Get Patients Morbidity Details ]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:testRunner.TestRunner@37afeb11]" started-at="2024-08-21T12:49:01 EDT" name="tearDownClass" finished-at="2024-08-21T12:49:01 EDT" duration-ms="118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- testRunner.TestRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
