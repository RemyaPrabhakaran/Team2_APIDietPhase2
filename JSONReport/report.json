[{"line":2,"elements":[{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":10036100,"status":"passed"},"line":6,"name":"Admin sets the Authorization to no auth","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.admin_sets_the_authorization_to_no_auth()"},"keyword":"Given "}]},{"start_timestamp":"2024-08-22T21:05:46.014Z","line":8,"name":"Check user able to login as admin with valid data","description":"","id":"user-login;check-user-able-to-login-as-admin-with-valid-data","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1117747500,"status":"passed"},"line":9,"name":"User creates Post request with request body.","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_creates_post_request_with_request_body()"},"keyword":"Given "},{"result":{"duration":6813319000,"status":"passed"},"line":10,"name":"User send login POST HTTP request with endpoint","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_send_login_post_http_request_with_endpoint()"},"keyword":"When "},{"result":{"duration":7046900,"status":"passed"},"line":11,"name":"User recieves 200 created with response body","match":{"arguments":[{"val":"200","offset":14}],"location":"stepDefinition.AdminLoginStepDef_Dietician.user_recieves_created_with_response_body(java.lang.Integer)"},"keyword":"Then "}]}],"name":"User Login","description":"  Admin logs in to the API without authorization","id":"user-login","keyword":"Feature","uri":"file:src/test/resources/Features/1_AdminModule/001_User_Admin.feature","tags":[]},{"line":2,"elements":[{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":11950700,"status":"passed"},"line":6,"name":"User creates Post request with request body.","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_creates_post_request_with_request_body()"},"keyword":"Given "},{"result":{"duration":2302891700,"status":"passed"},"line":7,"name":"User send login POST HTTP request with endpoint","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_send_login_post_http_request_with_endpoint()"},"keyword":"When "},{"result":{"duration":2001300,"status":"passed"},"line":8,"name":"Admin sets the bearer admin token for the Post request","match":{"location":"stepDefinition.DieticianPostStepDef.admin_sets_the_bearer_admin_token_for_the_post_request()"},"keyword":"Then "}]},{"start_timestamp":"2024-08-22T21:05:54.025Z","line":19,"name":"Check admin able to create dietician with the valid data and  valid token","description":"","id":"put-(by-dietician-);check-admin-able-to-create-dietician-with-the-valid-data-and--valid-token;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":12,"name":"Admin creates Post request for the \"PostDieticianInvalidData1\"","match":{"arguments":[{"val":"\"PostDieticianInvalidData1\"","offset":35}],"location":"stepDefinition.DieticianPostStepDef.admin_creates_post_request_for_the(java.lang.String)"},"keyword":"Given "},{"result":{"duration":2005080900,"status":"passed"},"line":13,"name":"Admin sends dietician POST http request with endpoint for the \"PostDieticianInvalidData1\" from the \"PostDietician\"","match":{"arguments":[{"val":"\"PostDieticianInvalidData1\"","offset":62},{"val":"\"PostDietician\"","offset":99}],"location":"stepDefinition.DieticianPostStepDef.admin_sends_dietician_post_http_request_with_endpoint_for_the_from_the(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":996600,"status":"passed"},"line":14,"name":"Admin recieves the response with the \"400\"","match":{"arguments":[{"val":"\"400\"","offset":37}],"location":"stepDefinition.DieticianPutStepDef.admin_recieves_the_response_with_the(java.lang.String)"},"keyword":"Then "}]},{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":4002800,"status":"passed"},"line":6,"name":"User creates Post request with request body.","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_creates_post_request_with_request_body()"},"keyword":"Given "},{"result":{"duration":1576336600,"status":"passed"},"line":7,"name":"User send login POST HTTP request with endpoint","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_send_login_post_http_request_with_endpoint()"},"keyword":"When "},{"result":{"duration":3001200,"status":"passed"},"line":8,"name":"Admin sets the bearer admin token for the Post request","match":{"location":"stepDefinition.DieticianPostStepDef.admin_sets_the_bearer_admin_token_for_the_post_request()"},"keyword":"Then "}]},{"start_timestamp":"2024-08-22T21:05:58.380Z","line":20,"name":"Check admin able to create dietician with the valid data and  valid token","description":"","id":"put-(by-dietician-);check-admin-able-to-create-dietician-with-the-valid-data-and--valid-token;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":12,"name":"Admin creates Post request for the \"PostDieticianPositive\"","match":{"arguments":[{"val":"\"PostDieticianPositive\"","offset":35}],"location":"stepDefinition.DieticianPostStepDef.admin_creates_post_request_for_the(java.lang.String)"},"keyword":"Given "},{"result":{"duration":3643870300,"status":"passed"},"line":13,"name":"Admin sends dietician POST http request with endpoint for the \"PostDieticianPositive\" from the \"PostDietician\"","match":{"arguments":[{"val":"\"PostDieticianPositive\"","offset":62},{"val":"\"PostDietician\"","offset":95}],"location":"stepDefinition.DieticianPostStepDef.admin_sends_dietician_post_http_request_with_endpoint_for_the_from_the(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":14,"name":"Admin recieves the response with the \"201\"","match":{"arguments":[{"val":"\"201\"","offset":37}],"location":"stepDefinition.DieticianPutStepDef.admin_recieves_the_response_with_the(java.lang.String)"},"keyword":"Then "}]}],"name":"PUT (by dietician )","description":"  Admin logs in to the API without authorization","id":"put-(by-dietician-)","keyword":"Feature","uri":"file:src/test/resources/Features/1_AdminModule/002_Dietician_Post.feature","tags":[]},{"line":2,"elements":[{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":3002900,"status":"passed"},"line":6,"name":"User creates Post request with request body.","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_creates_post_request_with_request_body()"},"keyword":"Given "},{"result":{"duration":1784695200,"status":"passed"},"line":7,"name":"User send login POST HTTP request with endpoint","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_send_login_post_http_request_with_endpoint()"},"keyword":"When "},{"result":{"duration":7166800,"status":"passed"},"line":8,"name":"Admin sets the bearer admin token for the put request","match":{"location":"stepDefinition.DieticianPutStepDef.admin_sets_the_bearer_admin_token_for_the_put_request()"},"keyword":"Then "}]},{"start_timestamp":"2024-08-22T21:06:03.625Z","line":19,"name":"Check admin able to update dietician with valid data , dietician id and token","description":"","id":"put-(by-dietician-);check-admin-able-to-update-dietician-with-valid-data---dietician-id-and-token;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":12,"name":"Admin creates PUT request for the \"WithallFields\"","match":{"arguments":[{"val":"\"WithallFields\"","offset":34}],"location":"stepDefinition.DieticianPutStepDef.admin_creates_put_request_for_the_with_the_data_from_the_excel(java.lang.String)"},"keyword":"Given "},{"result":{"duration":1454183900,"status":"passed"},"line":13,"name":"Admin sends dietician PUT http request with endpoint for the \"WithallFields\" from the \"UpdateDietician\"","match":{"arguments":[{"val":"\"WithallFields\"","offset":61},{"val":"\"UpdateDietician\"","offset":86}],"location":"stepDefinition.DieticianPutStepDef.admin_sends_dietician_put_http_request_with_endpoint_for_the_from_the(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":14,"name":"Admin recieves the response with the \"200\"","match":{"arguments":[{"val":"\"200\"","offset":37}],"location":"stepDefinition.DieticianPutStepDef.admin_recieves_the_response_with_the(java.lang.String)"},"keyword":"Then "}]},{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":2003800,"status":"passed"},"line":6,"name":"User creates Post request with request body.","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_creates_post_request_with_request_body()"},"keyword":"Given "},{"result":{"duration":1391880500,"status":"passed"},"line":7,"name":"User send login POST HTTP request with endpoint","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_send_login_post_http_request_with_endpoint()"},"keyword":"When "},{"result":{"duration":2049300,"status":"passed"},"line":8,"name":"Admin sets the bearer admin token for the put request","match":{"location":"stepDefinition.DieticianPutStepDef.admin_sets_the_bearer_admin_token_for_the_put_request()"},"keyword":"Then "}]},{"start_timestamp":"2024-08-22T21:06:06.885Z","line":20,"name":"Check admin able to update dietician with valid data , dietician id and token","description":"","id":"put-(by-dietician-);check-admin-able-to-update-dietician-with-valid-data---dietician-id-and-token;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":12,"name":"Admin creates PUT request for the \"MandatoryFieldsOnly\"","match":{"arguments":[{"val":"\"MandatoryFieldsOnly\"","offset":34}],"location":"stepDefinition.DieticianPutStepDef.admin_creates_put_request_for_the_with_the_data_from_the_excel(java.lang.String)"},"keyword":"Given "},{"result":{"duration":1387040000,"status":"passed"},"line":13,"name":"Admin sends dietician PUT http request with endpoint for the \"MandatoryFieldsOnly\" from the \"UpdateDietician\"","match":{"arguments":[{"val":"\"MandatoryFieldsOnly\"","offset":61},{"val":"\"UpdateDietician\"","offset":92}],"location":"stepDefinition.DieticianPutStepDef.admin_sends_dietician_put_http_request_with_endpoint_for_the_from_the(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":14,"name":"Admin recieves the response with the \"200\"","match":{"arguments":[{"val":"\"200\"","offset":37}],"location":"stepDefinition.DieticianPutStepDef.admin_recieves_the_response_with_the(java.lang.String)"},"keyword":"Then "}]},{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":4015200,"status":"passed"},"line":6,"name":"User creates Post request with request body.","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_creates_post_request_with_request_body()"},"keyword":"Given "},{"result":{"duration":1606867000,"status":"passed"},"line":7,"name":"User send login POST HTTP request with endpoint","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_send_login_post_http_request_with_endpoint()"},"keyword":"When "},{"result":{"duration":2997700,"status":"passed"},"line":8,"name":"Admin sets the bearer admin token for the put request","match":{"location":"stepDefinition.DieticianPutStepDef.admin_sets_the_bearer_admin_token_for_the_put_request()"},"keyword":"Then "}]},{"start_timestamp":"2024-08-22T21:06:09.680Z","line":21,"name":"Check admin able to update dietician with valid data , dietician id and token","description":"","id":"put-(by-dietician-);check-admin-able-to-update-dietician-with-valid-data---dietician-id-and-token;;4","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":12,"name":"Admin creates PUT request for the \"InvalidData\"","match":{"arguments":[{"val":"\"InvalidData\"","offset":34}],"location":"stepDefinition.DieticianPutStepDef.admin_creates_put_request_for_the_with_the_data_from_the_excel(java.lang.String)"},"keyword":"Given "},{"result":{"duration":86705621000,"status":"passed"},"line":13,"name":"Admin sends dietician PUT http request with endpoint for the \"InvalidData\" from the \"UpdateDietician\"","match":{"arguments":[{"val":"\"InvalidData\"","offset":61},{"val":"\"UpdateDietician\"","offset":84}],"location":"stepDefinition.DieticianPutStepDef.admin_sends_dietician_put_http_request_with_endpoint_for_the_from_the(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":996800,"status":"passed"},"line":14,"name":"Admin recieves the response with the \"400\"","match":{"arguments":[{"val":"\"400\"","offset":37}],"location":"stepDefinition.DieticianPutStepDef.admin_recieves_the_response_with_the(java.lang.String)"},"keyword":"Then "}]}],"name":"PUT (by dietician )","description":"  Admin logs in to the API without authorization","id":"put-(by-dietician-)","keyword":"Feature","uri":"file:src/test/resources/Features/1_AdminModule/003_Dietician_Put.feature","tags":[]},{"line":2,"elements":[{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":3001200,"status":"passed"},"line":6,"name":"User creates Post request with request body.","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_creates_post_request_with_request_body()"},"keyword":"Given "},{"result":{"duration":1898450600,"status":"passed"},"line":7,"name":"User send login POST HTTP request with endpoint","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_send_login_post_http_request_with_endpoint()"},"keyword":"When "},{"result":{"status":"passed"},"line":8,"name":"User recieves 200 created with response body","match":{"arguments":[{"val":"200","offset":14}],"location":"stepDefinition.AdminLoginStepDef_Dietician.user_recieves_created_with_response_body(java.lang.Integer)"},"keyword":"Then "}]},{"start_timestamp":"2024-08-22T21:07:38.020Z","line":11,"name":"Check admin able to retrieve all dietician","description":"","id":"get-(all-dietician);check-admin-able-to-retrieve-all-dietician","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1001800,"status":"passed"},"line":12,"name":"Admin create GET request","match":{"location":"stepDefinition.GetAllDieticianStepDef.admin_create_get_request()"},"keyword":"Given "},{"result":{"duration":4077870200,"status":"passed"},"line":13,"name":"Admin sends the GET http request with endpoint","match":{"location":"stepDefinition.GetAllDieticianStepDef.admin_sends_the_get_http_request_with_endpoint()"},"keyword":"When "},{"result":{"duration":1005500,"status":"passed"},"line":14,"name":"Admin recieves the response with the status code 200 for the get dietician","match":{"arguments":[{"val":"200","offset":49}],"location":"stepDefinition.GetAllDieticianStepDef.admin_recieves_the_response_with_the_status_code_for_the_get_dietician(java.lang.Integer)"},"keyword":"Then "}]},{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":1809500,"status":"passed"},"line":6,"name":"User creates Post request with request body.","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_creates_post_request_with_request_body()"},"keyword":"Given "},{"result":{"duration":1460851200,"status":"passed"},"line":7,"name":"User send login POST HTTP request with endpoint","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_send_login_post_http_request_with_endpoint()"},"keyword":"When "},{"result":{"status":"passed"},"line":8,"name":"User recieves 200 created with response body","match":{"arguments":[{"val":"200","offset":14}],"location":"stepDefinition.AdminLoginStepDef_Dietician.user_recieves_created_with_response_body(java.lang.Integer)"},"keyword":"Then "}]},{"start_timestamp":"2024-08-22T21:07:44.017Z","line":17,"name":"Check admin able to retrieve all dietician with invalid method","description":"","id":"get-(all-dietician);check-admin-able-to-retrieve-all-dietician-with-invalid-method","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1511100,"status":"passed"},"line":18,"name":"Admin create PUT request for get HTTP request","match":{"location":"stepDefinition.GetAllDieticianStepDef.admin_create_put_request_for_get_http_request()"},"keyword":"Given "},{"result":{"duration":1297586600,"status":"passed"},"line":19,"name":"Admin send PUT http request with get request endpoint","match":{"location":"stepDefinition.GetAllDieticianStepDef.admin_send_put_http_request_with_get_request_endpoint()"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: 1 expectation failed.\nExpected status code <405> but was <401>.\n\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)\r\n\tat io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)\r\n\tat stepDefinition.GetAllDieticianStepDef.admin_recieves_method_not_allowed(GetAllDieticianStepDef.java:81)\r\n\tat ✽.Admin recieves 405 method not allowed(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/1_AdminModule/004_GetAllDietician_WithAdminToken.feature:20)\r\n","duration":2995500,"status":"failed"},"line":20,"name":"Admin recieves 405 method not allowed","match":{"arguments":[{"val":"405","offset":15}],"location":"stepDefinition.GetAllDieticianStepDef.admin_recieves_method_not_allowed(java.lang.Integer)"},"keyword":"Then "}]},{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":2534700,"status":"passed"},"line":6,"name":"User creates Post request with request body.","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_creates_post_request_with_request_body()"},"keyword":"Given "},{"result":{"duration":1489553300,"status":"passed"},"line":7,"name":"User send login POST HTTP request with endpoint","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_send_login_post_http_request_with_endpoint()"},"keyword":"When "},{"result":{"status":"passed"},"line":8,"name":"User recieves 200 created with response body","match":{"arguments":[{"val":"200","offset":14}],"location":"stepDefinition.AdminLoginStepDef_Dietician.user_recieves_created_with_response_body(java.lang.Integer)"},"keyword":"Then "}]},{"start_timestamp":"2024-08-22T21:07:46.797Z","line":22,"name":"Check admin able to retrieve all dietician with invalid endpoint","description":"","id":"get-(all-dietician);check-admin-able-to-retrieve-all-dietician-with-invalid-endpoint","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1000500,"status":"passed"},"line":23,"name":"Admin create GET request","match":{"location":"stepDefinition.GetAllDieticianStepDef.admin_create_get_request()"},"keyword":"Given "},{"result":{"duration":1806262100,"status":"passed"},"line":24,"name":"Admin send GET http request with invalid endpoint for get dietician","match":{"location":"stepDefinition.GetAllDieticianStepDef.admin_send_get_http_request_with_invalid_endpoint_for_get_dietician()"},"keyword":"When "},{"result":{"duration":1007600,"status":"passed"},"line":25,"name":"Admin recieves 404 not found","match":{"arguments":[{"val":"404","offset":15}],"location":"stepDefinition.GetAllDieticianStepDef.admin_recieves_not_found(java.lang.Integer)"},"keyword":"Then "}]}],"name":"GET (All dietician)","description":"  Admin get the details of all the dieticians","id":"get-(all-dietician)","keyword":"Feature","uri":"file:src/test/resources/Features/1_AdminModule/004_GetAllDietician_WithAdminToken.feature","tags":[]},{"line":2,"elements":[{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":2002800,"status":"passed"},"line":6,"name":"User creates Post request with request body.","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_creates_post_request_with_request_body()"},"keyword":"Given "},{"result":{"duration":1320457900,"status":"passed"},"line":7,"name":"User send login POST HTTP request with endpoint","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_send_login_post_http_request_with_endpoint()"},"keyword":"When "},{"result":{"status":"passed"},"line":8,"name":"User recieves 200 created with response body","match":{"arguments":[{"val":"200","offset":14}],"location":"stepDefinition.AdminLoginStepDef_Dietician.user_recieves_created_with_response_body(java.lang.Integer)"},"keyword":"Then "}]},{"start_timestamp":"2024-08-22T21:07:50.104Z","line":11,"name":"Check admin able to retrieve dietician by ID","description":"","id":"get-(-by-dietician);check-admin-able-to-retrieve-dietician-by-id","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":2850800,"status":"passed"},"line":12,"name":"Admin create GET request for get dietician by ID","match":{"location":"stepDefinition.GetDieticianByIdStepDef.admin_create_get_request_for_get_dietician_by_id()"},"keyword":"Given "},{"result":{"duration":1140811200,"status":"passed"},"line":13,"name":"Admin send GET http request with endpoint for get dietician by ID","match":{"location":"stepDefinition.GetDieticianByIdStepDef.admin_send_get_http_request_with_endpoint_for_get_dietician_by_id()"},"keyword":"When "},{"result":{"duration":986500,"status":"passed"},"line":14,"name":"Admin recieves 200 ok with details of the dietician id","match":{"arguments":[{"val":"200","offset":15}],"location":"stepDefinition.GetDieticianByIdStepDef.admin_recieves_ok_with_details_of_the_dietician_id(java.lang.Integer)"},"keyword":"Then "}]},{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":1001300,"status":"passed"},"line":6,"name":"User creates Post request with request body.","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_creates_post_request_with_request_body()"},"keyword":"Given "},{"result":{"duration":1352992700,"status":"passed"},"line":7,"name":"User send login POST HTTP request with endpoint","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_send_login_post_http_request_with_endpoint()"},"keyword":"When "},{"result":{"status":"passed"},"line":8,"name":"User recieves 200 created with response body","match":{"arguments":[{"val":"200","offset":14}],"location":"stepDefinition.AdminLoginStepDef_Dietician.user_recieves_created_with_response_body(java.lang.Integer)"},"keyword":"Then "}]},{"start_timestamp":"2024-08-22T21:07:52.581Z","line":17,"name":"Check admin able to retrieve dietician by id with invalid method","description":"","id":"get-(-by-dietician);check-admin-able-to-retrieve-dietician-by-id-with-invalid-method","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1921900,"status":"passed"},"line":18,"name":"Admin create GET request for get dietician by ID","match":{"location":"stepDefinition.GetDieticianByIdStepDef.admin_create_get_request_for_get_dietician_by_id()"},"keyword":"Given "},{"result":{"duration":1186366200,"status":"passed"},"line":19,"name":"Admin send POST http request with endpoint of the get dietician by ID","match":{"location":"stepDefinition.GetDieticianByIdStepDef.admin_send_post_http_request_with_endpoint_of_the_get_dietician_by_id()"},"keyword":"When "},{"result":{"duration":998000,"status":"passed"},"line":20,"name":"Admin recieves 405 method not allowed for the get dietician by ID","match":{"arguments":[{"val":"405","offset":15}],"location":"stepDefinition.GetDieticianByIdStepDef.admin_recieves_method_not_allowed_for_the_get_dietician_by_id(java.lang.Integer)"},"keyword":"Then "}]},{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":958800,"status":"passed"},"line":6,"name":"User creates Post request with request body.","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_creates_post_request_with_request_body()"},"keyword":"Given "},{"result":{"duration":1347739600,"status":"passed"},"line":7,"name":"User send login POST HTTP request with endpoint","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_send_login_post_http_request_with_endpoint()"},"keyword":"When "},{"result":{"status":"passed"},"line":8,"name":"User recieves 200 created with response body","match":{"arguments":[{"val":"200","offset":14}],"location":"stepDefinition.AdminLoginStepDef_Dietician.user_recieves_created_with_response_body(java.lang.Integer)"},"keyword":"Then "}]},{"start_timestamp":"2024-08-22T21:07:55.129Z","line":29,"name":"Check admin able to retrieve dietician by invalid id","description":"","id":"get-(-by-dietician);check-admin-able-to-retrieve-dietician-by-invalid-id;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":2010200,"status":"passed"},"line":23,"name":"Admin create GET request for get dietician by ID","match":{"location":"stepDefinition.GetDieticianByIdStepDef.admin_create_get_request_for_get_dietician_by_id()"},"keyword":"Given "},{"result":{"duration":1274057700,"status":"passed"},"line":24,"name":"Admin send GET http request with endpoint for get dietician by \"0850384\"","match":{"arguments":[{"val":"\"0850384\"","offset":63}],"location":"stepDefinition.GetDieticianByIdStepDef.admin_send_get_http_request_with_endpoint_for_get_dietician_by(java.lang.String)"},"keyword":"When "},{"result":{"duration":1000500,"status":"passed"},"line":25,"name":"Admin recieves 404 not found for the get dietician by ID","match":{"arguments":[{"val":"404","offset":15}],"location":"stepDefinition.GetDieticianByIdStepDef.admin_recieves_not_found_for_the_get_dietician_by_id(java.lang.Integer)"},"keyword":"Then "}]},{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":1999900,"status":"passed"},"line":6,"name":"User creates Post request with request body.","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_creates_post_request_with_request_body()"},"keyword":"Given "},{"result":{"duration":1638841900,"status":"passed"},"line":7,"name":"User send login POST HTTP request with endpoint","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_send_login_post_http_request_with_endpoint()"},"keyword":"When "},{"result":{"status":"passed"},"line":8,"name":"User recieves 200 created with response body","match":{"arguments":[{"val":"200","offset":14}],"location":"stepDefinition.AdminLoginStepDef_Dietician.user_recieves_created_with_response_body(java.lang.Integer)"},"keyword":"Then "}]},{"start_timestamp":"2024-08-22T21:07:57.763Z","line":30,"name":"Check admin able to retrieve dietician by invalid id","description":"","id":"get-(-by-dietician);check-admin-able-to-retrieve-dietician-by-invalid-id;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1001000,"status":"passed"},"line":23,"name":"Admin create GET request for get dietician by ID","match":{"location":"stepDefinition.GetDieticianByIdStepDef.admin_create_get_request_for_get_dietician_by_id()"},"keyword":"Given "},{"result":{"duration":1140426600,"status":"passed"},"line":24,"name":"Admin send GET http request with endpoint for get dietician by \"Reshma\"","match":{"arguments":[{"val":"\"Reshma\"","offset":63}],"location":"stepDefinition.GetDieticianByIdStepDef.admin_send_get_http_request_with_endpoint_for_get_dietician_by(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: 1 expectation failed.\nExpected status code <404> but was <400>.\n\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)\r\n\tat io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)\r\n\tat stepDefinition.GetDieticianByIdStepDef.admin_recieves_not_found_for_the_get_dietician_by_id(GetDieticianByIdStepDef.java:101)\r\n\tat ✽.Admin recieves 404 not found for the get dietician by ID(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/1_AdminModule/005_GetDietician_WithAdminToken.feature:25)\r\n","duration":1515000,"status":"failed"},"line":25,"name":"Admin recieves 404 not found for the get dietician by ID","match":{"arguments":[{"val":"404","offset":15}],"location":"stepDefinition.GetDieticianByIdStepDef.admin_recieves_not_found_for_the_get_dietician_by_id(java.lang.Integer)"},"keyword":"Then "}]},{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":1000700,"status":"passed"},"line":6,"name":"User creates Post request with request body.","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_creates_post_request_with_request_body()"},"keyword":"Given "},{"result":{"duration":1331736300,"status":"passed"},"line":7,"name":"User send login POST HTTP request with endpoint","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_send_login_post_http_request_with_endpoint()"},"keyword":"When "},{"result":{"status":"passed"},"line":8,"name":"User recieves 200 created with response body","match":{"arguments":[{"val":"200","offset":14}],"location":"stepDefinition.AdminLoginStepDef_Dietician.user_recieves_created_with_response_body(java.lang.Integer)"},"keyword":"Then "}]},{"start_timestamp":"2024-08-22T21:08:00.555Z","line":31,"name":"Check admin able to retrieve dietician by invalid id","description":"","id":"get-(-by-dietician);check-admin-able-to-retrieve-dietician-by-invalid-id;;4","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":2011700,"status":"passed"},"line":23,"name":"Admin create GET request for get dietician by ID","match":{"location":"stepDefinition.GetDieticianByIdStepDef.admin_create_get_request_for_get_dietician_by_id()"},"keyword":"Given "},{"result":{"duration":1159927200,"status":"passed"},"line":24,"name":"Admin send GET http request with endpoint for get dietician by \"9834*$\"","match":{"arguments":[{"val":"\"9834*$\"","offset":63}],"location":"stepDefinition.GetDieticianByIdStepDef.admin_send_get_http_request_with_endpoint_for_get_dietician_by(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: 1 expectation failed.\nExpected status code <404> but was <400>.\n\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)\r\n\tat io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)\r\n\tat stepDefinition.GetDieticianByIdStepDef.admin_recieves_not_found_for_the_get_dietician_by_id(GetDieticianByIdStepDef.java:101)\r\n\tat ✽.Admin recieves 404 not found for the get dietician by ID(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/1_AdminModule/005_GetDietician_WithAdminToken.feature:25)\r\n","duration":1001100,"status":"failed"},"line":25,"name":"Admin recieves 404 not found for the get dietician by ID","match":{"arguments":[{"val":"404","offset":15}],"location":"stepDefinition.GetDieticianByIdStepDef.admin_recieves_not_found_for_the_get_dietician_by_id(java.lang.Integer)"},"keyword":"Then "}]},{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":2002900,"status":"passed"},"line":6,"name":"User creates Post request with request body.","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_creates_post_request_with_request_body()"},"keyword":"Given "},{"result":{"duration":1414680900,"status":"passed"},"line":7,"name":"User send login POST HTTP request with endpoint","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_send_login_post_http_request_with_endpoint()"},"keyword":"When "},{"result":{"status":"passed"},"line":8,"name":"User recieves 200 created with response body","match":{"arguments":[{"val":"200","offset":14}],"location":"stepDefinition.AdminLoginStepDef_Dietician.user_recieves_created_with_response_body(java.lang.Integer)"},"keyword":"Then "}]},{"start_timestamp":"2024-08-22T21:08:03.061Z","line":35,"name":"Check admin able to retrieve dietician by id with invalid endpoint","description":"","id":"get-(-by-dietician);check-admin-able-to-retrieve-dietician-by-id-with-invalid-endpoint","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1001200,"status":"passed"},"line":36,"name":"Admin create GET request for get dietician by ID","match":{"location":"stepDefinition.GetDieticianByIdStepDef.admin_create_get_request_for_get_dietician_by_id()"},"keyword":"Given "},{"result":{"duration":1281373300,"status":"passed"},"line":37,"name":"Admin send GET http request with invalid endpoint","match":{"location":"stepDefinition.GetDieticianByIdStepDef.admin_send_get_http_request_with_invalid_endpoint()"},"keyword":"When "},{"result":{"status":"passed"},"line":38,"name":"Admin recieves 404 not found for the get dietician by ID","match":{"arguments":[{"val":"404","offset":15}],"location":"stepDefinition.GetDieticianByIdStepDef.admin_recieves_not_found_for_the_get_dietician_by_id(java.lang.Integer)"},"keyword":"Then "}]}],"name":"GET ( by dietician)","description":"  Admin retrieves dietician by ID with admin token","id":"get-(-by-dietician)","keyword":"Feature","uri":"file:src/test/resources/Features/1_AdminModule/005_GetDietician_WithAdminToken.feature","tags":[]},{"line":2,"elements":[{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":2000700,"status":"passed"},"line":6,"name":"User creates Post request with request body.","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_creates_post_request_with_request_body()"},"keyword":"Given "},{"result":{"duration":1288108100,"status":"passed"},"line":7,"name":"User send login POST HTTP request with endpoint","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_send_login_post_http_request_with_endpoint()"},"keyword":"When "},{"result":{"status":"passed"},"line":8,"name":"User recieves 200 created with response body","match":{"arguments":[{"val":"200","offset":14}],"location":"stepDefinition.AdminLoginStepDef_Dietician.user_recieves_created_with_response_body(java.lang.Integer)"},"keyword":"Then "}]},{"start_timestamp":"2024-08-22T21:08:05.775Z","line":11,"name":"Check admin able to delete dietician by ID","description":"","id":"delete-(-by-dietician);check-admin-able-to-delete-dietician-by-id","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":2511200,"status":"passed"},"line":12,"name":"Admin create DELETE request for deleting the dietician","match":{"location":"stepDefinition.DeleteDieticianStepDef.admin_create_delete_request_for_deleting_the_dietician()"},"keyword":"Given "},{"result":{"error_message":"java.lang.IndexOutOfBoundsException: Index 1 out of bounds for length 1\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)\r\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)\r\n\tat java.base/java.util.Objects.checkIndex(Objects.java:385)\r\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\r\n\tat stepDefinition.DeleteDieticianStepDef.admin_send_delete_http_request_with_delete_endpoint(DeleteDieticianStepDef.java:45)\r\n\tat ✽.Admin send DELETE http request with delete endpoint(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/1_AdminModule/006_DeleteDietician.feature:13)\r\n","duration":1009900,"status":"failed"},"line":13,"name":"Admin send DELETE http request with delete endpoint","match":{"location":"stepDefinition.DeleteDieticianStepDef.admin_send_delete_http_request_with_delete_endpoint()"},"keyword":"When "},{"result":{"status":"skipped"},"line":14,"name":"Admin recieves 200 ok message with successful delete message","match":{"arguments":[{"val":"200","offset":15}],"location":"stepDefinition.DeleteDieticianStepDef.admin_recieves_ok_message_with_successful_delete_message(java.lang.Integer)"},"keyword":"Then "}]},{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":2077900,"status":"passed"},"line":6,"name":"User creates Post request with request body.","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_creates_post_request_with_request_body()"},"keyword":"Given "},{"result":{"duration":1310953700,"status":"passed"},"line":7,"name":"User send login POST HTTP request with endpoint","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_send_login_post_http_request_with_endpoint()"},"keyword":"When "},{"result":{"status":"passed"},"line":8,"name":"User recieves 200 created with response body","match":{"arguments":[{"val":"200","offset":14}],"location":"stepDefinition.AdminLoginStepDef_Dietician.user_recieves_created_with_response_body(java.lang.Integer)"},"keyword":"Then "}]},{"start_timestamp":"2024-08-22T21:08:07.080Z","line":17,"name":"Check admin able to delete dietician by id with invalid method","description":"","id":"delete-(-by-dietician);check-admin-able-to-delete-dietician-by-id-with-invalid-method","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":2001700,"status":"passed"},"line":18,"name":"Admin create POST request for deleting the dietician","match":{"location":"stepDefinition.DeleteDieticianStepDef.admin_create_post_request_for_deleting_the_dietician()"},"keyword":"Given "},{"result":{"error_message":"java.lang.IndexOutOfBoundsException: Index 1 out of bounds for length 1\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)\r\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)\r\n\tat java.base/java.util.Objects.checkIndex(Objects.java:385)\r\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\r\n\tat stepDefinition.DeleteDieticianStepDef.admin_send_post_http_request_with_endpoint(DeleteDieticianStepDef.java:69)\r\n\tat ✽.Admin send POST http request with endpoint(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/1_AdminModule/006_DeleteDietician.feature:19)\r\n","duration":6638400,"status":"failed"},"line":19,"name":"Admin send POST http request with endpoint","match":{"location":"stepDefinition.DeleteDieticianStepDef.admin_send_post_http_request_with_endpoint()"},"keyword":"When "},{"result":{"status":"skipped"},"line":20,"name":"Admin recieves 405 method not allowed for the delete request","match":{"arguments":[{"val":"405","offset":15}],"location":"stepDefinition.DeleteDieticianStepDef.admin_recieves_method_not_allowed_for_the_delete_request(java.lang.Integer)"},"keyword":"Then "}]},{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":999700,"status":"passed"},"line":6,"name":"User creates Post request with request body.","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_creates_post_request_with_request_body()"},"keyword":"Given "},{"result":{"duration":1468887000,"status":"passed"},"line":7,"name":"User send login POST HTTP request with endpoint","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_send_login_post_http_request_with_endpoint()"},"keyword":"When "},{"result":{"status":"passed"},"line":8,"name":"User recieves 200 created with response body","match":{"arguments":[{"val":"200","offset":14}],"location":"stepDefinition.AdminLoginStepDef_Dietician.user_recieves_created_with_response_body(java.lang.Integer)"},"keyword":"Then "}]},{"start_timestamp":"2024-08-22T21:08:08.421Z","line":29,"name":"Check admin able to delete dietician by invalid id","description":"","id":"delete-(-by-dietician);check-admin-able-to-delete-dietician-by-invalid-id;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":889800,"status":"passed"},"line":23,"name":"Admin create DELETE request for deleting the dietician","match":{"location":"stepDefinition.DeleteDieticianStepDef.admin_create_delete_request_for_deleting_the_dietician()"},"keyword":"Given "},{"result":{"duration":1704803700,"status":"passed"},"line":24,"name":"Admin send Delete http request with endpoint for deleting the dietician by \"0850384\"","match":{"arguments":[{"val":"\"0850384\"","offset":75}],"location":"stepDefinition.DeleteDieticianStepDef.admin_send_delete_http_request_with_endpoint_for_deleting_the_dietician_by(java.lang.String)"},"keyword":"When "},{"result":{"duration":1325200,"status":"passed"},"line":25,"name":"Admin recieves 404 not found for the the delete request","match":{"arguments":[{"val":"404","offset":15}],"location":"stepDefinition.DeleteDieticianStepDef.admin_recieves_not_found_for_the_the_delete_request(java.lang.Integer)"},"keyword":"Then "}]},{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":2011700,"status":"passed"},"line":6,"name":"User creates Post request with request body.","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_creates_post_request_with_request_body()"},"keyword":"Given "},{"result":{"duration":2159036300,"status":"passed"},"line":7,"name":"User send login POST HTTP request with endpoint","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_send_login_post_http_request_with_endpoint()"},"keyword":"When "},{"result":{"duration":1004500,"status":"passed"},"line":8,"name":"User recieves 200 created with response body","match":{"arguments":[{"val":"200","offset":14}],"location":"stepDefinition.AdminLoginStepDef_Dietician.user_recieves_created_with_response_body(java.lang.Integer)"},"keyword":"Then "}]},{"start_timestamp":"2024-08-22T21:08:11.609Z","line":30,"name":"Check admin able to delete dietician by invalid id","description":"","id":"delete-(-by-dietician);check-admin-able-to-delete-dietician-by-invalid-id;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1000200,"status":"passed"},"line":23,"name":"Admin create DELETE request for deleting the dietician","match":{"location":"stepDefinition.DeleteDieticianStepDef.admin_create_delete_request_for_deleting_the_dietician()"},"keyword":"Given "},{"result":{"duration":1602161600,"status":"passed"},"line":24,"name":"Admin send Delete http request with endpoint for deleting the dietician by \"Reshma\"","match":{"arguments":[{"val":"\"Reshma\"","offset":75}],"location":"stepDefinition.DeleteDieticianStepDef.admin_send_delete_http_request_with_endpoint_for_deleting_the_dietician_by(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: 1 expectation failed.\nExpected status code <404> but was <400>.\n\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)\r\n\tat io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)\r\n\tat stepDefinition.DeleteDieticianStepDef.admin_recieves_not_found_for_the_the_delete_request(DeleteDieticianStepDef.java:95)\r\n\tat ✽.Admin recieves 404 not found for the the delete request(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/1_AdminModule/006_DeleteDietician.feature:25)\r\n","duration":1998300,"status":"failed"},"line":25,"name":"Admin recieves 404 not found for the the delete request","match":{"arguments":[{"val":"404","offset":15}],"location":"stepDefinition.DeleteDieticianStepDef.admin_recieves_not_found_for_the_the_delete_request(java.lang.Integer)"},"keyword":"Then "}]},{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":3036900,"status":"passed"},"line":6,"name":"User creates Post request with request body.","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_creates_post_request_with_request_body()"},"keyword":"Given "},{"result":{"duration":1821844300,"status":"passed"},"line":7,"name":"User send login POST HTTP request with endpoint","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_send_login_post_http_request_with_endpoint()"},"keyword":"When "},{"result":{"status":"passed"},"line":8,"name":"User recieves 200 created with response body","match":{"arguments":[{"val":"200","offset":14}],"location":"stepDefinition.AdminLoginStepDef_Dietician.user_recieves_created_with_response_body(java.lang.Integer)"},"keyword":"Then "}]},{"start_timestamp":"2024-08-22T21:08:15.383Z","line":31,"name":"Check admin able to delete dietician by invalid id","description":"","id":"delete-(-by-dietician);check-admin-able-to-delete-dietician-by-invalid-id;;4","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":923700,"status":"passed"},"line":23,"name":"Admin create DELETE request for deleting the dietician","match":{"location":"stepDefinition.DeleteDieticianStepDef.admin_create_delete_request_for_deleting_the_dietician()"},"keyword":"Given "},{"result":{"duration":1734608500,"status":"passed"},"line":24,"name":"Admin send Delete http request with endpoint for deleting the dietician by \"9834*$\"","match":{"arguments":[{"val":"\"9834*$\"","offset":75}],"location":"stepDefinition.DeleteDieticianStepDef.admin_send_delete_http_request_with_endpoint_for_deleting_the_dietician_by(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: 1 expectation failed.\nExpected status code <404> but was <400>.\n\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)\r\n\tat io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)\r\n\tat stepDefinition.DeleteDieticianStepDef.admin_recieves_not_found_for_the_the_delete_request(DeleteDieticianStepDef.java:95)\r\n\tat ✽.Admin recieves 404 not found for the the delete request(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/1_AdminModule/006_DeleteDietician.feature:25)\r\n","duration":2024600,"status":"failed"},"line":25,"name":"Admin recieves 404 not found for the the delete request","match":{"arguments":[{"val":"404","offset":15}],"location":"stepDefinition.DeleteDieticianStepDef.admin_recieves_not_found_for_the_the_delete_request(java.lang.Integer)"},"keyword":"Then "}]},{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":1000100,"status":"passed"},"line":6,"name":"User creates Post request with request body.","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_creates_post_request_with_request_body()"},"keyword":"Given "},{"result":{"duration":2643510400,"status":"passed"},"line":7,"name":"User send login POST HTTP request with endpoint","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_send_login_post_http_request_with_endpoint()"},"keyword":"When "},{"result":{"status":"passed"},"line":8,"name":"User recieves 200 created with response body","match":{"arguments":[{"val":"200","offset":14}],"location":"stepDefinition.AdminLoginStepDef_Dietician.user_recieves_created_with_response_body(java.lang.Integer)"},"keyword":"Then "}]},{"start_timestamp":"2024-08-22T21:08:18.957Z","line":35,"name":"Check admin able to delete dietician by id with invalid endpoint","description":"","id":"delete-(-by-dietician);check-admin-able-to-delete-dietician-by-id-with-invalid-endpoint","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1001400,"status":"passed"},"line":36,"name":"Admin create DELETE request for deleting the dietician","match":{"location":"stepDefinition.DeleteDieticianStepDef.admin_create_delete_request_for_deleting_the_dietician()"},"keyword":"Given "},{"result":{"duration":2950382200,"status":"passed"},"line":37,"name":"Admin send DELETE http request with invalid endpoint","match":{"location":"stepDefinition.DeleteDieticianStepDef.admin_send_delete_http_request_with_invalid_endpoint()"},"keyword":"When "},{"result":{"duration":993200,"status":"passed"},"line":38,"name":"Admin recieves 404 not found for the the delete request","match":{"arguments":[{"val":"404","offset":15}],"location":"stepDefinition.DeleteDieticianStepDef.admin_recieves_not_found_for_the_the_delete_request(java.lang.Integer)"},"keyword":"Then "}]}],"name":"DELETE ( by dietician)","description":"  Admin deletes dietician by ID with admin token","id":"delete-(-by-dietician)","keyword":"Feature","uri":"file:src/test/resources/Features/1_AdminModule/006_DeleteDietician.feature","tags":[]},{"line":1,"elements":[{"start_timestamp":"2024-08-22T21:08:24.562Z","line":11,"name":"User Login as Admin with Credentials","description":"","id":"user-login-module;user-login-as-admin-with-credentials;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":63971700,"status":"passed"},"line":5,"name":"User create a Post Request body using credentials \"Valid Credentials\" \"Login\" 0","match":{"arguments":[{"val":"\"Valid Credentials\"","offset":50},{"val":"\"Login\"","offset":70},{"val":"0","offset":78}],"location":"stepDefinition.AdminLoginStepDef.user_create_a_post_request_body_using_credentials(java.lang.String,java.lang.String,java.lang.Integer)"},"keyword":"Given "},{"result":{"duration":3058329800,"status":"passed"},"line":6,"name":"User sends Post Request","match":{"location":"stepDefinition.AdminLoginStepDef.user_sends_post_request()"},"keyword":"When "},{"result":{"duration":47878700,"status":"passed"},"line":7,"name":"the User receives status for scenario \"Valid Credentials\" \"Login\" 0","match":{"arguments":[{"val":"\"Valid Credentials\"","offset":38},{"val":"\"Login\"","offset":58},{"val":"0","offset":66}],"location":"stepDefinition.AdminLoginStepDef.the_user_receives_status_for_scenario(java.lang.String,java.lang.String,java.lang.Integer)"},"keyword":"Then "}],"tags":[{"name":"@tag1"}]},{"start_timestamp":"2024-08-22T21:08:27.760Z","line":12,"name":"User Login as Admin with Credentials","description":"","id":"user-login-module;user-login-as-admin-with-credentials;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":83031700,"status":"passed"},"line":5,"name":"User create a Post Request body using credentials \"Invalid userLoginEmail\" \"Login\" 1","match":{"arguments":[{"val":"\"Invalid userLoginEmail\"","offset":50},{"val":"\"Login\"","offset":75},{"val":"1","offset":83}],"location":"stepDefinition.AdminLoginStepDef.user_create_a_post_request_body_using_credentials(java.lang.String,java.lang.String,java.lang.Integer)"},"keyword":"Given "},{"result":{"duration":2945293500,"status":"passed"},"line":6,"name":"User sends Post Request","match":{"location":"stepDefinition.AdminLoginStepDef.user_sends_post_request()"},"keyword":"When "},{"result":{"duration":46705000,"status":"passed"},"line":7,"name":"the User receives status for scenario \"Invalid userLoginEmail\" \"Login\" 1","match":{"arguments":[{"val":"\"Invalid userLoginEmail\"","offset":38},{"val":"\"Login\"","offset":63},{"val":"1","offset":71}],"location":"stepDefinition.AdminLoginStepDef.the_user_receives_status_for_scenario(java.lang.String,java.lang.String,java.lang.Integer)"},"keyword":"Then "}],"tags":[{"name":"@tag1"}]},{"start_timestamp":"2024-08-22T21:08:30.855Z","line":13,"name":"User Login as Admin with Credentials","description":"","id":"user-login-module;user-login-as-admin-with-credentials;;4","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":76044700,"status":"passed"},"line":5,"name":"User create a Post Request body using credentials \"Invalid URL\" \"Login\" 2","match":{"arguments":[{"val":"\"Invalid URL\"","offset":50},{"val":"\"Login\"","offset":64},{"val":"2","offset":72}],"location":"stepDefinition.AdminLoginStepDef.user_create_a_post_request_body_using_credentials(java.lang.String,java.lang.String,java.lang.Integer)"},"keyword":"Given "},{"result":{"duration":1629383600,"status":"passed"},"line":6,"name":"User sends Post Request","match":{"location":"stepDefinition.AdminLoginStepDef.user_sends_post_request()"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected [200] but found [404]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1383)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1429)\r\n\tat stepDefinition.AdminLoginStepDef.the_user_receives_status_for_scenario(AdminLoginStepDef.java:75)\r\n\tat ✽.the User receives status for scenario \"Invalid URL\" \"Login\" 2(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/1_AdminModule/0_A_User_Admin.feature:7)\r\n","duration":42300800,"status":"failed"},"line":7,"name":"the User receives status for scenario \"Invalid URL\" \"Login\" 2","match":{"arguments":[{"val":"\"Invalid URL\"","offset":38},{"val":"\"Login\"","offset":52},{"val":"2","offset":60}],"location":"stepDefinition.AdminLoginStepDef.the_user_receives_status_for_scenario(java.lang.String,java.lang.String,java.lang.Integer)"},"keyword":"Then "}],"tags":[{"name":"@tag1"}]},{"start_timestamp":"2024-08-22T21:08:32.617Z","line":14,"name":"User Login as Admin with Credentials","description":"","id":"user-login-module;user-login-as-admin-with-credentials;;5","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":58601000,"status":"passed"},"line":5,"name":"User create a Post Request body using credentials \"Invalid Endpoint\" \"Login\" 3","match":{"arguments":[{"val":"\"Invalid Endpoint\"","offset":50},{"val":"\"Login\"","offset":69},{"val":"3","offset":77}],"location":"stepDefinition.AdminLoginStepDef.user_create_a_post_request_body_using_credentials(java.lang.String,java.lang.String,java.lang.Integer)"},"keyword":"Given "},{"result":{"duration":1464875800,"status":"passed"},"line":6,"name":"User sends Post Request","match":{"location":"stepDefinition.AdminLoginStepDef.user_sends_post_request()"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected [200] but found [401]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1383)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1429)\r\n\tat stepDefinition.AdminLoginStepDef.the_user_receives_status_for_scenario(AdminLoginStepDef.java:75)\r\n\tat ✽.the User receives status for scenario \"Invalid Endpoint\" \"Login\" 3(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/1_AdminModule/0_A_User_Admin.feature:7)\r\n","duration":56885600,"status":"failed"},"line":7,"name":"the User receives status for scenario \"Invalid Endpoint\" \"Login\" 3","match":{"arguments":[{"val":"\"Invalid Endpoint\"","offset":38},{"val":"\"Login\"","offset":57},{"val":"3","offset":65}],"location":"stepDefinition.AdminLoginStepDef.the_user_receives_status_for_scenario(java.lang.String,java.lang.String,java.lang.Integer)"},"keyword":"Then "}],"tags":[{"name":"@tag1"}]},{"start_timestamp":"2024-08-22T21:08:34.212Z","line":15,"name":"User Login as Admin with Credentials","description":"","id":"user-login-module;user-login-as-admin-with-credentials;;6","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":71001800,"status":"passed"},"line":5,"name":"User create a Post Request body using credentials \"Invalid Content\" \"Login\" 4","match":{"arguments":[{"val":"\"Invalid Content\"","offset":50},{"val":"\"Login\"","offset":68},{"val":"4","offset":76}],"location":"stepDefinition.AdminLoginStepDef.user_create_a_post_request_body_using_credentials(java.lang.String,java.lang.String,java.lang.Integer)"},"keyword":"Given "},{"result":{"duration":1315321900,"status":"passed"},"line":6,"name":"User sends Post Request","match":{"location":"stepDefinition.AdminLoginStepDef.user_sends_post_request()"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected [200] but found [401]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1383)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1429)\r\n\tat stepDefinition.AdminLoginStepDef.the_user_receives_status_for_scenario(AdminLoginStepDef.java:75)\r\n\tat ✽.the User receives status for scenario \"Invalid Content\" \"Login\" 4(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/1_AdminModule/0_A_User_Admin.feature:7)\r\n","duration":63274300,"status":"failed"},"line":7,"name":"the User receives status for scenario \"Invalid Content\" \"Login\" 4","match":{"arguments":[{"val":"\"Invalid Content\"","offset":38},{"val":"\"Login\"","offset":56},{"val":"4","offset":64}],"location":"stepDefinition.AdminLoginStepDef.the_user_receives_status_for_scenario(java.lang.String,java.lang.String,java.lang.Integer)"},"keyword":"Then "}],"tags":[{"name":"@tag1"}]},{"start_timestamp":"2024-08-22T21:08:35.675Z","line":16,"name":"User Login as Admin with Credentials","description":"","id":"user-login-module;user-login-as-admin-with-credentials;;7","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":86573300,"status":"passed"},"line":5,"name":"User create a Post Request body using credentials \"Invalid Password\" \"Login\" 5","match":{"arguments":[{"val":"\"Invalid Password\"","offset":50},{"val":"\"Login\"","offset":69},{"val":"5","offset":77}],"location":"stepDefinition.AdminLoginStepDef.user_create_a_post_request_body_using_credentials(java.lang.String,java.lang.String,java.lang.Integer)"},"keyword":"Given "},{"result":{"duration":1248272000,"status":"passed"},"line":6,"name":"User sends Post Request","match":{"location":"stepDefinition.AdminLoginStepDef.user_sends_post_request()"},"keyword":"When "},{"result":{"duration":55939500,"status":"passed"},"line":7,"name":"the User receives status for scenario \"Invalid Password\" \"Login\" 5","match":{"arguments":[{"val":"\"Invalid Password\"","offset":38},{"val":"\"Login\"","offset":57},{"val":"5","offset":65}],"location":"stepDefinition.AdminLoginStepDef.the_user_receives_status_for_scenario(java.lang.String,java.lang.String,java.lang.Integer)"},"keyword":"Then "}],"tags":[{"name":"@tag1"}]},{"start_timestamp":"2024-08-22T21:08:37.093Z","line":26,"name":"User Login as Dietician with Credentials","description":"","id":"user-login-module;user-login-as-dietician-with-credentials;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":87819700,"status":"passed"},"line":20,"name":"User create a Post Request body using credentials \"Valid Dietician Credentials\" \"Login\" 6","match":{"arguments":[{"val":"\"Valid Dietician Credentials\"","offset":50},{"val":"\"Login\"","offset":80},{"val":"6","offset":88}],"location":"stepDefinition.AdminLoginStepDef.user_create_a_post_request_body_using_credentials(java.lang.String,java.lang.String,java.lang.Integer)"},"keyword":"Given "},{"result":{"duration":1498072700,"status":"passed"},"line":21,"name":"User sends Post Request","match":{"location":"stepDefinition.AdminLoginStepDef.user_sends_post_request()"},"keyword":"When "},{"result":{"duration":36347300,"status":"passed"},"line":22,"name":"the User receives status for scenario \"Valid Dietician Credentials\" \"Login\" 6","match":{"arguments":[{"val":"\"Valid Dietician Credentials\"","offset":38},{"val":"\"Login\"","offset":68},{"val":"6","offset":76}],"location":"stepDefinition.AdminLoginStepDef.the_user_receives_status_for_scenario(java.lang.String,java.lang.String,java.lang.Integer)"},"keyword":"Then "}],"tags":[{"name":"@tag2"}]},{"start_timestamp":"2024-08-22T21:08:38.734Z","line":27,"name":"User Login as Dietician with Credentials","description":"","id":"user-login-module;user-login-as-dietician-with-credentials;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":74226800,"status":"passed"},"line":20,"name":"User create a Post Request body using credentials \"Invalid userLoginEmail\" \"Login\" 7","match":{"arguments":[{"val":"\"Invalid userLoginEmail\"","offset":50},{"val":"\"Login\"","offset":75},{"val":"7","offset":83}],"location":"stepDefinition.AdminLoginStepDef.user_create_a_post_request_body_using_credentials(java.lang.String,java.lang.String,java.lang.Integer)"},"keyword":"Given "},{"result":{"duration":2082632600,"status":"passed"},"line":21,"name":"User sends Post Request","match":{"location":"stepDefinition.AdminLoginStepDef.user_sends_post_request()"},"keyword":"When "},{"result":{"duration":59879900,"status":"passed"},"line":22,"name":"the User receives status for scenario \"Invalid userLoginEmail\" \"Login\" 7","match":{"arguments":[{"val":"\"Invalid userLoginEmail\"","offset":38},{"val":"\"Login\"","offset":63},{"val":"7","offset":71}],"location":"stepDefinition.AdminLoginStepDef.the_user_receives_status_for_scenario(java.lang.String,java.lang.String,java.lang.Integer)"},"keyword":"Then "}],"tags":[{"name":"@tag2"}]},{"start_timestamp":"2024-08-22T21:08:40.976Z","line":37,"name":"User Login as Patient with Credentials","description":"","id":"user-login-module;user-login-as-patient-with-credentials;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":65234000,"status":"passed"},"line":31,"name":"User create a Post Request body using credentials \"Valid Patient Credentials\" \"Login\" 8","match":{"arguments":[{"val":"\"Valid Patient Credentials\"","offset":50},{"val":"\"Login\"","offset":78},{"val":"8","offset":86}],"location":"stepDefinition.AdminLoginStepDef.user_create_a_post_request_body_using_credentials(java.lang.String,java.lang.String,java.lang.Integer)"},"keyword":"Given "},{"result":{"duration":1534901800,"status":"passed"},"line":32,"name":"User sends Post Request","match":{"location":"stepDefinition.AdminLoginStepDef.user_sends_post_request()"},"keyword":"When "},{"result":{"duration":46629900,"status":"passed"},"line":33,"name":"the User receives status for scenario \"Valid Patient Credentials\" \"Login\" 8","match":{"arguments":[{"val":"\"Valid Patient Credentials\"","offset":38},{"val":"\"Login\"","offset":66},{"val":"8","offset":74}],"location":"stepDefinition.AdminLoginStepDef.the_user_receives_status_for_scenario(java.lang.String,java.lang.String,java.lang.Integer)"},"keyword":"Then "}],"tags":[{"name":"@tag3"}]},{"start_timestamp":"2024-08-22T21:08:42.635Z","line":38,"name":"User Login as Patient with Credentials","description":"","id":"user-login-module;user-login-as-patient-with-credentials;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":63197500,"status":"passed"},"line":31,"name":"User create a Post Request body using credentials \"Invalid userLoginEmail\" \"Login\" 9","match":{"arguments":[{"val":"\"Invalid userLoginEmail\"","offset":50},{"val":"\"Login\"","offset":75},{"val":"9","offset":83}],"location":"stepDefinition.AdminLoginStepDef.user_create_a_post_request_body_using_credentials(java.lang.String,java.lang.String,java.lang.Integer)"},"keyword":"Given "},{"result":{"duration":1439684600,"status":"passed"},"line":32,"name":"User sends Post Request","match":{"location":"stepDefinition.AdminLoginStepDef.user_sends_post_request()"},"keyword":"When "},{"result":{"duration":59966500,"status":"passed"},"line":33,"name":"the User receives status for scenario \"Invalid userLoginEmail\" \"Login\" 9","match":{"arguments":[{"val":"\"Invalid userLoginEmail\"","offset":38},{"val":"\"Login\"","offset":63},{"val":"9","offset":71}],"location":"stepDefinition.AdminLoginStepDef.the_user_receives_status_for_scenario(java.lang.String,java.lang.String,java.lang.Integer)"},"keyword":"Then "}],"tags":[{"name":"@tag3"}]}],"name":"User Login Module","description":"","id":"user-login-module","keyword":"Feature","uri":"file:src/test/resources/Features/1_AdminModule/0_A_User_Admin.feature","tags":[]},{"line":2,"elements":[{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":3172500,"status":"passed"},"line":6,"name":"User creates Post request with request body.","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_creates_post_request_with_request_body()"},"keyword":"Given "},{"result":{"duration":1302455000,"status":"passed"},"line":7,"name":"User send login POST HTTP request with endpoint","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_send_login_post_http_request_with_endpoint()"},"keyword":"When "},{"result":{"duration":1002600,"status":"passed"},"line":8,"name":"User recieves 200 created with response body and sets patient bearer token","match":{"arguments":[{"val":"200","offset":14}],"location":"stepDefinition.AdminOpeationWithDieticianTokenStepDef.user_recieves_created_with_response_body_and_sets_patient_bearer_token(java.lang.Integer)"},"keyword":"Then "}]},{"start_timestamp":"2024-08-22T21:08:44.214Z","line":11,"name":"Check admin able to create dietician with valid data and dietician token","description":"","id":"admin-does-all-the-operations-patient-bearer-token;check-admin-able-to-create-dietician-with-valid-data-and-dietician-token","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":12,"name":"Admin creates POST request with valid data","match":{"location":"stepDefinition.AdminOpeationWithDieticianTokenStepDef.admin_creates_post_request_with_valid_data()"},"keyword":"Given "},{"result":{"duration":1592236900,"status":"passed"},"line":13,"name":"Admin send POST http request with patient token","match":{"location":"stepDefinition.AdminOpeationWithDieticianTokenStepDef.admin_send_post_http_request_with_patient_token()"},"keyword":"When "},{"result":{"duration":1000100,"status":"passed"},"line":14,"name":"Admin recieves a 403 forbidden","match":{"arguments":[{"val":"403","offset":17}],"location":"stepDefinition.AdminOpeationWithDieticianTokenStepDef.admin_recieves_a_forbidden(java.lang.Integer)"},"keyword":"Then "}]},{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":2005200,"status":"passed"},"line":6,"name":"User creates Post request with request body.","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_creates_post_request_with_request_body()"},"keyword":"Given "},{"result":{"duration":1747048000,"status":"passed"},"line":7,"name":"User send login POST HTTP request with endpoint","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_send_login_post_http_request_with_endpoint()"},"keyword":"When "},{"result":{"duration":2000300,"status":"passed"},"line":8,"name":"User recieves 200 created with response body and sets patient bearer token","match":{"arguments":[{"val":"200","offset":14}],"location":"stepDefinition.AdminOpeationWithDieticianTokenStepDef.user_recieves_created_with_response_body_and_sets_patient_bearer_token(java.lang.Integer)"},"keyword":"Then "}]},{"start_timestamp":"2024-08-22T21:08:47.134Z","line":16,"name":"Check admin able to update dietician with valid data , dietician id and patient token","description":"","id":"admin-does-all-the-operations-patient-bearer-token;check-admin-able-to-update-dietician-with-valid-data---dietician-id-and-patient-token","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":17,"name":"Admin creates PUT request with valid data","match":{"location":"stepDefinition.AdminOpeationWithDieticianTokenStepDef.admin_creates_put_request_with_valid_data()"},"keyword":"Given "},{"result":{"duration":1394029400,"status":"passed"},"line":18,"name":"Admin send PUT http request with endpoint with patient token","match":{"location":"stepDefinition.AdminOpeationWithDieticianTokenStepDef.admin_send_put_http_request_with_endpoint_with_patient_token()"},"keyword":"When "},{"result":{"duration":1242200,"status":"passed"},"line":19,"name":"Admin recieves a 403 forbidden","match":{"arguments":[{"val":"403","offset":17}],"location":"stepDefinition.AdminOpeationWithDieticianTokenStepDef.admin_recieves_a_forbidden(java.lang.Integer)"},"keyword":"Then "}]}],"name":"Admin does all the operations patient bearer token","description":"  Admin tries to do all the operations with patient token","id":"admin-does-all-the-operations-patient-bearer-token","keyword":"Feature","uri":"file:src/test/resources/Features/1_AdminModule/AdminOperationWithPatientToken.feature","tags":[]},{"line":2,"elements":[{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":1000300,"status":"passed"},"line":6,"name":"User creates Post request with request body.","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_creates_post_request_with_request_body()"},"keyword":"Given "},{"result":{"duration":1532797700,"status":"passed"},"line":7,"name":"User send login POST HTTP request with endpoint","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_send_login_post_http_request_with_endpoint()"},"keyword":"When "},{"result":{"duration":864200,"status":"passed"},"line":8,"name":"User recieves 200 created with response body and sets dietician bearer token","match":{"arguments":[{"val":"200","offset":14}],"location":"stepDefinition.AdminOpeationWithDieticianTokenStepDef.user_recieves_created_with_response_body_and_sets_dietician_bearer_token(java.lang.Integer)"},"keyword":"Then "}]},{"start_timestamp":"2024-08-22T21:08:50.286Z","line":11,"name":"Check admin able to create dietician with valid data and dietician token","description":"","id":"admin-does-all-the-operations-with-dietician-token;check-admin-able-to-create-dietician-with-valid-data-and-dietician-token","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":12,"name":"Admin creates POST request with valid data","match":{"location":"stepDefinition.AdminOpeationWithDieticianTokenStepDef.admin_creates_post_request_with_valid_data()"},"keyword":"Given "},{"result":{"duration":1123043400,"status":"passed"},"line":13,"name":"Admin send POST http request with endpoint with deitician token","match":{"location":"stepDefinition.AdminOpeationWithDieticianTokenStepDef.admin_send_post_http_request_with_endpoint_with_deitician_token()"},"keyword":"When "},{"result":{"error_message":"java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)\r\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)\r\n\tat java.base/java.util.Objects.checkIndex(Objects.java:385)\r\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\r\n\tat stepDefinition.AminTokenStepDef.<init>(AminTokenStepDef.java:35)\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\r\n\tat org.picocontainer.injectors.AbstractInjector.newInstance(AbstractInjector.java:145)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:342)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:678)\r\n\tat io.cucumber.picocontainer.PicoFactory.getInstance(PicoFactory.java:64)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)\r\n\tat io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:84)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:56)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:84)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)\r\n\tat io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\r\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\r\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\r\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\r\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\r\n\tat org.testng.TestRunner.run(TestRunner.java:614)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:312)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1208)\r\n\tat org.testng.TestNG.runSuites(TestNG.java:1112)\r\n\tat org.testng.TestNG.run(TestNG.java:1079)\r\n\tat org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)\r\n\tat org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)\r\n\tat org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)\r\n","status":"failed"},"line":14,"name":"Admin recieves 403 forbidden","match":{"arguments":[{"val":"403","offset":15}],"location":"stepDefinition.AminTokenStepDef.admin_recieves_forbidden(int)"},"keyword":"Then "}]},{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":2006500,"status":"passed"},"line":6,"name":"User creates Post request with request body.","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_creates_post_request_with_request_body()"},"keyword":"Given "},{"result":{"duration":1263000000,"status":"passed"},"line":7,"name":"User send login POST HTTP request with endpoint","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_send_login_post_http_request_with_endpoint()"},"keyword":"When "},{"result":{"duration":4036000,"status":"passed"},"line":8,"name":"User recieves 200 created with response body and sets dietician bearer token","match":{"arguments":[{"val":"200","offset":14}],"location":"stepDefinition.AdminOpeationWithDieticianTokenStepDef.user_recieves_created_with_response_body_and_sets_dietician_bearer_token(java.lang.Integer)"},"keyword":"Then "}]},{"start_timestamp":"2024-08-22T21:08:52.964Z","line":16,"name":"Check admin able to update dietician with valid data, dietician id and dietician token","description":"","id":"admin-does-all-the-operations-with-dietician-token;check-admin-able-to-update-dietician-with-valid-data--dietician-id-and-dietician-token","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":17,"name":"Admin creates PUT request with valid data","match":{"location":"stepDefinition.AdminOpeationWithDieticianTokenStepDef.admin_creates_put_request_with_valid_data()"},"keyword":"Given "},{"result":{"duration":1135586700,"status":"passed"},"line":18,"name":"Admin send PUT http request with endpoint with dietician token","match":{"location":"stepDefinition.AdminOpeationWithDieticianTokenStepDef.admin_send_put_http_request_with_endpoint_with_dietician_token()"},"keyword":"When "},{"result":{"error_message":"java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)\r\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)\r\n\tat java.base/java.util.Objects.checkIndex(Objects.java:385)\r\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\r\n\tat stepDefinition.AminTokenStepDef.<init>(AminTokenStepDef.java:35)\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\r\n\tat org.picocontainer.injectors.AbstractInjector.newInstance(AbstractInjector.java:145)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:342)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:678)\r\n\tat io.cucumber.picocontainer.PicoFactory.getInstance(PicoFactory.java:64)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)\r\n\tat io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:84)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:56)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:84)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)\r\n\tat io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\r\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\r\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\r\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\r\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\r\n\tat org.testng.TestRunner.run(TestRunner.java:614)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:312)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1208)\r\n\tat org.testng.TestNG.runSuites(TestNG.java:1112)\r\n\tat org.testng.TestNG.run(TestNG.java:1079)\r\n\tat org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)\r\n\tat org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)\r\n\tat org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)\r\n","duration":1001100,"status":"failed"},"line":19,"name":"Admin recieves 403 forbidden","match":{"arguments":[{"val":"403","offset":15}],"location":"stepDefinition.AminTokenStepDef.admin_recieves_forbidden(int)"},"keyword":"Then "}]}],"name":"Admin does all the operations with dietician token","description":"  Admin tries to do all the operations with dietician token","id":"admin-does-all-the-operations-with-dietician-token","keyword":"Feature","uri":"file:src/test/resources/Features/1_AdminModule/AdminOperationwithDieticianToken.feature","tags":[]},{"line":2,"elements":[{"line":5,"name":"Set no auth","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:08:55.381Z","line":7,"name":"Check admin able to create dietician with valid data","description":"","id":"checking-all-the-requests-with-no-auth;check-admin-able-to-create-dietician-with-valid-data","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1992700,"status":"passed"},"line":8,"name":"Admin creates request with valid data with no auth","match":{"location":"stepDefinition.NoAuth_AdminModuleStepDef.admin_creates_request_with_valid_data_with_no_auth()"},"keyword":"Given "},{"result":{"duration":1179163100,"status":"passed"},"line":9,"name":"Admin send POST http request with endpoint with no auth","match":{"location":"stepDefinition.NoAuth_AdminModuleStepDef.admin_send_post_http_request_with_endpoint_with_no_auth()"},"keyword":"When "},{"result":{"duration":997200,"status":"passed"},"line":10,"name":"Admin recieves 401 unauthorized","match":{"arguments":[{"val":"401","offset":15}],"location":"stepDefinition.NoAuth_AdminModuleStepDef.admin_recieves_unauthorized(java.lang.Integer)"},"keyword":"Then "}]},{"line":5,"name":"Set no auth","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:08:56.570Z","line":13,"name":"Check admin able to retrieve all dietician in get all request","description":"","id":"checking-all-the-requests-with-no-auth;check-admin-able-to-retrieve-all-dietician-in-get-all-request","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1089500,"status":"passed"},"line":14,"name":"Admin creates request with valid data with no auth","match":{"location":"stepDefinition.NoAuth_AdminModuleStepDef.admin_creates_request_with_valid_data_with_no_auth()"},"keyword":"Given "},{"result":{"duration":1308825400,"status":"passed"},"line":15,"name":"Admin send GET http request with get endpoint","match":{"location":"stepDefinition.NoAuth_AdminModuleStepDef.admin_send_get_http_request_with_get_endpoint()"},"keyword":"When "},{"result":{"duration":995600,"status":"passed"},"line":16,"name":"Admin recieves 401 unauthorized","match":{"arguments":[{"val":"401","offset":15}],"location":"stepDefinition.NoAuth_AdminModuleStepDef.admin_recieves_unauthorized(java.lang.Integer)"},"keyword":"Then "}]},{"line":5,"name":"Set no auth","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:08:57.885Z","line":18,"name":"Check admin able to retrieve dietician by ID with no auth","description":"","id":"checking-all-the-requests-with-no-auth;check-admin-able-to-retrieve-dietician-by-id-with-no-auth","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1001200,"status":"passed"},"line":19,"name":"Admin creates request with valid data with no auth","match":{"location":"stepDefinition.NoAuth_AdminModuleStepDef.admin_creates_request_with_valid_data_with_no_auth()"},"keyword":"Given "},{"result":{"error_message":"java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)\r\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)\r\n\tat java.base/java.util.Objects.checkIndex(Objects.java:385)\r\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\r\n\tat stepDefinition.AminTokenStepDef.<init>(AminTokenStepDef.java:35)\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\r\n\tat org.picocontainer.injectors.AbstractInjector.newInstance(AbstractInjector.java:145)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:342)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:678)\r\n\tat io.cucumber.picocontainer.PicoFactory.getInstance(PicoFactory.java:64)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)\r\n\tat io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:84)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:56)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:84)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)\r\n\tat io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\r\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\r\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\r\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\r\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\r\n\tat org.testng.TestRunner.run(TestRunner.java:614)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:312)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1208)\r\n\tat org.testng.TestNG.runSuites(TestNG.java:1112)\r\n\tat org.testng.TestNG.run(TestNG.java:1079)\r\n\tat org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)\r\n\tat org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)\r\n\tat org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)\r\n","status":"failed"},"line":20,"name":"Admin send GET http request with endpoint","match":{"location":"stepDefinition.AminTokenStepDef.admin_send_get_http_request_with_endpoint()"},"keyword":"When "},{"result":{"status":"skipped"},"line":21,"name":"Admin recieves 401 unauthorized","match":{"arguments":[{"val":"401","offset":15}],"location":"stepDefinition.NoAuth_AdminModuleStepDef.admin_recieves_unauthorized(java.lang.Integer)"},"keyword":"Then "}]},{"line":5,"name":"Set no auth","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:08:57.892Z","line":24,"name":"Check admin able to update dietician with valid data and dietician id without authorization","description":"","id":"checking-all-the-requests-with-no-auth;check-admin-able-to-update-dietician-with-valid-data-and-dietician-id-without-authorization","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1999200,"status":"passed"},"line":25,"name":"Admin creates request with valid data with no auth","match":{"location":"stepDefinition.NoAuth_AdminModuleStepDef.admin_creates_request_with_valid_data_with_no_auth()"},"keyword":"Given "},{"result":{"duration":1387518300,"status":"passed"},"line":26,"name":"Admin send PUT http request with endpoint","match":{"location":"stepDefinition.NoAuth_AdminModuleStepDef.admin_send_put_http_request_with_endpoint()"},"keyword":"When "},{"result":{"status":"passed"},"line":27,"name":"Admin recieves 401 unauthorized","match":{"arguments":[{"val":"401","offset":15}],"location":"stepDefinition.NoAuth_AdminModuleStepDef.admin_recieves_unauthorized(java.lang.Integer)"},"keyword":"Then "}]},{"line":5,"name":"Set no auth","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:08:59.287Z","line":29,"name":"Check admin able to delete dietician by ID without authorization","description":"","id":"checking-all-the-requests-with-no-auth;check-admin-able-to-delete-dietician-by-id-without-authorization","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":2526200,"status":"passed"},"line":30,"name":"Admin creates request with valid data with no auth","match":{"location":"stepDefinition.NoAuth_AdminModuleStepDef.admin_creates_request_with_valid_data_with_no_auth()"},"keyword":"Given "},{"result":{"duration":1158898400,"status":"passed"},"line":31,"name":"Admin send DELETE http request with endpoint with no auth","match":{"location":"stepDefinition.NoAuth_AdminModuleStepDef.admin_send_delete_http_request_with_endpoint_with_no_auth()"},"keyword":"When "},{"result":{"status":"passed"},"line":32,"name":"Admin recieves 401 unauthorized","match":{"arguments":[{"val":"401","offset":15}],"location":"stepDefinition.NoAuth_AdminModuleStepDef.admin_recieves_unauthorized(java.lang.Integer)"},"keyword":"Then "}]}],"name":"Checking all the requests with no auth","description":"  Admin check all the requests with no Auth in the header","id":"checking-all-the-requests-with-no-auth","keyword":"Feature","uri":"file:src/test/resources/Features/1_AdminModule/NoAuth.feature","tags":[]},{"line":4,"elements":[{"line":6,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":2001100,"status":"passed"},"line":7,"name":"Set dietician bearer token","match":{"location":"stepDefinition.PatientPostStepDef.set_dietician_bearer_token()"},"keyword":"Given "}]},{"start_timestamp":"2024-08-22T21:09:00.454Z","line":17,"name":"Patient creation","description":"","id":"post-operation-[create-patient];patient-creation;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":112634700,"status":"passed"},"line":11,"name":"Dietician creates POST request by entering  data for the \"ValidOne\" from the \"PatientPost\"","match":{"arguments":[{"val":"\"ValidOne\"","offset":57},{"val":"\"PatientPost\"","offset":77}],"location":"stepDefinition.PatientPostStepDef.dietician_creates_post_request_by_entering_data_for_the_from_the(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"error_message":"java.lang.IllegalArgumentException: Content-Type application/json is not valid when using multiparts, it must start with \"multipart/\" or contain \"multipart+\".\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.RequestSpecificationImpl.registerRestAssuredEncoders(RequestSpecificationImpl.groovy:1412)\r\n\tat io.restassured.internal.RequestSpecificationImpl.this$2$registerRestAssuredEncoders(RequestSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)\r\n\tat groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.RequestSpecificationImpl.sendRequest(RequestSpecificationImpl.groovy:1171)\r\n\tat io.restassured.internal.RequestSpecificationImpl.this$2$sendRequest(RequestSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)\r\n\tat groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:166)\r\n\tat io.restassured.internal.filter.SendRequestFilter.filter(SendRequestFilter.groovy:30)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.time.TimingFilter.filter(TimingFilter.java:56)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.FilterContext$next.call(Unknown Source)\r\n\tat io.restassured.internal.filter.CsrfFilter.filter(CsrfFilter.groovy:70)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.log.StatusCodeBasedLoggingFilter.filter(StatusCodeBasedLoggingFilter.java:112)\r\n\tat io.restassured.filter.log.ResponseLoggingFilter.filter(ResponseLoggingFilter.java:31)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.log.RequestLoggingFilter.filter(RequestLoggingFilter.java:148)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.FilterContext$next.call(Unknown Source)\r\n\tat io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1704)\r\n\tat io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)\r\n\tat groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)\r\n\tat io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1710)\r\n\tat io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)\r\n\tat groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)\r\n\tat io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy:176)\r\n\tat io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy)\r\n\tat stepDefinition.PatientPostStepDef.dietician_send_post_http_request_with_endpoint(PatientPostStepDef.java:98)\r\n\tat ✽.Dietician send POST http request with endpoint(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/2_DieticianModule/001_Patient.feature:12)\r\n","duration":147315200,"status":"failed"},"line":12,"name":"Dietician send POST http request with endpoint","match":{"location":"stepDefinition.PatientPostStepDef.dietician_send_post_http_request_with_endpoint()"},"keyword":"When "},{"result":{"status":"skipped"},"line":13,"name":"Dietician recieves response for the respective \"ValidOne\"","match":{"arguments":[{"val":"\"ValidOne\"","offset":47}],"location":"stepDefinition.PatientPostStepDef.dietician_recieves_response_for_the_respective(java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@tag"},{"name":"@patient"},{"name":"@tag1"}]},{"line":6,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":1999800,"status":"passed"},"line":7,"name":"Set dietician bearer token","match":{"location":"stepDefinition.PatientPostStepDef.set_dietician_bearer_token()"},"keyword":"Given "}]},{"start_timestamp":"2024-08-22T21:09:00.731Z","line":18,"name":"Patient creation","description":"","id":"post-operation-[create-patient];patient-creation;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":86247800,"status":"passed"},"line":11,"name":"Dietician creates POST request by entering  data for the \"ValidTwo\" from the \"PatientPost\"","match":{"arguments":[{"val":"\"ValidTwo\"","offset":57},{"val":"\"PatientPost\"","offset":77}],"location":"stepDefinition.PatientPostStepDef.dietician_creates_post_request_by_entering_data_for_the_from_the(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"error_message":"java.lang.IllegalArgumentException: Content-Type application/json is not valid when using multiparts, it must start with \"multipart/\" or contain \"multipart+\".\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.RequestSpecificationImpl.registerRestAssuredEncoders(RequestSpecificationImpl.groovy:1412)\r\n\tat io.restassured.internal.RequestSpecificationImpl.this$2$registerRestAssuredEncoders(RequestSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)\r\n\tat groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.RequestSpecificationImpl.sendRequest(RequestSpecificationImpl.groovy:1171)\r\n\tat io.restassured.internal.RequestSpecificationImpl.this$2$sendRequest(RequestSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)\r\n\tat groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:166)\r\n\tat io.restassured.internal.filter.SendRequestFilter.filter(SendRequestFilter.groovy:30)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.time.TimingFilter.filter(TimingFilter.java:56)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.FilterContext$next.call(Unknown Source)\r\n\tat io.restassured.internal.filter.CsrfFilter.filter(CsrfFilter.groovy:70)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.log.StatusCodeBasedLoggingFilter.filter(StatusCodeBasedLoggingFilter.java:112)\r\n\tat io.restassured.filter.log.ResponseLoggingFilter.filter(ResponseLoggingFilter.java:31)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.log.RequestLoggingFilter.filter(RequestLoggingFilter.java:148)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.FilterContext$next.call(Unknown Source)\r\n\tat io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1704)\r\n\tat io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)\r\n\tat groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)\r\n\tat io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1710)\r\n\tat io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)\r\n\tat groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)\r\n\tat io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy:176)\r\n\tat io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy)\r\n\tat stepDefinition.PatientPostStepDef.dietician_send_post_http_request_with_endpoint(PatientPostStepDef.java:98)\r\n\tat ✽.Dietician send POST http request with endpoint(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/2_DieticianModule/001_Patient.feature:12)\r\n","duration":57366700,"status":"failed"},"line":12,"name":"Dietician send POST http request with endpoint","match":{"location":"stepDefinition.PatientPostStepDef.dietician_send_post_http_request_with_endpoint()"},"keyword":"When "},{"result":{"status":"skipped"},"line":13,"name":"Dietician recieves response for the respective \"ValidTwo\"","match":{"arguments":[{"val":"\"ValidTwo\"","offset":47}],"location":"stepDefinition.PatientPostStepDef.dietician_recieves_response_for_the_respective(java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@tag"},{"name":"@patient"},{"name":"@tag1"}]},{"line":6,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":2010800,"status":"passed"},"line":7,"name":"Set dietician bearer token","match":{"location":"stepDefinition.PatientPostStepDef.set_dietician_bearer_token()"},"keyword":"Given "}]},{"start_timestamp":"2024-08-22T21:09:00.892Z","line":19,"name":"Patient creation","description":"","id":"post-operation-[create-patient];patient-creation;;4","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":51728300,"status":"passed"},"line":11,"name":"Dietician creates POST request by entering  data for the \"ValidAdditional\" from the \"PatientPost\"","match":{"arguments":[{"val":"\"ValidAdditional\"","offset":57},{"val":"\"PatientPost\"","offset":84}],"location":"stepDefinition.PatientPostStepDef.dietician_creates_post_request_by_entering_data_for_the_from_the(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"error_message":"java.lang.IllegalArgumentException: Content-Type application/json is not valid when using multiparts, it must start with \"multipart/\" or contain \"multipart+\".\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.RequestSpecificationImpl.registerRestAssuredEncoders(RequestSpecificationImpl.groovy:1412)\r\n\tat io.restassured.internal.RequestSpecificationImpl.this$2$registerRestAssuredEncoders(RequestSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)\r\n\tat groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.RequestSpecificationImpl.sendRequest(RequestSpecificationImpl.groovy:1171)\r\n\tat io.restassured.internal.RequestSpecificationImpl.this$2$sendRequest(RequestSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)\r\n\tat groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:166)\r\n\tat io.restassured.internal.filter.SendRequestFilter.filter(SendRequestFilter.groovy:30)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.time.TimingFilter.filter(TimingFilter.java:56)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.FilterContext$next.call(Unknown Source)\r\n\tat io.restassured.internal.filter.CsrfFilter.filter(CsrfFilter.groovy:70)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.log.StatusCodeBasedLoggingFilter.filter(StatusCodeBasedLoggingFilter.java:112)\r\n\tat io.restassured.filter.log.ResponseLoggingFilter.filter(ResponseLoggingFilter.java:31)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.log.RequestLoggingFilter.filter(RequestLoggingFilter.java:148)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.FilterContext$next.call(Unknown Source)\r\n\tat io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1704)\r\n\tat io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)\r\n\tat groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)\r\n\tat io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1710)\r\n\tat io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)\r\n\tat groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)\r\n\tat io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy:176)\r\n\tat io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy)\r\n\tat stepDefinition.PatientPostStepDef.dietician_send_post_http_request_with_endpoint(PatientPostStepDef.java:98)\r\n\tat ✽.Dietician send POST http request with endpoint(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/2_DieticianModule/001_Patient.feature:12)\r\n","duration":24065800,"status":"failed"},"line":12,"name":"Dietician send POST http request with endpoint","match":{"location":"stepDefinition.PatientPostStepDef.dietician_send_post_http_request_with_endpoint()"},"keyword":"When "},{"result":{"status":"skipped"},"line":13,"name":"Dietician recieves response for the respective \"ValidAdditional\"","match":{"arguments":[{"val":"\"ValidAdditional\"","offset":47}],"location":"stepDefinition.PatientPostStepDef.dietician_recieves_response_for_the_respective(java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@tag"},{"name":"@patient"},{"name":"@tag1"}]},{"line":6,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":1535700,"status":"passed"},"line":7,"name":"Set dietician bearer token","match":{"location":"stepDefinition.PatientPostStepDef.set_dietician_bearer_token()"},"keyword":"Given "}]},{"start_timestamp":"2024-08-22T21:09:00.977Z","line":20,"name":"Patient creation","description":"","id":"post-operation-[create-patient];patient-creation;;5","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":73863800,"status":"passed"},"line":11,"name":"Dietician creates POST request by entering  data for the \"InvalidData\" from the \"PatientPost\"","match":{"arguments":[{"val":"\"InvalidData\"","offset":57},{"val":"\"PatientPost\"","offset":80}],"location":"stepDefinition.PatientPostStepDef.dietician_creates_post_request_by_entering_data_for_the_from_the(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"error_message":"java.lang.IllegalArgumentException: Content-Type application/json is not valid when using multiparts, it must start with \"multipart/\" or contain \"multipart+\".\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.RequestSpecificationImpl.registerRestAssuredEncoders(RequestSpecificationImpl.groovy:1412)\r\n\tat io.restassured.internal.RequestSpecificationImpl.this$2$registerRestAssuredEncoders(RequestSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)\r\n\tat groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.RequestSpecificationImpl.sendRequest(RequestSpecificationImpl.groovy:1171)\r\n\tat io.restassured.internal.RequestSpecificationImpl.this$2$sendRequest(RequestSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)\r\n\tat groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:166)\r\n\tat io.restassured.internal.filter.SendRequestFilter.filter(SendRequestFilter.groovy:30)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.time.TimingFilter.filter(TimingFilter.java:56)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.FilterContext$next.call(Unknown Source)\r\n\tat io.restassured.internal.filter.CsrfFilter.filter(CsrfFilter.groovy:70)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.log.StatusCodeBasedLoggingFilter.filter(StatusCodeBasedLoggingFilter.java:112)\r\n\tat io.restassured.filter.log.ResponseLoggingFilter.filter(ResponseLoggingFilter.java:31)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.log.RequestLoggingFilter.filter(RequestLoggingFilter.java:148)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.FilterContext$next.call(Unknown Source)\r\n\tat io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1704)\r\n\tat io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)\r\n\tat groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)\r\n\tat io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1710)\r\n\tat io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)\r\n\tat groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)\r\n\tat io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy:176)\r\n\tat io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy)\r\n\tat stepDefinition.PatientPostStepDef.dietician_send_post_http_request_with_endpoint(PatientPostStepDef.java:98)\r\n\tat ✽.Dietician send POST http request with endpoint(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/2_DieticianModule/001_Patient.feature:12)\r\n","duration":44517300,"status":"failed"},"line":12,"name":"Dietician send POST http request with endpoint","match":{"location":"stepDefinition.PatientPostStepDef.dietician_send_post_http_request_with_endpoint()"},"keyword":"When "},{"result":{"status":"skipped"},"line":13,"name":"Dietician recieves response for the respective \"InvalidData\"","match":{"arguments":[{"val":"\"InvalidData\"","offset":47}],"location":"stepDefinition.PatientPostStepDef.dietician_recieves_response_for_the_respective(java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@tag"},{"name":"@patient"},{"name":"@tag1"}]},{"line":6,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":1998000,"status":"passed"},"line":7,"name":"Set dietician bearer token","match":{"location":"stepDefinition.PatientPostStepDef.set_dietician_bearer_token()"},"keyword":"Given "}]},{"start_timestamp":"2024-08-22T21:09:01.114Z","line":21,"name":"Patient creation","description":"","id":"post-operation-[create-patient];patient-creation;;6","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":79020800,"status":"passed"},"line":11,"name":"Dietician creates POST request by entering  data for the \"InvalidAdditional\" from the \"PatientPost\"","match":{"arguments":[{"val":"\"InvalidAdditional\"","offset":57},{"val":"\"PatientPost\"","offset":86}],"location":"stepDefinition.PatientPostStepDef.dietician_creates_post_request_by_entering_data_for_the_from_the(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"error_message":"java.lang.IllegalArgumentException: Content-Type application/json is not valid when using multiparts, it must start with \"multipart/\" or contain \"multipart+\".\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.RequestSpecificationImpl.registerRestAssuredEncoders(RequestSpecificationImpl.groovy:1412)\r\n\tat io.restassured.internal.RequestSpecificationImpl.this$2$registerRestAssuredEncoders(RequestSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)\r\n\tat groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.RequestSpecificationImpl.sendRequest(RequestSpecificationImpl.groovy:1171)\r\n\tat io.restassured.internal.RequestSpecificationImpl.this$2$sendRequest(RequestSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)\r\n\tat groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:166)\r\n\tat io.restassured.internal.filter.SendRequestFilter.filter(SendRequestFilter.groovy:30)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.time.TimingFilter.filter(TimingFilter.java:56)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.FilterContext$next.call(Unknown Source)\r\n\tat io.restassured.internal.filter.CsrfFilter.filter(CsrfFilter.groovy:70)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.log.StatusCodeBasedLoggingFilter.filter(StatusCodeBasedLoggingFilter.java:112)\r\n\tat io.restassured.filter.log.ResponseLoggingFilter.filter(ResponseLoggingFilter.java:31)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.log.RequestLoggingFilter.filter(RequestLoggingFilter.java:148)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.FilterContext$next.call(Unknown Source)\r\n\tat io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1704)\r\n\tat io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)\r\n\tat groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)\r\n\tat io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1710)\r\n\tat io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)\r\n\tat groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)\r\n\tat io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy:176)\r\n\tat io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy)\r\n\tat stepDefinition.PatientPostStepDef.dietician_send_post_http_request_with_endpoint(PatientPostStepDef.java:98)\r\n\tat ✽.Dietician send POST http request with endpoint(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/2_DieticianModule/001_Patient.feature:12)\r\n","duration":36852600,"status":"failed"},"line":12,"name":"Dietician send POST http request with endpoint","match":{"location":"stepDefinition.PatientPostStepDef.dietician_send_post_http_request_with_endpoint()"},"keyword":"When "},{"result":{"status":"skipped"},"line":13,"name":"Dietician recieves response for the respective \"InvalidAdditional\"","match":{"arguments":[{"val":"\"InvalidAdditional\"","offset":47}],"location":"stepDefinition.PatientPostStepDef.dietician_recieves_response_for_the_respective(java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@tag"},{"name":"@patient"},{"name":"@tag1"}]},{"line":6,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":2015600,"status":"passed"},"line":7,"name":"Set dietician bearer token","match":{"location":"stepDefinition.PatientPostStepDef.set_dietician_bearer_token()"},"keyword":"Given "}]},{"start_timestamp":"2024-08-22T21:09:01.246Z","line":22,"name":"Patient creation","description":"","id":"post-operation-[create-patient];patient-creation;;7","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":55491800,"status":"passed"},"line":11,"name":"Dietician creates POST request by entering  data for the \"Duplicate\" from the \"PatientPost\"","match":{"arguments":[{"val":"\"Duplicate\"","offset":57},{"val":"\"PatientPost\"","offset":78}],"location":"stepDefinition.PatientPostStepDef.dietician_creates_post_request_by_entering_data_for_the_from_the(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"error_message":"java.lang.IllegalArgumentException: Content-Type application/json is not valid when using multiparts, it must start with \"multipart/\" or contain \"multipart+\".\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.RequestSpecificationImpl.registerRestAssuredEncoders(RequestSpecificationImpl.groovy:1412)\r\n\tat io.restassured.internal.RequestSpecificationImpl.this$2$registerRestAssuredEncoders(RequestSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)\r\n\tat groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.RequestSpecificationImpl.sendRequest(RequestSpecificationImpl.groovy:1171)\r\n\tat io.restassured.internal.RequestSpecificationImpl.this$2$sendRequest(RequestSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)\r\n\tat groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:166)\r\n\tat io.restassured.internal.filter.SendRequestFilter.filter(SendRequestFilter.groovy:30)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.time.TimingFilter.filter(TimingFilter.java:56)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.FilterContext$next.call(Unknown Source)\r\n\tat io.restassured.internal.filter.CsrfFilter.filter(CsrfFilter.groovy:70)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.log.StatusCodeBasedLoggingFilter.filter(StatusCodeBasedLoggingFilter.java:112)\r\n\tat io.restassured.filter.log.ResponseLoggingFilter.filter(ResponseLoggingFilter.java:31)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.log.RequestLoggingFilter.filter(RequestLoggingFilter.java:148)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.FilterContext$next.call(Unknown Source)\r\n\tat io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1704)\r\n\tat io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)\r\n\tat groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)\r\n\tat io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1710)\r\n\tat io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)\r\n\tat groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)\r\n\tat io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy:176)\r\n\tat io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy)\r\n\tat stepDefinition.PatientPostStepDef.dietician_send_post_http_request_with_endpoint(PatientPostStepDef.java:98)\r\n\tat ✽.Dietician send POST http request with endpoint(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/2_DieticianModule/001_Patient.feature:12)\r\n","duration":47452100,"status":"failed"},"line":12,"name":"Dietician send POST http request with endpoint","match":{"location":"stepDefinition.PatientPostStepDef.dietician_send_post_http_request_with_endpoint()"},"keyword":"When "},{"result":{"status":"skipped"},"line":13,"name":"Dietician recieves response for the respective \"Duplicate\"","match":{"arguments":[{"val":"\"Duplicate\"","offset":47}],"location":"stepDefinition.PatientPostStepDef.dietician_recieves_response_for_the_respective(java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@tag"},{"name":"@patient"},{"name":"@tag1"}]},{"line":6,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":3072000,"status":"passed"},"line":7,"name":"Set dietician bearer token","match":{"location":"stepDefinition.PatientPostStepDef.set_dietician_bearer_token()"},"keyword":"Given "}]},{"start_timestamp":"2024-08-22T21:09:01.385Z","line":25,"name":"Creation of patient with invalid method","description":"","id":"post-operation-[create-patient];creation-of-patient-with-invalid-method","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":69928300,"status":"passed"},"line":26,"name":"Dietician creates POST request by entering  data for the \"InvalidMethod\" from the \"PatientPost\"","match":{"arguments":[{"val":"\"InvalidMethod\"","offset":57},{"val":"\"PatientPost\"","offset":82}],"location":"stepDefinition.PatientPostStepDef.dietician_creates_post_request_by_entering_data_for_the_from_the(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"error_message":"java.lang.IllegalArgumentException: Content-Type application/json is not valid when using multiparts, it must start with \"multipart/\" or contain \"multipart+\".\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.RequestSpecificationImpl.registerRestAssuredEncoders(RequestSpecificationImpl.groovy:1412)\r\n\tat io.restassured.internal.RequestSpecificationImpl.this$2$registerRestAssuredEncoders(RequestSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)\r\n\tat groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.RequestSpecificationImpl.sendRequest(RequestSpecificationImpl.groovy:1171)\r\n\tat io.restassured.internal.RequestSpecificationImpl.this$2$sendRequest(RequestSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)\r\n\tat groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:166)\r\n\tat io.restassured.internal.filter.SendRequestFilter.filter(SendRequestFilter.groovy:30)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.time.TimingFilter.filter(TimingFilter.java:56)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.FilterContext$next.call(Unknown Source)\r\n\tat io.restassured.internal.filter.CsrfFilter.filter(CsrfFilter.groovy:70)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.log.StatusCodeBasedLoggingFilter.filter(StatusCodeBasedLoggingFilter.java:112)\r\n\tat io.restassured.filter.log.ResponseLoggingFilter.filter(ResponseLoggingFilter.java:31)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.log.RequestLoggingFilter.filter(RequestLoggingFilter.java:148)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.FilterContext$next.call(Unknown Source)\r\n\tat io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1704)\r\n\tat io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)\r\n\tat groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)\r\n\tat io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1710)\r\n\tat io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)\r\n\tat groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)\r\n\tat io.restassured.internal.RequestSpecificationImpl.put(RequestSpecificationImpl.groovy:180)\r\n\tat io.restassured.internal.RequestSpecificationImpl.put(RequestSpecificationImpl.groovy)\r\n\tat stepDefinition.PatientPostStepDef.dietician_send_http_request_with_endpoint_and_invalid_method(PatientPostStepDef.java:163)\r\n\tat ✽.Dietician send  http request with endpoint and invalid method(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/2_DieticianModule/001_Patient.feature:27)\r\n","duration":87943100,"status":"failed"},"line":27,"name":"Dietician send  http request with endpoint and invalid method","match":{"location":"stepDefinition.PatientPostStepDef.dietician_send_http_request_with_endpoint_and_invalid_method()"},"keyword":"When "},{"result":{"status":"skipped"},"line":28,"name":"Dietician recieves 405 statuscode","match":{"arguments":[{"val":"405","offset":19}],"location":"stepDefinition.PatientPostStepDef.dietician_recieves_statuscode(int)"},"keyword":"Then "}],"tags":[{"name":"@tag"},{"name":"@patient"}]},{"line":6,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":3294900,"status":"passed"},"line":7,"name":"Set dietician bearer token","match":{"location":"stepDefinition.PatientPostStepDef.set_dietician_bearer_token()"},"keyword":"Given "}]},{"start_timestamp":"2024-08-22T21:09:01.571Z","line":30,"name":"Creation of patient with invalid endpoint","description":"","id":"post-operation-[create-patient];creation-of-patient-with-invalid-endpoint","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":67661100,"status":"passed"},"line":31,"name":"Dietician creates POST request by entering  data for the \"InvalidEndPoint\" from the \"PatientPost\"","match":{"arguments":[{"val":"\"InvalidEndPoint\"","offset":57},{"val":"\"PatientPost\"","offset":84}],"location":"stepDefinition.PatientPostStepDef.dietician_creates_post_request_by_entering_data_for_the_from_the(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"error_message":"java.lang.IllegalArgumentException: Content-Type application/json is not valid when using multiparts, it must start with \"multipart/\" or contain \"multipart+\".\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.RequestSpecificationImpl.registerRestAssuredEncoders(RequestSpecificationImpl.groovy:1412)\r\n\tat io.restassured.internal.RequestSpecificationImpl.this$2$registerRestAssuredEncoders(RequestSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)\r\n\tat groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.RequestSpecificationImpl.sendRequest(RequestSpecificationImpl.groovy:1171)\r\n\tat io.restassured.internal.RequestSpecificationImpl.this$2$sendRequest(RequestSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)\r\n\tat groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:166)\r\n\tat io.restassured.internal.filter.SendRequestFilter.filter(SendRequestFilter.groovy:30)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.time.TimingFilter.filter(TimingFilter.java:56)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.FilterContext$next.call(Unknown Source)\r\n\tat io.restassured.internal.filter.CsrfFilter.filter(CsrfFilter.groovy:70)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.log.StatusCodeBasedLoggingFilter.filter(StatusCodeBasedLoggingFilter.java:112)\r\n\tat io.restassured.filter.log.ResponseLoggingFilter.filter(ResponseLoggingFilter.java:31)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.log.RequestLoggingFilter.filter(RequestLoggingFilter.java:148)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.FilterContext$next.call(Unknown Source)\r\n\tat io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1704)\r\n\tat io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)\r\n\tat groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)\r\n\tat io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1710)\r\n\tat io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)\r\n\tat groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1333)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1088)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1007)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:790)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)\r\n\tat io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy:176)\r\n\tat io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy)\r\n\tat stepDefinition.PatientPostStepDef.dietician_send_http_request_with_endpoint_and_invalid_endpoint(PatientPostStepDef.java:183)\r\n\tat ✽.Dietician send  http request with endpoint and invalid endpoint(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/2_DieticianModule/001_Patient.feature:32)\r\n","duration":27017600,"status":"failed"},"line":32,"name":"Dietician send  http request with endpoint and invalid endpoint","match":{"location":"stepDefinition.PatientPostStepDef.dietician_send_http_request_with_endpoint_and_invalid_endpoint()"},"keyword":"When "},{"result":{"duration":739300,"status":"skipped"},"line":33,"name":"Dietician recieves 404 statuscode","match":{"arguments":[{"val":"404","offset":19}],"location":"stepDefinition.PatientPostStepDef.dietician_recieves_statuscode(int)"},"keyword":"Then "}],"tags":[{"name":"@tag"},{"name":"@patient"}]}],"name":"Post Operation [create patient]","description":"","id":"post-operation-[create-patient]","keyword":"Feature","uri":"file:src/test/resources/Features/2_DieticianModule/001_Patient.feature","tags":[{"name":"@tag","type":"Tag","location":{"line":2,"column":1}},{"name":"@patient","type":"Tag","location":{"line":2,"column":6}}]},{"line":2,"elements":[{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"error_message":"java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)\r\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)\r\n\tat java.base/java.util.Objects.checkIndex(Objects.java:385)\r\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\r\n\tat stepDefinition.PatientPutAddNewReports.<init>(PatientPutAddNewReports.java:46)\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\r\n\tat org.picocontainer.injectors.AbstractInjector.newInstance(AbstractInjector.java:145)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:342)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:678)\r\n\tat io.cucumber.picocontainer.PicoFactory.getInstance(PicoFactory.java:64)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)\r\n\tat io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:84)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:56)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:84)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)\r\n\tat io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\r\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\r\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\r\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\r\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\r\n\tat org.testng.TestRunner.run(TestRunner.java:614)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:312)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1208)\r\n\tat org.testng.TestNG.runSuites(TestNG.java:1112)\r\n\tat org.testng.TestNG.run(TestNG.java:1079)\r\n\tat org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)\r\n\tat org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)\r\n\tat org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)\r\n","duration":1533600,"status":"failed"},"line":5,"name":"Set dietician bearer token for put","match":{"location":"stepDefinition.PatientPutAddNewReports.Set_dietician_bearer_token_put()"},"keyword":"Given "}]},{"start_timestamp":"2024-08-22T21:09:01.686Z","line":14,"name":"Update patient Add New Reports with/without Vitals for existing Patient","description":"","id":"put-operation-[add-new-reports-with/without-vitals-for-existing-patient;update-patient-add-new-reports-with/without-vitals-for-existing-patient;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"skipped"},"line":8,"name":"Dietician creates PUT request by entering  data for the \"Valid\" from the \"PatientPutVitals\"","match":{"arguments":[{"val":"\"Valid\"","offset":56},{"val":"\"PatientPutVitals\"","offset":73}],"location":"stepDefinition.PatientPutAddNewReports.dietician_creates_put_request_by_entering_data_for_the_from_the(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"status":"skipped"},"line":9,"name":"Dietician send PUT http request with endpoint","match":{"location":"stepDefinition.PatientPutAddNewReports.dietician_send_put_http_request_with_endpoint()"},"keyword":"When "},{"result":{"status":"skipped"},"line":10,"name":"Dietician recieves response for the respective \"Valid\" for add New Reports with or without Vitals","match":{"arguments":[{"val":"\"Valid\"","offset":47}],"location":"stepDefinition.PatientPutAddNewReports.dietician_recieves_response_for_the_respective_for_add_new_reports_with_without_vitals(java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@tag"},{"name":"@patient"},{"name":"@tag2"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"error_message":"java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)\r\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)\r\n\tat java.base/java.util.Objects.checkIndex(Objects.java:385)\r\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\r\n\tat stepDefinition.PatientPutAddNewReports.<init>(PatientPutAddNewReports.java:46)\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\r\n\tat org.picocontainer.injectors.AbstractInjector.newInstance(AbstractInjector.java:145)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:342)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:678)\r\n\tat io.cucumber.picocontainer.PicoFactory.getInstance(PicoFactory.java:64)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)\r\n\tat io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:84)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:56)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:84)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)\r\n\tat io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\r\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\r\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\r\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\r\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\r\n\tat org.testng.TestRunner.run(TestRunner.java:614)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:312)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1208)\r\n\tat org.testng.TestNG.runSuites(TestNG.java:1112)\r\n\tat org.testng.TestNG.run(TestNG.java:1079)\r\n\tat org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)\r\n\tat org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)\r\n\tat org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)\r\n","duration":1011600,"status":"failed"},"line":5,"name":"Set dietician bearer token for put","match":{"location":"stepDefinition.PatientPutAddNewReports.Set_dietician_bearer_token_put()"},"keyword":"Given "}]},{"start_timestamp":"2024-08-22T21:09:01.699Z","line":15,"name":"Update patient Add New Reports with/without Vitals for existing Patient","description":"","id":"put-operation-[add-new-reports-with/without-vitals-for-existing-patient;update-patient-add-new-reports-with/without-vitals-for-existing-patient;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"skipped"},"line":8,"name":"Dietician creates PUT request by entering  data for the \"InValidvitals\" from the \"PatientPutVitals\"","match":{"arguments":[{"val":"\"InValidvitals\"","offset":56},{"val":"\"PatientPutVitals\"","offset":81}],"location":"stepDefinition.PatientPutAddNewReports.dietician_creates_put_request_by_entering_data_for_the_from_the(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"status":"skipped"},"line":9,"name":"Dietician send PUT http request with endpoint","match":{"location":"stepDefinition.PatientPutAddNewReports.dietician_send_put_http_request_with_endpoint()"},"keyword":"When "},{"result":{"status":"skipped"},"line":10,"name":"Dietician recieves response for the respective \"InValidvitals\" for add New Reports with or without Vitals","match":{"arguments":[{"val":"\"InValidvitals\"","offset":47}],"location":"stepDefinition.PatientPutAddNewReports.dietician_recieves_response_for_the_respective_for_add_new_reports_with_without_vitals(java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@tag"},{"name":"@patient"},{"name":"@tag2"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"error_message":"java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)\r\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)\r\n\tat java.base/java.util.Objects.checkIndex(Objects.java:385)\r\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\r\n\tat stepDefinition.PatientPutAddNewReports.<init>(PatientPutAddNewReports.java:46)\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\r\n\tat org.picocontainer.injectors.AbstractInjector.newInstance(AbstractInjector.java:145)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:342)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:678)\r\n\tat io.cucumber.picocontainer.PicoFactory.getInstance(PicoFactory.java:64)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)\r\n\tat io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:84)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:56)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:84)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)\r\n\tat io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\r\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\r\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\r\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\r\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\r\n\tat org.testng.TestRunner.run(TestRunner.java:614)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:312)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1208)\r\n\tat org.testng.TestNG.runSuites(TestNG.java:1112)\r\n\tat org.testng.TestNG.run(TestNG.java:1079)\r\n\tat org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)\r\n\tat org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)\r\n\tat org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)\r\n","duration":1013600,"status":"failed"},"line":5,"name":"Set dietician bearer token for put","match":{"location":"stepDefinition.PatientPutAddNewReports.Set_dietician_bearer_token_put()"},"keyword":"Given "}]},{"start_timestamp":"2024-08-22T21:09:01.720Z","line":18,"name":"Update of patient with invalid method","description":"","id":"put-operation-[add-new-reports-with/without-vitals-for-existing-patient;update-of-patient-with-invalid-method","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"skipped"},"line":19,"name":"Dietician creates PUT request by entering  data for the \"InvalidMethod\" from the \"PatientPutVitals\"","match":{"arguments":[{"val":"\"InvalidMethod\"","offset":56},{"val":"\"PatientPutVitals\"","offset":81}],"location":"stepDefinition.PatientPutAddNewReports.dietician_creates_put_request_by_entering_data_for_the_from_the(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"status":"skipped"},"line":20,"name":"Dietician send  http request with endpoint and invalid method for Add New Reports with or without Vitals","match":{"location":"stepDefinition.PatientPutAddNewReports.dietician_send_http_request_with_endpoint_and_invalid_method_for_add_new_reports_with_without_vitals()"},"keyword":"When "},{"result":{"status":"skipped"},"line":21,"name":"Dietician recieves 405 statuscode for Add New Reports with or without Vitals","match":{"arguments":[{"val":"405","offset":19}],"location":"stepDefinition.PatientPutAddNewReports.dietician_recieves_statuscode_for_add_new_reports_with_without_vitals(java.lang.Integer)"},"keyword":"Then "}],"tags":[{"name":"@tag"},{"name":"@patient"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"error_message":"java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)\r\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)\r\n\tat java.base/java.util.Objects.checkIndex(Objects.java:385)\r\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\r\n\tat stepDefinition.PatientPutAddNewReports.<init>(PatientPutAddNewReports.java:46)\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\r\n\tat org.picocontainer.injectors.AbstractInjector.newInstance(AbstractInjector.java:145)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:342)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:678)\r\n\tat io.cucumber.picocontainer.PicoFactory.getInstance(PicoFactory.java:64)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)\r\n\tat io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:84)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:56)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:84)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)\r\n\tat io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\r\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\r\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\r\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\r\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\r\n\tat org.testng.TestRunner.run(TestRunner.java:614)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:312)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1208)\r\n\tat org.testng.TestNG.runSuites(TestNG.java:1112)\r\n\tat org.testng.TestNG.run(TestNG.java:1079)\r\n\tat org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)\r\n\tat org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)\r\n\tat org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)\r\n","duration":1011500,"status":"failed"},"line":5,"name":"Set dietician bearer token for put","match":{"location":"stepDefinition.PatientPutAddNewReports.Set_dietician_bearer_token_put()"},"keyword":"Given "}]},{"start_timestamp":"2024-08-22T21:09:01.729Z","line":23,"name":"Update of patient with invalid endpoint","description":"","id":"put-operation-[add-new-reports-with/without-vitals-for-existing-patient;update-of-patient-with-invalid-endpoint","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"skipped"},"line":24,"name":"Dietician creates PUT request by entering  data for the \"InvalidEndPoint\" from the \"PatientPutVitals\"","match":{"arguments":[{"val":"\"InvalidEndPoint\"","offset":56},{"val":"\"PatientPutVitals\"","offset":83}],"location":"stepDefinition.PatientPutAddNewReports.dietician_creates_put_request_by_entering_data_for_the_from_the(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"status":"skipped"},"line":25,"name":"Dietician send  http request with endpoint and invalid endpoint for Add New Reports with or without Vitals","match":{"location":"stepDefinition.PatientPutAddNewReports.dietician_send_http_request_with_endpoint_and_invalid_endpoint_for_add_new_reports_with_without_vitals()"},"keyword":"When "},{"result":{"status":"skipped"},"line":26,"name":"Dietician recieves 404 statuscode for Add New Reports with or without Vitals","match":{"arguments":[{"val":"404","offset":19}],"location":"stepDefinition.PatientPutAddNewReports.dietician_recieves_statuscode_for_add_new_reports_with_without_vitals(java.lang.Integer)"},"keyword":"Then "}],"tags":[{"name":"@tag"},{"name":"@patient"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:09:01.739Z","line":28,"name":"Update of patient with invalid content type","description":"","id":"put-operation-[add-new-reports-with/without-vitals-for-existing-patient;update-of-patient-with-invalid-content-type","type":"scenario","keyword":"Scenario","steps":[],"tags":[{"name":"@tag"},{"name":"@patient"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"error_message":"java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)\r\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)\r\n\tat java.base/java.util.Objects.checkIndex(Objects.java:385)\r\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\r\n\tat stepDefinition.PatientPutAddNewReports.<init>(PatientPutAddNewReports.java:46)\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\r\n\tat org.picocontainer.injectors.AbstractInjector.newInstance(AbstractInjector.java:145)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:342)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:678)\r\n\tat io.cucumber.picocontainer.PicoFactory.getInstance(PicoFactory.java:64)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)\r\n\tat io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:84)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:56)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:84)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)\r\n\tat io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\r\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\r\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\r\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\r\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\r\n\tat org.testng.TestRunner.run(TestRunner.java:614)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:312)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1208)\r\n\tat org.testng.TestNG.runSuites(TestNG.java:1112)\r\n\tat org.testng.TestNG.run(TestNG.java:1079)\r\n\tat org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)\r\n\tat org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)\r\n\tat org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)\r\n","duration":508800,"status":"failed"},"line":5,"name":"Set dietician bearer token for put","match":{"location":"stepDefinition.PatientPutAddNewReports.Set_dietician_bearer_token_put()"},"keyword":"Given "}]},{"start_timestamp":"2024-08-22T21:09:01.747Z","line":33,"name":"Update of patient with  nofile","description":"","id":"put-operation-[add-new-reports-with/without-vitals-for-existing-patient;update-of-patient-with--nofile","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"skipped"},"line":34,"name":"Dietician creates PUT request by entering  data for the \"Nofile\" from the \"PatientPutVitals\"","match":{"arguments":[{"val":"\"Nofile\"","offset":56},{"val":"\"PatientPutVitals\"","offset":74}],"location":"stepDefinition.PatientPutAddNewReports.dietician_creates_put_request_by_entering_data_for_the_from_the(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"status":"skipped"},"line":35,"name":"Dietician send PUT http request with endpoint with invalid vitals and nofile","match":{"location":"stepDefinition.PatientPutAddNewReports.dietician_send_put_http_request_with_endpoint_with_nofile()"},"keyword":"When "},{"result":{"status":"skipped"},"line":36,"name":"Dietician recieves 200 statuscode for Add New Reports with or without Vitals","match":{"arguments":[{"val":"200","offset":19}],"location":"stepDefinition.PatientPutAddNewReports.dietician_recieves_statuscode_for_add_new_reports_with_without_vitals(java.lang.Integer)"},"keyword":"Then "}],"tags":[{"name":"@tag"},{"name":"@patient"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"error_message":"java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)\r\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)\r\n\tat java.base/java.util.Objects.checkIndex(Objects.java:385)\r\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\r\n\tat stepDefinition.PatientPutAddNewReports.<init>(PatientPutAddNewReports.java:46)\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\r\n\tat org.picocontainer.injectors.AbstractInjector.newInstance(AbstractInjector.java:145)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:342)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:678)\r\n\tat io.cucumber.picocontainer.PicoFactory.getInstance(PicoFactory.java:64)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)\r\n\tat io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:84)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:56)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:84)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)\r\n\tat io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\r\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\r\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\r\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\r\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\r\n\tat org.testng.TestRunner.run(TestRunner.java:614)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:312)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1208)\r\n\tat org.testng.TestNG.runSuites(TestNG.java:1112)\r\n\tat org.testng.TestNG.run(TestNG.java:1079)\r\n\tat org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)\r\n\tat org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)\r\n\tat org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)\r\n","duration":981500,"status":"failed"},"line":5,"name":"Set dietician bearer token for put","match":{"location":"stepDefinition.PatientPutAddNewReports.Set_dietician_bearer_token_put()"},"keyword":"Given "}]},{"start_timestamp":"2024-08-22T21:09:01.761Z","line":39,"name":"Update of patient with  nofile","description":"","id":"put-operation-[add-new-reports-with/without-vitals-for-existing-patient;update-of-patient-with--nofile","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"skipped"},"line":40,"name":"Dietician creates PUT request by entering  data for the \"InvalidVitalsNoFile\" from the \"PatientPutVitals\"","match":{"arguments":[{"val":"\"InvalidVitalsNoFile\"","offset":56},{"val":"\"PatientPutVitals\"","offset":87}],"location":"stepDefinition.PatientPutAddNewReports.dietician_creates_put_request_by_entering_data_for_the_from_the(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"status":"skipped"},"line":41,"name":"Dietician send PUT http request with endpoint with invalid vitals and nofile","match":{"location":"stepDefinition.PatientPutAddNewReports.dietician_send_put_http_request_with_endpoint_with_nofile()"},"keyword":"When "},{"result":{"status":"skipped"},"line":42,"name":"Dietician recieves 400 statuscode for Add New Reports with or without Vitals","match":{"arguments":[{"val":"400","offset":19}],"location":"stepDefinition.PatientPutAddNewReports.dietician_recieves_statuscode_for_add_new_reports_with_without_vitals(java.lang.Integer)"},"keyword":"Then "}],"tags":[{"name":"@tag"},{"name":"@patient"}]}],"name":"Put Operation [Add New Reports with/without Vitals for existing Patient","description":"","id":"put-operation-[add-new-reports-with/without-vitals-for-existing-patient","keyword":"Feature","uri":"file:src/test/resources/Features/2_DieticianModule/002_PatientPutAddNewReports.feature","tags":[{"name":"@tag","type":"Tag","location":{"line":1,"column":1}},{"name":"@patient","type":"Tag","location":{"line":1,"column":6}}]},{"line":2,"elements":[{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":1986000,"status":"passed"},"line":5,"name":"Set dietician bearer token","match":{"location":"stepDefinition.PatientPostStepDef.set_dietician_bearer_token()"},"keyword":"Given "}]},{"start_timestamp":"2024-08-22T21:09:01.772Z","line":7,"name":"Check dietician able to retrieve patients morbidity details by patient id","description":"","id":"get-operation-[get-patients-morbidity-details-];check-dietician-able-to-retrieve-patients-morbidity-details-by-patient-id","type":"scenario","keyword":"Scenario","steps":[{"result":{"error_message":"java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)\r\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)\r\n\tat java.base/java.util.Objects.checkIndex(Objects.java:385)\r\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\r\n\tat stepDefinition.PAtientGetMorbDetailsStepDef.dietician_create_get_request(PAtientGetMorbDetailsStepDef.java:48)\r\n\tat ✽.Dietician create request(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/2_DieticianModule/003_PatientGetMorbDetails.feature:9)\r\n","duration":998400,"status":"failed"},"line":9,"name":"Dietician create request","match":{"location":"stepDefinition.PAtientGetMorbDetailsStepDef.dietician_create_get_request()"},"keyword":"Given "},{"result":{"status":"skipped"},"line":10,"name":"Dietician send GET http request with endpoint","match":{"location":"stepDefinition.PAtientGetMorbDetailsStepDef.dietician_send_get_http_request_with_endpoint()"},"keyword":"When "},{"result":{"status":"skipped"},"line":11,"name":"Dietician recieves 200 code","match":{"arguments":[{"val":"200","offset":19}],"location":"stepDefinition.PAtientGetMorbDetailsStepDef.dietician_recieves_code(int)"},"keyword":"Then "}],"tags":[{"name":"@tag"},{"name":"@patient"},{"name":"@tag3"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":1999900,"status":"passed"},"line":5,"name":"Set dietician bearer token","match":{"location":"stepDefinition.PatientPostStepDef.set_dietician_bearer_token()"},"keyword":"Given "}]},{"start_timestamp":"2024-08-22T21:09:01.780Z","line":14,"name":"Check dietician able to retrieve patients morbidity details by patient ID with invalid method","description":"","id":"get-operation-[get-patients-morbidity-details-];check-dietician-able-to-retrieve-patients-morbidity-details-by-patient-id-with-invalid-method","type":"scenario","keyword":"Scenario","steps":[{"result":{"error_message":"java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)\r\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)\r\n\tat java.base/java.util.Objects.checkIndex(Objects.java:385)\r\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\r\n\tat stepDefinition.PAtientGetMorbDetailsStepDef.dietician_create_get_request(PAtientGetMorbDetailsStepDef.java:48)\r\n\tat ✽.Dietician create request(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/2_DieticianModule/003_PatientGetMorbDetails.feature:16)\r\n","status":"failed"},"line":16,"name":"Dietician create request","match":{"location":"stepDefinition.PAtientGetMorbDetailsStepDef.dietician_create_get_request()"},"keyword":"Given "},{"result":{"status":"skipped"},"line":17,"name":"Dietician send POST http request with endpoint for the patients morbidity","match":{"location":"stepDefinition.PAtientGetMorbDetailsStepDef.dietician_send_post_http_request_with_endpoint_for_the_patients_morbidity()"},"keyword":"When "},{"result":{"status":"skipped"},"line":18,"name":"Dietician recieves 405 code","match":{"arguments":[{"val":"405","offset":19}],"location":"stepDefinition.PAtientGetMorbDetailsStepDef.dietician_recieves_code(int)"},"keyword":"Then "}],"tags":[{"name":"@tag"},{"name":"@patient"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":1789500,"status":"passed"},"line":5,"name":"Set dietician bearer token","match":{"location":"stepDefinition.PatientPostStepDef.set_dietician_bearer_token()"},"keyword":"Given "}]},{"start_timestamp":"2024-08-22T21:09:01.795Z","line":20,"name":"Check dietician able to retrieve patients morbidity details by invalid patient ID","description":"","id":"get-operation-[get-patients-morbidity-details-];check-dietician-able-to-retrieve-patients-morbidity-details-by-invalid-patient-id","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":21,"name":"Dietician create request for invalid patient ID","match":{"location":"stepDefinition.PAtientGetMorbDetailsStepDef.dietician_create_request_for_invalid_patient_id()"},"keyword":"Given "},{"result":{"duration":1364071400,"status":"passed"},"line":22,"name":"Dietician send GET http request with endpoint","match":{"location":"stepDefinition.PAtientGetMorbDetailsStepDef.dietician_send_get_http_request_with_endpoint()"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected [404] but found [401]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1383)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1429)\r\n\tat stepDefinition.PAtientGetMorbDetailsStepDef.dietician_recieves_code(PAtientGetMorbDetailsStepDef.java:87)\r\n\tat ✽.Dietician recieves 404 code(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/2_DieticianModule/003_PatientGetMorbDetails.feature:23)\r\n","duration":1475400,"status":"failed"},"line":23,"name":"Dietician recieves 404 code","match":{"arguments":[{"val":"404","offset":19}],"location":"stepDefinition.PAtientGetMorbDetailsStepDef.dietician_recieves_code(int)"},"keyword":"Then "}],"tags":[{"name":"@tag"},{"name":"@patient"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":6112500,"status":"passed"},"line":5,"name":"Set dietician bearer token","match":{"location":"stepDefinition.PatientPostStepDef.set_dietician_bearer_token()"},"keyword":"Given "}]},{"start_timestamp":"2024-08-22T21:09:03.206Z","line":25,"name":"Check dietician able to retrieve patients morbidity details by patient ID with invalid endpoint","description":"","id":"get-operation-[get-patients-morbidity-details-];check-dietician-able-to-retrieve-patients-morbidity-details-by-patient-id-with-invalid-endpoint","type":"scenario","keyword":"Scenario","steps":[{"result":{"error_message":"java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)\r\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)\r\n\tat java.base/java.util.Objects.checkIndex(Objects.java:385)\r\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\r\n\tat stepDefinition.PAtientGetMorbDetailsStepDef.dietician_create_get_request(PAtientGetMorbDetailsStepDef.java:48)\r\n\tat ✽.Dietician create request(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/2_DieticianModule/003_PatientGetMorbDetails.feature:27)\r\n","duration":3016400,"status":"failed"},"line":27,"name":"Dietician create request","match":{"location":"stepDefinition.PAtientGetMorbDetailsStepDef.dietician_create_get_request()"},"keyword":"Given "},{"result":{"duration":1003700,"status":"skipped"},"line":28,"name":"Dietician send GET http request with invalid endpoint","match":{},"keyword":"When "},{"result":{"status":"skipped"},"line":29,"name":"Dietician recieves 405 code","match":{"arguments":[{"val":"405","offset":19}],"location":"stepDefinition.PAtientGetMorbDetailsStepDef.dietician_recieves_code(int)"},"keyword":"Then "}],"tags":[{"name":"@tag"},{"name":"@patient"}]}],"name":"Get Operation [Get Patients Morbidity Details ]","description":"","id":"get-operation-[get-patients-morbidity-details-]","keyword":"Feature","uri":"file:src/test/resources/Features/2_DieticianModule/003_PatientGetMorbDetails.feature","tags":[{"name":"@tag","type":"Tag","location":{"line":1,"column":1}},{"name":"@patient","type":"Tag","location":{"line":1,"column":6}}]},{"line":1,"elements":[{"line":2,"name":"Set dietician bearer token","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:09:03.230Z","line":3,"name":"Check dietician able to update patient with valid data, patient id and token","description":"","id":"put-operation-update-patient;check-dietician-able-to-update-patient-with-valid-data--patient-id-and-token","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":12485700,"status":"passed"},"line":4,"name":"Dietician creates PUT request by entering valid data. ( Mandatory and additional details) into the form-data key and value fields.","match":{"location":"stepDefinition.PatientPut_Operation_Steps.dietician_creates_put_request_by_entering_valid_data_mandatory_and_additional_details_into_the_form_data_key_and_value_fields()"},"keyword":"Given "},{"result":{"error_message":"java.lang.NullPointerException: Cannot invoke \"com.codoid.products.fillo.Connection.close()\" because \"conn\" is null\r\n\tat utilities.ExcelUtilities.getTestDataInMap(ExcelUtilities.java:45)\r\n\tat stepDefinition.PatientPut_Operation_Steps.dietician_send_put_http_request_with_the_endpoint(PatientPut_Operation_Steps.java:41)\r\n\tat ✽.Dietician send PUT http request with the endpoint(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/2_DieticianModule/004_Patient_PutOperation.feature:5)\r\n","duration":3000700,"status":"failed"},"line":5,"name":"Dietician send PUT http request with the endpoint","match":{"location":"stepDefinition.PatientPut_Operation_Steps.dietician_send_put_http_request_with_the_endpoint()"},"keyword":"When "},{"result":{"status":"skipped"},"line":6,"name":"Dietician recieves 200 ok and with updated response body.","match":{"arguments":[{"val":"200","offset":19}],"location":"stepDefinition.PatientPut_Operation_Steps.dietician_recieves_ok_and_with_updated_response_body(java.lang.Integer)"},"keyword":"Then "}]},{"line":2,"name":"Set dietician bearer token","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:09:03.256Z","line":7,"name":"Check dietician able to update patient only with valid mandatory details","description":"","id":"put-operation-update-patient;check-dietician-able-to-update-patient-only-with-valid-mandatory-details","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":8,"name":"Dietician creates PUT request by entering only valid mandatory details into the form-data key and value fields.","match":{"location":"stepDefinition.PatientPut_Operation_Steps.dietician_creates_put_request_by_entering_only_valid_mandatory_details_into_the_form_data_key_and_value_fields()"},"keyword":"Given "},{"result":{"error_message":"java.lang.NullPointerException: Cannot invoke \"com.codoid.products.fillo.Connection.close()\" because \"conn\" is null\r\n\tat utilities.ExcelUtilities.getTestDataInMap(ExcelUtilities.java:45)\r\n\tat stepDefinition.PatientPut_Operation_Steps.dietician_send_put_http_request_for_madatory_field_only_with_endpoint(PatientPut_Operation_Steps.java:71)\r\n\tat ✽.Dietician send PUT http  request for madatory field only with endpoint(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/2_DieticianModule/004_Patient_PutOperation.feature:9)\r\n","duration":1971700,"status":"failed"},"line":9,"name":"Dietician send PUT http  request for madatory field only with endpoint","match":{"location":"stepDefinition.PatientPut_Operation_Steps.dietician_send_put_http_request_for_madatory_field_only_with_endpoint()"},"keyword":"When "},{"result":{"status":"skipped"},"line":10,"name":"Dietician recieves 200 ok and with updated response body.","match":{"arguments":[{"val":"200","offset":19}],"location":"stepDefinition.PatientPut_Operation_Steps.dietician_recieves_ok_and_with_updated_response_body(java.lang.Integer)"},"keyword":"Then "}]},{"line":2,"name":"Set dietician bearer token","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:09:03.281Z","line":11,"name":"Check dietician able to update patient with mandatory fields empty and only with valid additional details","description":"","id":"put-operation-update-patient;check-dietician-able-to-update-patient-with-mandatory-fields-empty-and-only-with-valid-additional-details","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":12,"name":"Dietician creates PUT request by entering only valid additional details into the form-data key and value fields.","match":{"location":"stepDefinition.PatientPut_Operation_Steps.dietician_creates_put_request_by_entering_only_valid_additional_details_into_the_form_data_key_and_value_fields()"},"keyword":"Given "},{"result":{"error_message":"java.lang.NullPointerException: Cannot invoke \"com.codoid.products.fillo.Connection.close()\" because \"conn\" is null\r\n\tat utilities.ExcelUtilities.getTestDataInMap(ExcelUtilities.java:45)\r\n\tat stepDefinition.PatientPut_Operation_Steps.dietician_send_http_put_request_with_mandatory_fields_empty_and_only_with_valid_additional_details_with_endpoint(PatientPut_Operation_Steps.java:109)\r\n\tat ✽.Dietician send  http PUT request with mandatory fields empty and only with valid additional details with endpoint(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/2_DieticianModule/004_Patient_PutOperation.feature:13)\r\n","duration":1004200,"status":"failed"},"line":13,"name":"Dietician send  http PUT request with mandatory fields empty and only with valid additional details with endpoint","match":{"location":"stepDefinition.PatientPut_Operation_Steps.dietician_send_http_put_request_with_mandatory_fields_empty_and_only_with_valid_additional_details_with_endpoint()"},"keyword":"When "},{"result":{"status":"skipped"},"line":14,"name":"Dietician recieves 400 Bad request","match":{"arguments":[{"val":"400","offset":19}],"location":"stepDefinition.PatientPut_Operation_Steps.dietician_recieves_bad_request(java.lang.Integer)"},"keyword":"Then "}]},{"line":2,"name":"Set dietician bearer token","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:09:03.290Z","line":15,"name":"Check dietician able to update patient with invalid data","description":"","id":"put-operation-update-patient;check-dietician-able-to-update-patient-with-invalid-data","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":612300,"status":"passed"},"line":16,"name":"Dietician creates PUT request by entering only invalid additional details into the form-data key and value fields.","match":{"location":"stepDefinition.PatientPut_Operation_Steps.dietician_creates_put_request_by_entering_only_invalid_additional_details_into_the_form_data_key_and_value_fields()"},"keyword":"Given "},{"result":{"error_message":"java.lang.NullPointerException: Cannot invoke \"com.codoid.products.fillo.Connection.close()\" because \"conn\" is null\r\n\tat utilities.ExcelUtilities.getTestDataInMap(ExcelUtilities.java:45)\r\n\tat stepDefinition.PatientPut_Operation_Steps.dietician_send_put_http_request_with_invalid_data_with_endpoint(PatientPut_Operation_Steps.java:135)\r\n\tat ✽.Dietician send PUT http request with invalid data with endpoint(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/2_DieticianModule/004_Patient_PutOperation.feature:17)\r\n","duration":510600,"status":"failed"},"line":17,"name":"Dietician send PUT http request with invalid data with endpoint","match":{"location":"stepDefinition.PatientPut_Operation_Steps.dietician_send_put_http_request_with_invalid_data_with_endpoint()"},"keyword":"When "},{"result":{"status":"skipped"},"line":18,"name":"Dietician recieves 400 Bad request","match":{"arguments":[{"val":"400","offset":19}],"location":"stepDefinition.PatientPut_Operation_Steps.dietician_recieves_bad_request(java.lang.Integer)"},"keyword":"Then "}]},{"line":2,"name":"Set dietician bearer token","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:09:03.297Z","line":19,"name":"Check dietician able to update patient with valid data and invalid patient id in path parameter","description":"","id":"put-operation-update-patient;check-dietician-able-to-update-patient-with-valid-data-and-invalid-patient-id-in-path-parameter","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":20,"name":"Dietician creates PUT request by entering only valid mandatory details into the form-data key and value fields.","match":{"location":"stepDefinition.PatientPut_Operation_Steps.dietician_creates_put_request_by_entering_only_valid_mandatory_details_into_the_form_data_key_and_value_fields()"},"keyword":"Given "},{"result":{"error_message":"java.lang.NullPointerException: Cannot invoke \"com.codoid.products.fillo.Connection.close()\" because \"conn\" is null\r\n\tat utilities.ExcelUtilities.getTestDataInMap(ExcelUtilities.java:45)\r\n\tat stepDefinition.PatientPut_Operation_Steps.dietician_send_put_http_request_with_valid_data_and_invalid_patient_id_with_endpoint(PatientPut_Operation_Steps.java:89)\r\n\tat ✽.Dietician send PUT http request with valid data and invalid patient id with endpoint(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/2_DieticianModule/004_Patient_PutOperation.feature:21)\r\n","duration":1511300,"status":"failed"},"line":21,"name":"Dietician send PUT http request with valid data and invalid patient id with endpoint","match":{"location":"stepDefinition.PatientPut_Operation_Steps.dietician_send_put_http_request_with_valid_data_and_invalid_patient_id_with_endpoint()"},"keyword":"When "},{"result":{"status":"skipped"},"line":22,"name":"Dietician recieves 404 not found","match":{"arguments":[{"val":"404","offset":19}],"location":"stepDefinition.PatientPut_Operation_Steps.dietician_recieves_not_found(java.lang.Integer)"},"keyword":"Then "}]},{"line":2,"name":"Set dietician bearer token","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:09:03.313Z","line":23,"name":"Check dietician able to update patient with existing file by not attaching new file","description":"","id":"put-operation-update-patient;check-dietician-able-to-update-patient-with-existing-file-by-not-attaching-new-file","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":24,"name":"Dietician creates PUT request by not attaching any file into the form-data key and value fields.","match":{"location":"stepDefinition.PatientPut_Operation_Steps.dietician_creates_put_request_by_not_attaching_any_file_into_the_form_data_key_and_value_fields()"},"keyword":"Given "},{"result":{"error_message":"java.lang.NullPointerException: Cannot invoke \"com.codoid.products.fillo.Connection.close()\" because \"conn\" is null\r\n\tat utilities.ExcelUtilities.getTestDataInMap(ExcelUtilities.java:45)\r\n\tat stepDefinition.PatientPut_Operation_Steps.dietician_send_put_http_request_by_not_attaching_any_file_into_the_form_data_with_endpoint(PatientPut_Operation_Steps.java:161)\r\n\tat ✽.Dietician send PUT http request by not attaching any file into the form-data with endpoint(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/2_DieticianModule/004_Patient_PutOperation.feature:25)\r\n","duration":996500,"status":"failed"},"line":25,"name":"Dietician send PUT http request by not attaching any file into the form-data with endpoint","match":{"location":"stepDefinition.PatientPut_Operation_Steps.dietician_send_put_http_request_by_not_attaching_any_file_into_the_form_data_with_endpoint()"},"keyword":"When "},{"result":{"status":"skipped"},"line":26,"name":"Dietician recieves 200 ok and with updated response body.","match":{"arguments":[{"val":"200","offset":19}],"location":"stepDefinition.PatientPut_Operation_Steps.dietician_recieves_ok_and_with_updated_response_body(java.lang.Integer)"},"keyword":"Then "}]},{"line":2,"name":"Set dietician bearer token","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:09:03.321Z","line":27,"name":"Check dietician able to update patient with valid data and invalid method","description":"","id":"put-operation-update-patient;check-dietician-able-to-update-patient-with-valid-data-and-invalid-method","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":28,"name":"Dietician creates PUT request by entering valid data into the form-data key and value fields.","match":{"location":"stepDefinition.PatientPut_Operation_Steps.dietician_creates_put_request_by_entering_valid_data_into_the_form_data_key_and_value_fields()"},"keyword":"Given "},{"result":{"error_message":"java.lang.NullPointerException: Cannot invoke \"com.codoid.products.fillo.Connection.close()\" because \"conn\" is null\r\n\tat utilities.ExcelUtilities.getTestDataInMap(ExcelUtilities.java:45)\r\n\tat stepDefinition.PatientPut_Operation_Steps.dietician_send_post_http_request_with_valid_data_and_invalid_method_with_endpoint(PatientPut_Operation_Steps.java:180)\r\n\tat ✽.Dietician send POST http request with valid data and invalid method with endpoint(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/2_DieticianModule/004_Patient_PutOperation.feature:29)\r\n","duration":1001500,"status":"failed"},"line":29,"name":"Dietician send POST http request with valid data and invalid method with endpoint","match":{"location":"stepDefinition.PatientPut_Operation_Steps.dietician_send_post_http_request_with_valid_data_and_invalid_method_with_endpoint()"},"keyword":"When "},{"result":{"status":"skipped"},"line":30,"name":"Dietician recieves 405 method not allowed","match":{"arguments":[{"val":"405","offset":19}],"location":"stepDefinition.PatientPut_Operation_Steps.dietician_recieves_method_not_allowed(java.lang.Integer)"},"keyword":"Then "}]},{"line":2,"name":"Set dietician bearer token","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:09:03.327Z","line":31,"name":"Check dietician able to update patient with valid data and invalid endpoint","description":"","id":"put-operation-update-patient;check-dietician-able-to-update-patient-with-valid-data-and-invalid-endpoint","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":32,"name":"Dietician creates PUT request by entering valid data into the form-data key and value fields.","match":{"location":"stepDefinition.PatientPut_Operation_Steps.dietician_creates_put_request_by_entering_valid_data_into_the_form_data_key_and_value_fields()"},"keyword":"Given "},{"result":{"error_message":"java.lang.NullPointerException: Cannot invoke \"com.codoid.products.fillo.Connection.close()\" because \"conn\" is null\r\n\tat utilities.ExcelUtilities.getTestDataInMap(ExcelUtilities.java:45)\r\n\tat stepDefinition.PatientPut_Operation_Steps.dietician_sent_put_http_request_with_invalid_endpoint(PatientPut_Operation_Steps.java:206)\r\n\tat ✽.Dietician sent PUT http request with invalid endpoint(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/2_DieticianModule/004_Patient_PutOperation.feature:33)\r\n","duration":513000,"status":"failed"},"line":33,"name":"Dietician sent PUT http request with invalid endpoint","match":{"location":"stepDefinition.PatientPut_Operation_Steps.dietician_sent_put_http_request_with_invalid_endpoint()"},"keyword":"When "},{"result":{"status":"skipped"},"line":34,"name":"Dietician recieves 404 not found","match":{"arguments":[{"val":"404","offset":19}],"location":"stepDefinition.PatientPut_Operation_Steps.dietician_recieves_not_found(java.lang.Integer)"},"keyword":"Then "}]},{"line":2,"name":"Set dietician bearer token","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:09:03.337Z","line":35,"name":"Check dietician able to update patient with valid data, patient id and invalid content type","description":"","id":"put-operation-update-patient;check-dietician-able-to-update-patient-with-valid-data--patient-id-and-invalid-content-type","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":36,"name":"Dietician creates PUT request by entering valid data into the form-data key and value fields and invalid content type","match":{"location":"stepDefinition.PatientPut_Operation_Steps.dietician_creates_put_request_by_entering_valid_data_into_the_form_data_key_and_value_fields_and_invalid_content_type()"},"keyword":"Given "},{"result":{"error_message":"java.lang.NullPointerException: Cannot invoke \"com.codoid.products.fillo.Connection.close()\" because \"conn\" is null\r\n\tat utilities.ExcelUtilities.getTestDataInMap(ExcelUtilities.java:45)\r\n\tat stepDefinition.PatientPut_Operation_Steps.dietician_send_put_http_request_valid_data_patient_id_and_invalid_content_type_with_endpoint(PatientPut_Operation_Steps.java:224)\r\n\tat ✽.Dietician send PUT http request valid data, patient id and invalid content type with endpoint(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/2_DieticianModule/004_Patient_PutOperation.feature:37)\r\n","duration":2423900,"status":"failed"},"line":37,"name":"Dietician send PUT http request valid data, patient id and invalid content type with endpoint","match":{"location":"stepDefinition.PatientPut_Operation_Steps.dietician_send_put_http_request_valid_data_patient_id_and_invalid_content_type_with_endpoint()"},"keyword":"When "},{"result":{"status":"skipped"},"line":38,"name":"Dietician recieves 415 unsupported media type","match":{"arguments":[{"val":"415","offset":19}],"location":"stepDefinition.PatientPut_Operation_Steps.dietician_recieves_unsupported_media_type(java.lang.Integer)"},"keyword":"Then "}]}],"name":"Put Operation update patient","description":"","id":"put-operation-update-patient","keyword":"Feature","uri":"file:src/test/resources/Features/2_DieticianModule/004_Patient_PutOperation.feature","tags":[]},{"line":2,"elements":[{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":5924700,"status":"passed"},"line":5,"name":"Set dietician bearer token for delete","match":{"location":"stepDefinition.DeletePatientStepDef.Set_dietician_bearer_token_for_delete()"},"keyword":"Given "}]},{"start_timestamp":"2024-08-22T21:09:03.348Z","line":9,"name":"Check dietician able to delete patient by id with invalid method","description":"","id":"get-operation-[get-patients-morbidity-details-];check-dietician-able-to-delete-patient-by-id-with-invalid-method","type":"scenario","keyword":"Scenario","steps":[{"result":{"error_message":"java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)\r\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)\r\n\tat java.base/java.util.Objects.checkIndex(Objects.java:385)\r\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\r\n\tat stepDefinition.DeletePatientStepDef.dietician_create_delete_request(DeletePatientStepDef.java:58)\r\n\tat ✽.Dietician create DELETE request(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/2_DieticianModule/005_DeletePatient.feature:11)\r\n","duration":3007500,"status":"failed"},"line":11,"name":"Dietician create DELETE request","match":{"location":"stepDefinition.DeletePatientStepDef.dietician_create_delete_request()"},"keyword":"Given "},{"result":{"status":"skipped"},"line":12,"name":"Dietician send POST http request with endpoint with invalid method","match":{"location":"stepDefinition.DeletePatientStepDef.dietician_send_post_http_request_with_endpoint_with_invalid_method()"},"keyword":"When "},{"result":{"status":"skipped"},"line":13,"name":"Dietician recieves 405 for patient deletion","match":{"arguments":[{"val":"405","offset":19}],"location":"stepDefinition.DeletePatientStepDef.dietician_recieves_for_patient_deletion(int)"},"keyword":"Then "}],"tags":[{"name":"@tag"},{"name":"@patient"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":2998200,"status":"passed"},"line":5,"name":"Set dietician bearer token for delete","match":{"location":"stepDefinition.DeletePatientStepDef.Set_dietician_bearer_token_for_delete()"},"keyword":"Given "}]},{"start_timestamp":"2024-08-22T21:09:03.372Z","line":17,"name":"Check dietician able to delete patient by id with invalid endpoint","description":"","id":"get-operation-[get-patients-morbidity-details-];check-dietician-able-to-delete-patient-by-id-with-invalid-endpoint","type":"scenario","keyword":"Scenario","steps":[{"result":{"error_message":"java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)\r\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)\r\n\tat java.base/java.util.Objects.checkIndex(Objects.java:385)\r\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\r\n\tat stepDefinition.DeletePatientStepDef.dietician_create_delete_request(DeletePatientStepDef.java:58)\r\n\tat ✽.Dietician create DELETE request(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/2_DieticianModule/005_DeletePatient.feature:19)\r\n","duration":2114300,"status":"failed"},"line":19,"name":"Dietician create DELETE request","match":{"location":"stepDefinition.DeletePatientStepDef.dietician_create_delete_request()"},"keyword":"Given "},{"result":{"status":"skipped"},"line":20,"name":"Dietician send DELETE http request with invalid endpoint","match":{"location":"stepDefinition.DeletePatientStepDef.dietician_send_delete_http_request_with_invalid_endpoint()"},"keyword":"When "},{"result":{"status":"skipped"},"line":21,"name":"Dietician recieves 404 for patient deletion","match":{"arguments":[{"val":"404","offset":19}],"location":"stepDefinition.DeletePatientStepDef.dietician_recieves_for_patient_deletion(int)"},"keyword":"Then "}],"tags":[{"name":"@tag"},{"name":"@patient"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":2512000,"status":"passed"},"line":5,"name":"Set dietician bearer token for delete","match":{"location":"stepDefinition.DeletePatientStepDef.Set_dietician_bearer_token_for_delete()"},"keyword":"Given "}]},{"start_timestamp":"2024-08-22T21:09:03.386Z","line":23,"name":"Check dietician able to delete patient by ID","description":"","id":"get-operation-[get-patients-morbidity-details-];check-dietician-able-to-delete-patient-by-id","type":"scenario","keyword":"Scenario","steps":[{"result":{"error_message":"java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)\r\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)\r\n\tat java.base/java.util.Objects.checkIndex(Objects.java:385)\r\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\r\n\tat stepDefinition.DeletePatientStepDef.dietician_create_delete_request(DeletePatientStepDef.java:58)\r\n\tat ✽.Dietician create DELETE request(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/2_DieticianModule/005_DeletePatient.feature:25)\r\n","duration":528100,"status":"failed"},"line":25,"name":"Dietician create DELETE request","match":{"location":"stepDefinition.DeletePatientStepDef.dietician_create_delete_request()"},"keyword":"Given "},{"result":{"status":"skipped"},"line":26,"name":"Dietician send DELETE http request with endpoint","match":{"location":"stepDefinition.DeletePatientStepDef.dietician_send_delete_http_request_with_endpoint()"},"keyword":"When "},{"result":{"status":"skipped"},"line":27,"name":"Dietician recieves 200 for deletion","match":{"arguments":[{"val":"200","offset":19}],"location":"stepDefinition.DeletePatientStepDef.dietician_recieves_for_deletion(int)"},"keyword":"Then "}],"tags":[{"name":"@tag"},{"name":"@patient"}]},{"line":4,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":3053800,"status":"passed"},"line":5,"name":"Set dietician bearer token for delete","match":{"location":"stepDefinition.DeletePatientStepDef.Set_dietician_bearer_token_for_delete()"},"keyword":"Given "}]},{"start_timestamp":"2024-08-22T21:09:03.395Z","line":29,"name":"Check dietician able to delete patient by invalid id","description":"","id":"get-operation-[get-patients-morbidity-details-];check-dietician-able-to-delete-patient-by-invalid-id","type":"scenario","keyword":"Scenario","steps":[{"result":{"error_message":"java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)\r\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)\r\n\tat java.base/java.util.Objects.checkIndex(Objects.java:385)\r\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\r\n\tat stepDefinition.DeletePatientStepDef.dietician_create_delete_request_invalid_id(DeletePatientStepDef.java:155)\r\n\tat ✽.Dietician create DELETE request invalid Id(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/2_DieticianModule/005_DeletePatient.feature:31)\r\n","duration":1182800,"status":"failed"},"line":31,"name":"Dietician create DELETE request invalid Id","match":{"location":"stepDefinition.DeletePatientStepDef.dietician_create_delete_request_invalid_id()"},"keyword":"Given "},{"result":{"status":"skipped"},"line":32,"name":"Dietician send DELETE http request with endpoint","match":{"location":"stepDefinition.DeletePatientStepDef.dietician_send_delete_http_request_with_endpoint()"},"keyword":"When "},{"result":{"status":"skipped"},"line":33,"name":"Dietician recieves 404 for patient deletion","match":{"arguments":[{"val":"404","offset":19}],"location":"stepDefinition.DeletePatientStepDef.dietician_recieves_for_patient_deletion(int)"},"keyword":"Then "}],"tags":[{"name":"@tag"},{"name":"@patient"}]}],"name":"Get Operation [Get Patients Morbidity Details ]","description":"","id":"get-operation-[get-patients-morbidity-details-]","keyword":"Feature","uri":"file:src/test/resources/Features/2_DieticianModule/005_DeletePatient.feature","tags":[{"name":"@tag","type":"Tag","location":{"line":1,"column":1}},{"name":"@patient","type":"Tag","location":{"line":1,"column":6}}]},{"line":2,"elements":[{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":2023600,"status":"passed"},"line":6,"name":"Set dietician bearer token","match":{"location":"stepDefinition.PatientPostStepDef.set_dietician_bearer_token()"},"keyword":"Given "}]},{"start_timestamp":"2024-08-22T21:09:03.408Z","line":9,"name":"Check dietician able to retrieve patients by field","description":"","id":"get-operation-[retrieve-patient-file-by-fileid-];check-dietician-able-to-retrieve-patients-by-field","type":"scenario","keyword":"Scenario","steps":[{"result":{"error_message":"java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)\r\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)\r\n\tat java.base/java.util.Objects.checkIndex(Objects.java:385)\r\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\r\n\tat stepDefinition.PatientGetRetrievePatientFile.dietician_create_get_request_to_retrieve_patients_by_field(PatientGetRetrievePatientFile.java:39)\r\n\tat ✽.Dietician create requests to retrieve patients by field(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/2_DieticianModule/005_PatientGetRetrivePatientFile.feature:10)\r\n","duration":989800,"status":"failed"},"line":10,"name":"Dietician create requests to retrieve patients by field","match":{"location":"stepDefinition.PatientGetRetrievePatientFile.dietician_create_get_request_to_retrieve_patients_by_field()"},"keyword":"Given "},{"result":{"status":"skipped"},"line":12,"name":"Dietician send GET http request with endpointto retrieve patients by field","match":{"location":"stepDefinition.PatientGetRetrievePatientFile.dietician_send_get_http_request_with_endpointto_retrieve_patients_by_field()"},"keyword":"When "},{"result":{"status":"skipped"},"line":14,"name":"Dietician recieves 200 for Retrieve Patient file by FileId","match":{"arguments":[{"val":"200","offset":19}],"location":"stepDefinition.PatientGetRetrievePatientFile.dietician_recieves_ok_with_details_of_the_patient_id(int)"},"keyword":"Then "}],"tags":[{"name":"@tag"},{"name":"@patient"},{"name":"@tag4"}]},{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":1649600,"status":"passed"},"line":6,"name":"Set dietician bearer token","match":{"location":"stepDefinition.PatientPostStepDef.set_dietician_bearer_token()"},"keyword":"Given "}]},{"start_timestamp":"2024-08-22T21:09:03.418Z","line":16,"name":"Check dietician able to retrieve patients by field with invalid method","description":"","id":"get-operation-[retrieve-patient-file-by-fileid-];check-dietician-able-to-retrieve-patients-by-field-with-invalid-method","type":"scenario","keyword":"Scenario","steps":[{"result":{"error_message":"java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)\r\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)\r\n\tat java.base/java.util.Objects.checkIndex(Objects.java:385)\r\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\r\n\tat stepDefinition.PatientGetRetrievePatientFile.dietician_create_get_request_to_retrieve_patients_by_field(PatientGetRetrievePatientFile.java:39)\r\n\tat ✽.Dietician create requests to retrieve patients by field(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/2_DieticianModule/005_PatientGetRetrivePatientFile.feature:17)\r\n","duration":997600,"status":"failed"},"line":17,"name":"Dietician create requests to retrieve patients by field","match":{"location":"stepDefinition.PatientGetRetrievePatientFile.dietician_create_get_request_to_retrieve_patients_by_field()"},"keyword":"Given "},{"result":{"status":"skipped"},"line":18,"name":"Dietician send  http request with invalid method","match":{"location":"stepDefinition.PatientGetRetrievePatientFile.dietician_send_http_request_with_invalid_method()"},"keyword":"When "},{"result":{"status":"skipped"},"line":19,"name":"Dietician recieves 405 for Retrieve Patient file by FileId","match":{"arguments":[{"val":"405","offset":19}],"location":"stepDefinition.PatientGetRetrievePatientFile.dietician_recieves_ok_with_details_of_the_patient_id(int)"},"keyword":"Then "}],"tags":[{"name":"@tag"},{"name":"@patient"}]},{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":2003500,"status":"passed"},"line":6,"name":"Set dietician bearer token","match":{"location":"stepDefinition.PatientPostStepDef.set_dietician_bearer_token()"},"keyword":"Given "}]},{"start_timestamp":"2024-08-22T21:09:03.449Z","line":21,"name":"Check dietician able to retrieve patients by field with invalid endpoint","description":"","id":"get-operation-[retrieve-patient-file-by-fileid-];check-dietician-able-to-retrieve-patients-by-field-with-invalid-endpoint","type":"scenario","keyword":"Scenario","steps":[{"result":{"error_message":"java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)\r\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)\r\n\tat java.base/java.util.Objects.checkIndex(Objects.java:385)\r\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\r\n\tat stepDefinition.PatientGetRetrievePatientFile.dietician_create_get_request_to_retrieve_patients_by_field(PatientGetRetrievePatientFile.java:39)\r\n\tat ✽.Dietician create requests to retrieve patients by field(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/2_DieticianModule/005_PatientGetRetrivePatientFile.feature:23)\r\n","duration":2014500,"status":"failed"},"line":23,"name":"Dietician create requests to retrieve patients by field","match":{"location":"stepDefinition.PatientGetRetrievePatientFile.dietician_create_get_request_to_retrieve_patients_by_field()"},"keyword":"Given "},{"result":{"status":"skipped"},"line":25,"name":"Dietician send GET http request with invalid endpoint to retrive patient","match":{"location":"stepDefinition.PatientGetRetrievePatientFile.dietician_send_get_http_request_with_invalid_endpoint_to_retrive_patient()"},"keyword":"When "},{"result":{"status":"skipped"},"line":26,"name":"Dietician recieves 404 for Retrieve Patient file by FileId","match":{"arguments":[{"val":"404","offset":19}],"location":"stepDefinition.PatientGetRetrievePatientFile.dietician_recieves_ok_with_details_of_the_patient_id(int)"},"keyword":"Then "}],"tags":[{"name":"@tag"},{"name":"@patient"}]}],"name":"Get Operation [Retrieve Patient file by FileId ]","description":"","id":"get-operation-[retrieve-patient-file-by-fileid-]","keyword":"Feature","uri":"file:src/test/resources/Features/2_DieticianModule/005_PatientGetRetrivePatientFile.feature","tags":[{"name":"@tag","type":"Tag","location":{"line":1,"column":1}},{"name":"@patient","type":"Tag","location":{"line":1,"column":6}}]},{"line":1,"elements":[{"start_timestamp":"2024-08-22T21:09:03.462Z","line":9,"name":"User not able to retrive all morbidities","description":"","id":"get-all-morbidities;user-not-able-to-retrive-all-morbidities;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1322525300,"status":"passed"},"line":4,"name":"User sends a Get request to fetch all morbidities with \"GetAllMorbidities\" 0","match":{"arguments":[{"val":"\"GetAllMorbidities\"","offset":55},{"val":"0","offset":75}],"location":"stepDefinition.GetallMorbiditiesStepdef.user_sends_a_get_request_to_fetch_all_morbidities_with(java.lang.String,java.lang.Integer)"},"keyword":"When "},{"result":{"duration":40458400,"status":"passed"},"line":5,"name":"Admin receives invalid Status Code with \"GetAllMorbidities\" 0","match":{"arguments":[{"val":"\"GetAllMorbidities\"","offset":40},{"val":"0","offset":60}],"location":"stepDefinition.GetallMorbiditiesStepdef.admin_receives_invalid_status_code_with(java.lang.String,java.lang.Integer)"},"keyword":"Then "}],"tags":[{"name":"@tag1"}]},{"start_timestamp":"2024-08-22T21:09:04.837Z","line":10,"name":"User not able to retrive all morbidities","description":"","id":"get-all-morbidities;user-not-able-to-retrive-all-morbidities;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1325675000,"status":"passed"},"line":4,"name":"User sends a Get request to fetch all morbidities with \"GetAllMorbidities\" 1","match":{"arguments":[{"val":"\"GetAllMorbidities\"","offset":55},{"val":"1","offset":75}],"location":"stepDefinition.GetallMorbiditiesStepdef.user_sends_a_get_request_to_fetch_all_morbidities_with(java.lang.String,java.lang.Integer)"},"keyword":"When "},{"result":{"duration":44454300,"status":"passed"},"line":5,"name":"Admin receives invalid Status Code with \"GetAllMorbidities\" 1","match":{"arguments":[{"val":"\"GetAllMorbidities\"","offset":40},{"val":"1","offset":60}],"location":"stepDefinition.GetallMorbiditiesStepdef.admin_receives_invalid_status_code_with(java.lang.String,java.lang.Integer)"},"keyword":"Then "}],"tags":[{"name":"@tag1"}]},{"start_timestamp":"2024-08-22T21:09:06.217Z","line":19,"name":"User able to retrive all morbidities with token","description":"","id":"get-all-morbidities;user-able-to-retrive-all-morbidities-with-token;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1459669100,"status":"passed"},"line":14,"name":"User create and send request using \"get request\" \"GetAllMorbidities\" 2","match":{"arguments":[{"val":"\"get request\"","offset":35},{"val":"\"GetAllMorbidities\"","offset":49},{"val":"2","offset":69}],"location":"stepDefinition.GetallMorbiditiesStepdef.user_create_and_send_request_using(java.lang.String,java.lang.String,java.lang.Integer)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: 1 expectation failed.\nResponse body doesn't match expectation.\nExpected: The content to match the given JSON schema.\nerror: instance type (array) does not match any allowed primitive type (allowed: [\"object\"])\n    level: \"error\"\n    schema: {\"loadingURI\":\"#\",\"pointer\":\"\"}\n    instance: {\"pointer\":\"\"}\n    domain: \"validation\"\n    keyword: \"type\"\n    found: \"array\"\n    expected: [\"object\"]\n\n  Actual: [{\"morbidityId\":1,\"morbidityTestId\":\"DIA_FG\",\"morbidityNameRegex\":\"(?i)(.*)fasting(.*)[sugarglucose](.*)|(.*)glucose(.*)fasting(.*)\",\"morbidityTestName\":\"Fasting Glucose\",\"morbidityTestUnit\":\"mg/dL\",\"morbidityMarkerMinVal\":100.0,\"morbidityMarkerMaxVal\":125.0},{\"morbidityId\":2,\"morbidityTestId\":\"DIA_AG\",\"morbidityNameRegex\":\"(?i)(.*)average(.*)glucose(.*)\",\"morbidityTestName\":\"Average Glucose\",\"morbidityTestUnit\":\"mg/dL\",\"morbidityMarkerMinVal\":121.0,\"morbidityMarkerMaxVal\":150.0},{\"morbidityId\":3,\"morbidityTestId\":\"DIA_PG\",\"morbidityNameRegex\":\"(?i)(.*)plasma(.*)glucose(.*)\",\"morbidityTestName\":\"Plasma Glucose\",\"morbidityTestUnit\":\"mg/dL\",\"morbidityMarkerMinVal\":140.0,\"morbidityMarkerMaxVal\":199.0},{\"morbidityId\":4,\"morbidityTestId\":\"DIA_HBA1C\",\"morbidityNameRegex\":\"(.*)HbA[1I]c(.*)|(.*)H(.*)P(.*)L(.*)C(.*)\",\"morbidityTestName\":\"HbA1c\",\"morbidityTestUnit\":\"%\",\"morbidityMarkerMinVal\":5.7,\"morbidityMarkerMaxVal\":6.5},{\"morbidityId\":5,\"morbidityTestId\":\"THYRO_TSH\",\"morbidityNameRegex\":\"(?i)(.*)T(.*)S(.*)H(.*)|(.*)THYROID STIMULATING HORMONE(.*)\",\"morbidityTestName\":\"TSH\",\"morbidityTestUnit\":\"μIU/ml\",\"morbidityMarkerMinVal\":0.55,\"morbidityMarkerMaxVal\":4.78},{\"morbidityId\":6,\"morbidityTestId\":\"THYRO_TSH_1\",\"morbidityNameRegex\":\"(?i)(.*)T(.*)S(.*)H(.*)|(.*)THYROID STIMULATING HORMONE(.*)\",\"morbidityTestName\":\"TSH\",\"morbidityTestUnit\":\"uIU/ml\",\"morbidityMarkerMinVal\":0.55,\"morbidityMarkerMaxVal\":4.78},{\"morbidityId\":7,\"morbidityTestId\":\"THYRO_T3\",\"morbidityNameRegex\":\"(?i)(.*)T3(.*)\",\"morbidityTestName\":\"T3\",\"morbidityTestUnit\":\"ng/dL\",\"morbidityMarkerMinVal\":60.0,\"morbidityMarkerMaxVal\":180.0},{\"morbidityId\":8,\"morbidityTestId\":\"THYRO_T3_1\",\"morbidityNameRegex\":\"(?i)(.*)T3(.*)\",\"morbidityTestName\":\"T3\",\"morbidityTestUnit\":\"ng/mL\",\"morbidityMarkerMinVal\":0.6,\"morbidityMarkerMaxVal\":1.8},{\"morbidityId\":9,\"morbidityTestId\":\"THYRO_T3_2\",\"morbidityNameRegex\":\"(?i)(.*)T3(.*)\",\"morbidityTestName\":\"T3\",\"morbidityTestUnit\":\"pg/mL\",\"morbidityMarkerMinVal\":1.5,\"morbidityMarkerMaxVal\":4.1},{\"morbidityId\":10,\"morbidityTestId\":\"THYRO_T3_3\",\"morbidityNameRegex\":\"(?i)(.*)T3(.*)\",\"morbidityTestName\":\"T3\",\"morbidityTestUnit\":\"nmol/L\",\"morbidityMarkerMinVal\":0.9,\"morbidityMarkerMaxVal\":2.76},{\"morbidityId\":11,\"morbidityTestId\":\"THYRO_T4\",\"morbidityNameRegex\":\"(?i)(.*)T4(.*)\",\"morbidityTestName\":\"T4\",\"morbidityTestUnit\":\"μg/dL\",\"morbidityMarkerMinVal\":5.0,\"morbidityMarkerMaxVal\":12.0},{\"morbidityId\":12,\"morbidityTestId\":\"THYRO_T4_1\",\"morbidityNameRegex\":\"(?i)(.*)T4(.*)\",\"morbidityTestName\":\"T4\",\"morbidityTestUnit\":\"ug/dL\",\"morbidityMarkerMinVal\":5.0,\"morbidityMarkerMaxVal\":12.0},{\"morbidityId\":13,\"morbidityTestId\":\"THYRO_T4_2\",\"morbidityNameRegex\":\"(?i)(.*)T4(.*)\",\"morbidityTestName\":\"T4\",\"morbidityTestUnit\":\"ng/dL\",\"morbidityMarkerMinVal\":0.8,\"morbidityMarkerMaxVal\":1.9},{\"morbidityId\":14,\"morbidityTestId\":\"BP_LEVEL\",\"morbidityNameRegex\":\"(?i)(.*)Blood(.*)Pressure(.*)\",\"morbidityTestName\":\"Blood Pressure Levels\",\"morbidityTestUnit\":\"mm Hg\",\"morbidityMarkerMinVal\":80.0,\"morbidityMarkerMaxVal\":130.0},{\"morbidityId\":15,\"morbidityTestId\":\"THYRO_TSH_2\",\"morbidityNameRegex\":\"(?i)(.*)T(.*)S(.*)H(.*)|(.*)THYROID STIMULATING HORMONE(.*)\",\"morbidityTestName\":\"TSH\",\"morbidityTestUnit\":\"mIU/L\",\"morbidityMarkerMinVal\":0.45,\"morbidityMarkerMaxVal\":4.12}]\n\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:107)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:238)\r\n\tat stepDefinition.GetallMorbiditiesStepdef.admin_receives_invalid_status_code_with(GetallMorbiditiesStepdef.java:78)\r\n\tat ✽.Admin receives invalid Status Code with \"GetAllMorbidities\" 2(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/Morbidities.feature:15)\r\n","duration":46122700,"status":"failed"},"line":15,"name":"Admin receives invalid Status Code with \"GetAllMorbidities\" 2","match":{"arguments":[{"val":"\"GetAllMorbidities\"","offset":40},{"val":"2","offset":60}],"location":"stepDefinition.GetallMorbiditiesStepdef.admin_receives_invalid_status_code_with(java.lang.String,java.lang.Integer)"},"keyword":"Then "}],"tags":[{"name":"@tag2"}]},{"start_timestamp":"2024-08-22T21:09:07.736Z","line":20,"name":"User able to retrive all morbidities with token","description":"","id":"get-all-morbidities;user-able-to-retrive-all-morbidities-with-token;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1267916000,"status":"passed"},"line":14,"name":"User create and send request using \"post request\" \"GetAllMorbidities\" 3","match":{"arguments":[{"val":"\"post request\"","offset":35},{"val":"\"GetAllMorbidities\"","offset":50},{"val":"3","offset":70}],"location":"stepDefinition.GetallMorbiditiesStepdef.user_create_and_send_request_using(java.lang.String,java.lang.String,java.lang.Integer)"},"keyword":"When "},{"result":{"duration":42358400,"status":"passed"},"line":15,"name":"Admin receives invalid Status Code with \"GetAllMorbidities\" 3","match":{"arguments":[{"val":"\"GetAllMorbidities\"","offset":40},{"val":"3","offset":60}],"location":"stepDefinition.GetallMorbiditiesStepdef.admin_receives_invalid_status_code_with(java.lang.String,java.lang.Integer)"},"keyword":"Then "}],"tags":[{"name":"@tag2"}]},{"start_timestamp":"2024-08-22T21:09:09.055Z","line":21,"name":"User able to retrive all morbidities with token","description":"","id":"get-all-morbidities;user-able-to-retrive-all-morbidities-with-token;;4","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1412712400,"status":"passed"},"line":14,"name":"User create and send request using \"get request with invalid endpoint\" \"GetAllMorbidities\" 4","match":{"arguments":[{"val":"\"get request with invalid endpoint\"","offset":35},{"val":"\"GetAllMorbidities\"","offset":71},{"val":"4","offset":91}],"location":"stepDefinition.GetallMorbiditiesStepdef.user_create_and_send_request_using(java.lang.String,java.lang.String,java.lang.Integer)"},"keyword":"When "},{"result":{"duration":74462100,"status":"passed"},"line":15,"name":"Admin receives invalid Status Code with \"GetAllMorbidities\" 4","match":{"arguments":[{"val":"\"GetAllMorbidities\"","offset":40},{"val":"4","offset":60}],"location":"stepDefinition.GetallMorbiditiesStepdef.admin_receives_invalid_status_code_with(java.lang.String,java.lang.Integer)"},"keyword":"Then "}],"tags":[{"name":"@tag2"}]},{"start_timestamp":"2024-08-22T21:09:10.556Z","line":22,"name":"User able to retrive all morbidities with token","description":"","id":"get-all-morbidities;user-able-to-retrive-all-morbidities-with-token;;5","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1865214900,"status":"passed"},"line":14,"name":"User create and send request using \"get request\" \"GetAllMorbidities\" 5","match":{"arguments":[{"val":"\"get request\"","offset":35},{"val":"\"GetAllMorbidities\"","offset":49},{"val":"5","offset":69}],"location":"stepDefinition.GetallMorbiditiesStepdef.user_create_and_send_request_using(java.lang.String,java.lang.String,java.lang.Integer)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: 1 expectation failed.\nResponse body doesn't match expectation.\nExpected: The content to match the given JSON schema.\nerror: instance type (array) does not match any allowed primitive type (allowed: [\"object\"])\n    level: \"error\"\n    schema: {\"loadingURI\":\"#\",\"pointer\":\"\"}\n    instance: {\"pointer\":\"\"}\n    domain: \"validation\"\n    keyword: \"type\"\n    found: \"array\"\n    expected: [\"object\"]\n\n  Actual: [{\"morbidityId\":1,\"morbidityTestId\":\"DIA_FG\",\"morbidityNameRegex\":\"(?i)(.*)fasting(.*)[sugarglucose](.*)|(.*)glucose(.*)fasting(.*)\",\"morbidityTestName\":\"Fasting Glucose\",\"morbidityTestUnit\":\"mg/dL\",\"morbidityMarkerMinVal\":100.0,\"morbidityMarkerMaxVal\":125.0},{\"morbidityId\":2,\"morbidityTestId\":\"DIA_AG\",\"morbidityNameRegex\":\"(?i)(.*)average(.*)glucose(.*)\",\"morbidityTestName\":\"Average Glucose\",\"morbidityTestUnit\":\"mg/dL\",\"morbidityMarkerMinVal\":121.0,\"morbidityMarkerMaxVal\":150.0},{\"morbidityId\":3,\"morbidityTestId\":\"DIA_PG\",\"morbidityNameRegex\":\"(?i)(.*)plasma(.*)glucose(.*)\",\"morbidityTestName\":\"Plasma Glucose\",\"morbidityTestUnit\":\"mg/dL\",\"morbidityMarkerMinVal\":140.0,\"morbidityMarkerMaxVal\":199.0},{\"morbidityId\":4,\"morbidityTestId\":\"DIA_HBA1C\",\"morbidityNameRegex\":\"(.*)HbA[1I]c(.*)|(.*)H(.*)P(.*)L(.*)C(.*)\",\"morbidityTestName\":\"HbA1c\",\"morbidityTestUnit\":\"%\",\"morbidityMarkerMinVal\":5.7,\"morbidityMarkerMaxVal\":6.5},{\"morbidityId\":5,\"morbidityTestId\":\"THYRO_TSH\",\"morbidityNameRegex\":\"(?i)(.*)T(.*)S(.*)H(.*)|(.*)THYROID STIMULATING HORMONE(.*)\",\"morbidityTestName\":\"TSH\",\"morbidityTestUnit\":\"μIU/ml\",\"morbidityMarkerMinVal\":0.55,\"morbidityMarkerMaxVal\":4.78},{\"morbidityId\":6,\"morbidityTestId\":\"THYRO_TSH_1\",\"morbidityNameRegex\":\"(?i)(.*)T(.*)S(.*)H(.*)|(.*)THYROID STIMULATING HORMONE(.*)\",\"morbidityTestName\":\"TSH\",\"morbidityTestUnit\":\"uIU/ml\",\"morbidityMarkerMinVal\":0.55,\"morbidityMarkerMaxVal\":4.78},{\"morbidityId\":7,\"morbidityTestId\":\"THYRO_T3\",\"morbidityNameRegex\":\"(?i)(.*)T3(.*)\",\"morbidityTestName\":\"T3\",\"morbidityTestUnit\":\"ng/dL\",\"morbidityMarkerMinVal\":60.0,\"morbidityMarkerMaxVal\":180.0},{\"morbidityId\":8,\"morbidityTestId\":\"THYRO_T3_1\",\"morbidityNameRegex\":\"(?i)(.*)T3(.*)\",\"morbidityTestName\":\"T3\",\"morbidityTestUnit\":\"ng/mL\",\"morbidityMarkerMinVal\":0.6,\"morbidityMarkerMaxVal\":1.8},{\"morbidityId\":9,\"morbidityTestId\":\"THYRO_T3_2\",\"morbidityNameRegex\":\"(?i)(.*)T3(.*)\",\"morbidityTestName\":\"T3\",\"morbidityTestUnit\":\"pg/mL\",\"morbidityMarkerMinVal\":1.5,\"morbidityMarkerMaxVal\":4.1},{\"morbidityId\":10,\"morbidityTestId\":\"THYRO_T3_3\",\"morbidityNameRegex\":\"(?i)(.*)T3(.*)\",\"morbidityTestName\":\"T3\",\"morbidityTestUnit\":\"nmol/L\",\"morbidityMarkerMinVal\":0.9,\"morbidityMarkerMaxVal\":2.76},{\"morbidityId\":11,\"morbidityTestId\":\"THYRO_T4\",\"morbidityNameRegex\":\"(?i)(.*)T4(.*)\",\"morbidityTestName\":\"T4\",\"morbidityTestUnit\":\"μg/dL\",\"morbidityMarkerMinVal\":5.0,\"morbidityMarkerMaxVal\":12.0},{\"morbidityId\":12,\"morbidityTestId\":\"THYRO_T4_1\",\"morbidityNameRegex\":\"(?i)(.*)T4(.*)\",\"morbidityTestName\":\"T4\",\"morbidityTestUnit\":\"ug/dL\",\"morbidityMarkerMinVal\":5.0,\"morbidityMarkerMaxVal\":12.0},{\"morbidityId\":13,\"morbidityTestId\":\"THYRO_T4_2\",\"morbidityNameRegex\":\"(?i)(.*)T4(.*)\",\"morbidityTestName\":\"T4\",\"morbidityTestUnit\":\"ng/dL\",\"morbidityMarkerMinVal\":0.8,\"morbidityMarkerMaxVal\":1.9},{\"morbidityId\":14,\"morbidityTestId\":\"BP_LEVEL\",\"morbidityNameRegex\":\"(?i)(.*)Blood(.*)Pressure(.*)\",\"morbidityTestName\":\"Blood Pressure Levels\",\"morbidityTestUnit\":\"mm Hg\",\"morbidityMarkerMinVal\":80.0,\"morbidityMarkerMaxVal\":130.0},{\"morbidityId\":15,\"morbidityTestId\":\"THYRO_TSH_2\",\"morbidityNameRegex\":\"(?i)(.*)T(.*)S(.*)H(.*)|(.*)THYROID STIMULATING HORMONE(.*)\",\"morbidityTestName\":\"TSH\",\"morbidityTestUnit\":\"mIU/L\",\"morbidityMarkerMinVal\":0.45,\"morbidityMarkerMaxVal\":4.12}]\n\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:107)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:238)\r\n\tat stepDefinition.GetallMorbiditiesStepdef.admin_receives_invalid_status_code_with(GetallMorbiditiesStepdef.java:78)\r\n\tat ✽.Admin receives invalid Status Code with \"GetAllMorbidities\" 5(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/Morbidities.feature:15)\r\n","duration":37642500,"status":"failed"},"line":15,"name":"Admin receives invalid Status Code with \"GetAllMorbidities\" 5","match":{"arguments":[{"val":"\"GetAllMorbidities\"","offset":40},{"val":"5","offset":60}],"location":"stepDefinition.GetallMorbiditiesStepdef.admin_receives_invalid_status_code_with(java.lang.String,java.lang.Integer)"},"keyword":"Then "}],"tags":[{"name":"@tag2"}]},{"start_timestamp":"2024-08-22T21:09:12.467Z","line":23,"name":"User able to retrive all morbidities with token","description":"","id":"get-all-morbidities;user-able-to-retrive-all-morbidities-with-token;;6","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1553183800,"status":"passed"},"line":14,"name":"User create and send request using \"post request\" \"GetAllMorbidities\" 6","match":{"arguments":[{"val":"\"post request\"","offset":35},{"val":"\"GetAllMorbidities\"","offset":50},{"val":"6","offset":70}],"location":"stepDefinition.GetallMorbiditiesStepdef.user_create_and_send_request_using(java.lang.String,java.lang.String,java.lang.Integer)"},"keyword":"When "},{"result":{"duration":39755400,"status":"passed"},"line":15,"name":"Admin receives invalid Status Code with \"GetAllMorbidities\" 6","match":{"arguments":[{"val":"\"GetAllMorbidities\"","offset":40},{"val":"6","offset":60}],"location":"stepDefinition.GetallMorbiditiesStepdef.admin_receives_invalid_status_code_with(java.lang.String,java.lang.Integer)"},"keyword":"Then "}],"tags":[{"name":"@tag2"}]},{"start_timestamp":"2024-08-22T21:09:14.066Z","line":24,"name":"User able to retrive all morbidities with token","description":"","id":"get-all-morbidities;user-able-to-retrive-all-morbidities-with-token;;7","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1436475300,"status":"passed"},"line":14,"name":"User create and send request using \"get request with invalid endpoint\" \"GetAllMorbidities\" 7","match":{"arguments":[{"val":"\"get request with invalid endpoint\"","offset":35},{"val":"\"GetAllMorbidities\"","offset":71},{"val":"7","offset":91}],"location":"stepDefinition.GetallMorbiditiesStepdef.user_create_and_send_request_using(java.lang.String,java.lang.String,java.lang.Integer)"},"keyword":"When "},{"result":{"duration":42079300,"status":"passed"},"line":15,"name":"Admin receives invalid Status Code with \"GetAllMorbidities\" 7","match":{"arguments":[{"val":"\"GetAllMorbidities\"","offset":40},{"val":"7","offset":60}],"location":"stepDefinition.GetallMorbiditiesStepdef.admin_receives_invalid_status_code_with(java.lang.String,java.lang.Integer)"},"keyword":"Then "}],"tags":[{"name":"@tag2"}]}],"name":"Get all morbidities","description":"","id":"get-all-morbidities","keyword":"Feature","uri":"file:src/test/resources/Features/Morbidities.feature","tags":[]},{"line":1,"elements":[{"line":2,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"error_message":"java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)\r\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)\r\n\tat java.base/java.util.Objects.checkIndex(Objects.java:385)\r\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\r\n\tat stepDefinition.AminTokenStepDef.<init>(AminTokenStepDef.java:35)\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\r\n\tat org.picocontainer.injectors.AbstractInjector.newInstance(AbstractInjector.java:145)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:342)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:678)\r\n\tat io.cucumber.picocontainer.PicoFactory.getInstance(PicoFactory.java:64)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)\r\n\tat io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:84)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:56)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:84)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)\r\n\tat io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\r\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\r\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\r\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\r\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\r\n\tat org.testng.TestRunner.run(TestRunner.java:614)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:312)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1208)\r\n\tat org.testng.TestNG.runSuites(TestNG.java:1112)\r\n\tat org.testng.TestNG.run(TestNG.java:1079)\r\n\tat org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)\r\n\tat org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)\r\n\tat org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)\r\n","duration":1000900,"status":"failed"},"line":3,"name":"Set admin token","match":{"location":"stepDefinition.AminTokenStepDef.set_admin_token()"},"keyword":"Given "}]},{"start_timestamp":"2024-08-22T21:09:15.554Z","line":4,"name":"Check admin able to create patient with valid data","description":"","id":"patient-post--patient-put-add-new-reports--get-morbidity-details--get-retrievepatient--delete;check-admin-able-to-create-patient-with-valid-data","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"skipped"},"line":6,"name":"Admin creates POST request by entering valid data into the form-data key and value fields.","match":{"location":"stepDefinition.AminTokenStepDef.admin_creates_post_request_by_entering_valid_data_into_the_form_data_key_and_value_fields()"},"keyword":"Given "},{"result":{"status":"skipped"},"line":7,"name":"Admin sends POST http request with endpoint with admin token","match":{"location":"stepDefinition.AminTokenStepDef.admin_sends_post_http_req_with_endpoint_admin_token()"},"keyword":"When "},{"result":{"status":"skipped"},"line":8,"name":"Admin recieves 403 forbidden","match":{"arguments":[{"val":"403","offset":15}],"location":"stepDefinition.AminTokenStepDef.admin_recieves_forbidden(int)"},"keyword":"Then "}]},{"line":2,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"error_message":"java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)\r\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)\r\n\tat java.base/java.util.Objects.checkIndex(Objects.java:385)\r\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\r\n\tat stepDefinition.AminTokenStepDef.<init>(AminTokenStepDef.java:35)\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\r\n\tat org.picocontainer.injectors.AbstractInjector.newInstance(AbstractInjector.java:145)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:342)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:678)\r\n\tat io.cucumber.picocontainer.PicoFactory.getInstance(PicoFactory.java:64)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)\r\n\tat io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:84)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:56)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:84)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)\r\n\tat io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\r\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\r\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\r\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\r\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\r\n\tat org.testng.TestRunner.run(TestRunner.java:614)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:312)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1208)\r\n\tat org.testng.TestNG.runSuites(TestNG.java:1112)\r\n\tat org.testng.TestNG.run(TestNG.java:1079)\r\n\tat org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)\r\n\tat org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)\r\n\tat org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)\r\n","duration":1000900,"status":"failed"},"line":3,"name":"Set admin token","match":{"location":"stepDefinition.AminTokenStepDef.set_admin_token()"},"keyword":"Given "}]},{"start_timestamp":"2024-08-22T21:09:15.563Z","line":10,"name":"Check admin able to add new reports for existing patient with valid data","description":"","id":"patient-post--patient-put-add-new-reports--get-morbidity-details--get-retrievepatient--delete;check-admin-able-to-add-new-reports-for-existing-patient-with-valid-data","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"skipped"},"line":12,"name":"Admin creates PUT request by entering valid data into the form-data key and value fields and valid patient ID","match":{"location":"stepDefinition.AminTokenStepDef.admin_creates_put_request_by_entering_valid_data_into_the_form_data_key_and_value_fields_and_valid_patient_id()"},"keyword":"Given "},{"result":{"status":"skipped"},"line":13,"name":"Admin sends PUT http request with endpoint","match":{"location":"stepDefinition.AminTokenStepDef.admin_sends_put_http_request_with_endpoint()"},"keyword":"When "},{"result":{"status":"skipped"},"line":14,"name":"Admin recieves 403 forbidden","match":{"arguments":[{"val":"403","offset":15}],"location":"stepDefinition.AminTokenStepDef.admin_recieves_forbidden(int)"},"keyword":"Then "}]},{"line":2,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"error_message":"java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)\r\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)\r\n\tat java.base/java.util.Objects.checkIndex(Objects.java:385)\r\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\r\n\tat stepDefinition.AminTokenStepDef.<init>(AminTokenStepDef.java:35)\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\r\n\tat org.picocontainer.injectors.AbstractInjector.newInstance(AbstractInjector.java:145)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:342)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:678)\r\n\tat io.cucumber.picocontainer.PicoFactory.getInstance(PicoFactory.java:64)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)\r\n\tat io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:84)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:56)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:84)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)\r\n\tat io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\r\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\r\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\r\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\r\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\r\n\tat org.testng.TestRunner.run(TestRunner.java:614)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:312)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1208)\r\n\tat org.testng.TestNG.runSuites(TestNG.java:1112)\r\n\tat org.testng.TestNG.run(TestNG.java:1079)\r\n\tat org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)\r\n\tat org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)\r\n\tat org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)\r\n","duration":1006600,"status":"failed"},"line":3,"name":"Set admin token","match":{"location":"stepDefinition.AminTokenStepDef.set_admin_token()"},"keyword":"Given "}]},{"start_timestamp":"2024-08-22T21:09:15.572Z","line":16,"name":"Check admin able to retrieve patients morbidity details by patient ID","description":"","id":"patient-post--patient-put-add-new-reports--get-morbidity-details--get-retrievepatient--delete;check-admin-able-to-retrieve-patients-morbidity-details-by-patient-id","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"skipped"},"line":17,"name":"Admin creates GET request","match":{"location":"stepDefinition.AminTokenStepDef.admin_creates_get_request()"},"keyword":"Given "},{"result":{"status":"skipped"},"line":18,"name":"Admin send GET http request with endpoint","match":{"location":"stepDefinition.AminTokenStepDef.admin_send_get_http_request_with_endpoint()"},"keyword":"When "},{"result":{"status":"skipped"},"line":19,"name":"Admin recieves 403 forbidden","match":{"arguments":[{"val":"403","offset":15}],"location":"stepDefinition.AminTokenStepDef.admin_recieves_forbidden(int)"},"keyword":"Then "}]},{"line":2,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"error_message":"java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)\r\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)\r\n\tat java.base/java.util.Objects.checkIndex(Objects.java:385)\r\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\r\n\tat stepDefinition.AminTokenStepDef.<init>(AminTokenStepDef.java:35)\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\r\n\tat org.picocontainer.injectors.AbstractInjector.newInstance(AbstractInjector.java:145)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:342)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:678)\r\n\tat io.cucumber.picocontainer.PicoFactory.getInstance(PicoFactory.java:64)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)\r\n\tat io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:84)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:56)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:84)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)\r\n\tat io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\r\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\r\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\r\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\r\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\r\n\tat org.testng.TestRunner.run(TestRunner.java:614)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:312)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1208)\r\n\tat org.testng.TestNG.runSuites(TestNG.java:1112)\r\n\tat org.testng.TestNG.run(TestNG.java:1079)\r\n\tat org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)\r\n\tat org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)\r\n\tat org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)\r\n","duration":1000100,"status":"failed"},"line":3,"name":"Set admin token","match":{"location":"stepDefinition.AminTokenStepDef.set_admin_token()"},"keyword":"Given "}]},{"start_timestamp":"2024-08-22T21:09:15.591Z","line":21,"name":"Check admin able to retrieve patients by field","description":"","id":"patient-post--patient-put-add-new-reports--get-morbidity-details--get-retrievepatient--delete;check-admin-able-to-retrieve-patients-by-field","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"skipped"},"line":22,"name":"Admin create GET request by fileId","match":{"location":"stepDefinition.AminTokenStepDef.admin_create_get_request_no_auth_by_file_id()"},"keyword":"Given "},{"result":{"status":"skipped"},"line":23,"name":"Admin send GET http request with endpoint for fileID","match":{"location":"stepDefinition.AminTokenStepDef.admin_send_get_http_request_with_endpoint_for_file_id()"},"keyword":"When "},{"result":{"status":"skipped"},"line":24,"name":"Admin recieves 403 forbidden","match":{"arguments":[{"val":"403","offset":15}],"location":"stepDefinition.AminTokenStepDef.admin_recieves_forbidden(int)"},"keyword":"Then "}]},{"line":2,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"error_message":"java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)\r\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)\r\n\tat java.base/java.util.Objects.checkIndex(Objects.java:385)\r\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\r\n\tat stepDefinition.AminTokenStepDef.<init>(AminTokenStepDef.java:35)\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\r\n\tat org.picocontainer.injectors.AbstractInjector.newInstance(AbstractInjector.java:145)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:342)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:678)\r\n\tat io.cucumber.picocontainer.PicoFactory.getInstance(PicoFactory.java:64)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)\r\n\tat io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:84)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:56)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:84)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)\r\n\tat io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\r\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\r\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\r\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\r\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\r\n\tat org.testng.TestRunner.run(TestRunner.java:614)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:312)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1208)\r\n\tat org.testng.TestNG.runSuites(TestNG.java:1112)\r\n\tat org.testng.TestNG.run(TestNG.java:1079)\r\n\tat org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)\r\n\tat org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)\r\n\tat org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)\r\n","duration":995900,"status":"failed"},"line":3,"name":"Set admin token","match":{"location":"stepDefinition.AminTokenStepDef.set_admin_token()"},"keyword":"Given "}]},{"start_timestamp":"2024-08-22T21:09:15.603Z","line":27,"name":"Check admin able to delete patient by ID","description":"","id":"patient-post--patient-put-add-new-reports--get-morbidity-details--get-retrievepatient--delete;check-admin-able-to-delete-patient-by-id","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"skipped"},"line":28,"name":"Admin create DELETE request","match":{"location":"stepDefinition.AminTokenStepDef.admin_create_delete_request()"},"keyword":"Given "},{"result":{"status":"skipped"},"line":29,"name":"Admin send DELETE http request with endpoint","match":{"location":"stepDefinition.AminTokenStepDef.admin_send_delete_http_request_with_endpoint()"},"keyword":"When "},{"result":{"status":"skipped"},"line":30,"name":"Admin recieves 403 forbidden","match":{"arguments":[{"val":"403","offset":15}],"location":"stepDefinition.AminTokenStepDef.admin_recieves_forbidden(int)"},"keyword":"Then "}]}],"name":"Patient Post, Patient put add new reports, Get morbidity details, Get retrievePatient, delete","description":"","id":"patient-post--patient-put-add-new-reports--get-morbidity-details--get-retrievepatient--delete","keyword":"Feature","uri":"file:src/test/resources/Features/PatientAdminToken.feature","tags":[]},{"line":2,"elements":[{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"error_message":"java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)\r\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)\r\n\tat java.base/java.util.Objects.checkIndex(Objects.java:385)\r\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\r\n\tat stepDefinition.NoAuthStepDef.<init>(NoAuthStepDef.java:46)\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\r\n\tat org.picocontainer.injectors.AbstractInjector.newInstance(AbstractInjector.java:145)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:342)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:678)\r\n\tat io.cucumber.picocontainer.PicoFactory.getInstance(PicoFactory.java:64)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)\r\n\tat io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:84)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:56)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:84)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)\r\n\tat io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\r\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\r\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\r\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\r\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\r\n\tat org.testng.TestRunner.run(TestRunner.java:614)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:312)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1208)\r\n\tat org.testng.TestNG.runSuites(TestNG.java:1112)\r\n\tat org.testng.TestNG.run(TestNG.java:1079)\r\n\tat org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)\r\n\tat org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)\r\n\tat org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)\r\n","duration":998800,"status":"failed"},"line":4,"name":"Set no auth","match":{"location":"stepDefinition.NoAuthStepDef.set_no_auth()"},"keyword":"Given "}]},{"start_timestamp":"2024-08-22T21:09:15.614Z","line":5,"name":"Check dietician able to create patient with valid data","description":"","id":"patient-post--patient-put-add-new-reports--get-morbidity-details--get-retrievepatient--delete;check-dietician-able-to-create-patient-with-valid-data","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"skipped"},"line":7,"name":"Dietician creates POST request by entering valid data into the form-data key and value fields.","match":{"location":"stepDefinition.NoAuthStepDef.dietician_creates_post_request_by_entering_valid_data_into_the_form_data_key_and_value_fields()"},"keyword":"Given "},{"result":{"status":"skipped"},"line":8,"name":"Dietician send POST http request with endpoint\tno auth","match":{"location":"stepDefinition.NoAuthStepDef.dietician_send_post_http_request_with_endpoint_no_auth()"},"keyword":"When "},{"result":{"status":"skipped"},"line":9,"name":"Dietician recieves 401 unauthorized","match":{"arguments":[{"val":"401","offset":19}],"location":"stepDefinition.NoAuthStepDef.dietician_recieves_unauthorized(int)"},"keyword":"Then "}]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"error_message":"java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)\r\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)\r\n\tat java.base/java.util.Objects.checkIndex(Objects.java:385)\r\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\r\n\tat stepDefinition.NoAuthStepDef.<init>(NoAuthStepDef.java:46)\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\r\n\tat org.picocontainer.injectors.AbstractInjector.newInstance(AbstractInjector.java:145)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:342)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:678)\r\n\tat io.cucumber.picocontainer.PicoFactory.getInstance(PicoFactory.java:64)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)\r\n\tat io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:84)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:56)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:84)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)\r\n\tat io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\r\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\r\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\r\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\r\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\r\n\tat org.testng.TestRunner.run(TestRunner.java:614)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:312)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1208)\r\n\tat org.testng.TestNG.runSuites(TestNG.java:1112)\r\n\tat org.testng.TestNG.run(TestNG.java:1079)\r\n\tat org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)\r\n\tat org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)\r\n\tat org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)\r\n","duration":2537600,"status":"failed"},"line":4,"name":"Set no auth","match":{"location":"stepDefinition.NoAuthStepDef.set_no_auth()"},"keyword":"Given "}]},{"start_timestamp":"2024-08-22T21:09:15.628Z","line":11,"name":"Check dietician able to add new reports for existing patient with valid data","description":"","id":"patient-post--patient-put-add-new-reports--get-morbidity-details--get-retrievepatient--delete;check-dietician-able-to-add-new-reports-for-existing-patient-with-valid-data","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"skipped"},"line":13,"name":"Dietician creates PUT request by entering valid data into the form-data key and value fields and valid patient ID","match":{"location":"stepDefinition.NoAuthStepDef.dietician_creates_put_request_by_entering_valid_data_into_the_form_data_key_and_value_fields_and_valid_patient_id()"},"keyword":"Given "},{"result":{"status":"skipped"},"line":14,"name":"Dietician send PUT http request with endpoint no auth","match":{"location":"stepDefinition.NoAuthStepDef.dietician_send_put_http_request_with_endpoint_no_auth()"},"keyword":"When "},{"result":{"status":"skipped"},"line":15,"name":"Dietician recieves 401 unauthorized","match":{"arguments":[{"val":"401","offset":19}],"location":"stepDefinition.NoAuthStepDef.dietician_recieves_unauthorized(int)"},"keyword":"Then "}]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"error_message":"java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)\r\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)\r\n\tat java.base/java.util.Objects.checkIndex(Objects.java:385)\r\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\r\n\tat stepDefinition.NoAuthStepDef.<init>(NoAuthStepDef.java:46)\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\r\n\tat org.picocontainer.injectors.AbstractInjector.newInstance(AbstractInjector.java:145)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:342)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:678)\r\n\tat io.cucumber.picocontainer.PicoFactory.getInstance(PicoFactory.java:64)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)\r\n\tat io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:84)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:56)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:84)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)\r\n\tat io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\r\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\r\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\r\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\r\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\r\n\tat org.testng.TestRunner.run(TestRunner.java:614)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:312)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1208)\r\n\tat org.testng.TestNG.runSuites(TestNG.java:1112)\r\n\tat org.testng.TestNG.run(TestNG.java:1079)\r\n\tat org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)\r\n\tat org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)\r\n\tat org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)\r\n","status":"failed"},"line":4,"name":"Set no auth","match":{"location":"stepDefinition.NoAuthStepDef.set_no_auth()"},"keyword":"Given "}]},{"start_timestamp":"2024-08-22T21:09:15.636Z","line":17,"name":"Check dietician able to retrieve patients morbidity details by patient ID","description":"","id":"patient-post--patient-put-add-new-reports--get-morbidity-details--get-retrievepatient--delete;check-dietician-able-to-retrieve-patients-morbidity-details-by-patient-id","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"skipped"},"line":18,"name":"Dietician create GET request no auth","match":{"location":"stepDefinition.NoAuthStepDef.dietician_create_get_request_no_auth()"},"keyword":"Given "},{"result":{"status":"skipped"},"line":19,"name":"Dietician send GET http request with endpoint no auth","match":{"location":"stepDefinition.NoAuthStepDef.dietician_send_get_http_request_with_endpoint_no_auth()"},"keyword":"When "},{"result":{"status":"skipped"},"line":20,"name":"Dietician recieves 401 unauthorized","match":{"arguments":[{"val":"401","offset":19}],"location":"stepDefinition.NoAuthStepDef.dietician_recieves_unauthorized(int)"},"keyword":"Then "}]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"error_message":"java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)\r\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)\r\n\tat java.base/java.util.Objects.checkIndex(Objects.java:385)\r\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\r\n\tat stepDefinition.NoAuthStepDef.<init>(NoAuthStepDef.java:46)\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\r\n\tat org.picocontainer.injectors.AbstractInjector.newInstance(AbstractInjector.java:145)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:342)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:678)\r\n\tat io.cucumber.picocontainer.PicoFactory.getInstance(PicoFactory.java:64)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)\r\n\tat io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:84)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:56)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:84)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)\r\n\tat io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\r\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\r\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\r\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\r\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\r\n\tat org.testng.TestRunner.run(TestRunner.java:614)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:312)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1208)\r\n\tat org.testng.TestNG.runSuites(TestNG.java:1112)\r\n\tat org.testng.TestNG.run(TestNG.java:1079)\r\n\tat org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)\r\n\tat org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)\r\n\tat org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)\r\n","duration":1000300,"status":"failed"},"line":4,"name":"Set no auth","match":{"location":"stepDefinition.NoAuthStepDef.set_no_auth()"},"keyword":"Given "}]},{"start_timestamp":"2024-08-22T21:09:15.643Z","line":22,"name":"Check dietician able to retrieve patients by field","description":"","id":"patient-post--patient-put-add-new-reports--get-morbidity-details--get-retrievepatient--delete;check-dietician-able-to-retrieve-patients-by-field","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"skipped"},"line":23,"name":"Dietician create GET request no auth by fileId","match":{"location":"stepDefinition.NoAuthStepDef.dietician_create_get_request_no_auth_by_file_id()"},"keyword":"Given "},{"result":{"status":"skipped"},"line":24,"name":"Dietician send GET http request with endpoint no auth for fileID","match":{"location":"stepDefinition.NoAuthStepDef.dietician_send_get_http_request_with_endpoint_no_auth_for_file_id()"},"keyword":"When "},{"result":{"status":"skipped"},"line":25,"name":"Dietician recieves 401 unauthorized","match":{"arguments":[{"val":"401","offset":19}],"location":"stepDefinition.NoAuthStepDef.dietician_recieves_unauthorized(int)"},"keyword":"Then "}]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"error_message":"java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)\r\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)\r\n\tat java.base/java.util.Objects.checkIndex(Objects.java:385)\r\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\r\n\tat stepDefinition.NoAuthStepDef.<init>(NoAuthStepDef.java:46)\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\r\n\tat org.picocontainer.injectors.AbstractInjector.newInstance(AbstractInjector.java:145)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:342)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:678)\r\n\tat io.cucumber.picocontainer.PicoFactory.getInstance(PicoFactory.java:64)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)\r\n\tat io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:84)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:56)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:84)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)\r\n\tat io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\r\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\r\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\r\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\r\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\r\n\tat org.testng.TestRunner.run(TestRunner.java:614)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:312)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1208)\r\n\tat org.testng.TestNG.runSuites(TestNG.java:1112)\r\n\tat org.testng.TestNG.run(TestNG.java:1079)\r\n\tat org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)\r\n\tat org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)\r\n\tat org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)\r\n","duration":949400,"status":"failed"},"line":4,"name":"Set no auth","match":{"location":"stepDefinition.NoAuthStepDef.set_no_auth()"},"keyword":"Given "}]},{"start_timestamp":"2024-08-22T21:09:15.655Z","line":28,"name":"Check dietician able to delete patient by ID","description":"","id":"patient-post--patient-put-add-new-reports--get-morbidity-details--get-retrievepatient--delete;check-dietician-able-to-delete-patient-by-id","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"skipped"},"line":29,"name":"Dietician create DELETE request for no auth","match":{"location":"stepDefinition.NoAuthStepDef.dietician_create_delete_request_for_no_auth()"},"keyword":"Given "},{"result":{"status":"skipped"},"line":30,"name":"Dietician send DELETE http request with endpoint no auth","match":{"location":"stepDefinition.NoAuthStepDef.dietician_send_delete_http_request_with_endpoint_no_auth()"},"keyword":"When "},{"result":{"status":"skipped"},"line":31,"name":"Dietician recieves 401 unauthorized","match":{"arguments":[{"val":"401","offset":19}],"location":"stepDefinition.NoAuthStepDef.dietician_recieves_unauthorized(int)"},"keyword":"Then "}]}],"name":"Patient Post, Patient put add new reports, Get morbidity details, Get retrievePatient, delete","description":"","id":"patient-post--patient-put-add-new-reports--get-morbidity-details--get-retrievepatient--delete","keyword":"Feature","uri":"file:src/test/resources/Features/PatientNoAuth.feature","tags":[]},{"line":2,"elements":[{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"error_message":"java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)\r\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)\r\n\tat java.base/java.util.Objects.checkIndex(Objects.java:385)\r\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\r\n\tat stepDefinition.PatientTokenStepDef.<init>(PatientTokenStepDef.java:36)\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\r\n\tat org.picocontainer.injectors.AbstractInjector.newInstance(AbstractInjector.java:145)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:342)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:678)\r\n\tat io.cucumber.picocontainer.PicoFactory.getInstance(PicoFactory.java:64)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)\r\n\tat io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:84)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:56)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:84)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)\r\n\tat io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\r\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\r\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\r\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\r\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\r\n\tat org.testng.TestRunner.run(TestRunner.java:614)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:312)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1208)\r\n\tat org.testng.TestNG.runSuites(TestNG.java:1112)\r\n\tat org.testng.TestNG.run(TestNG.java:1079)\r\n\tat org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)\r\n\tat org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)\r\n\tat org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)\r\n","duration":2001600,"status":"failed"},"line":4,"name":"Set patient token","match":{"location":"stepDefinition.PatientTokenStepDef.set_patient_token()"},"keyword":"Given "}]},{"start_timestamp":"2024-08-22T21:09:15.666Z","line":5,"name":"Check patient able to create patient with valid data","description":"","id":"patient-post--patient-put-add-new-reports--get-morbidity-details--get-retrievepatient--delete;check-patient-able-to-create-patient-with-valid-data","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"skipped"},"line":7,"name":"Patient creates POST request by entering valid data into the form-data key and value fields.","match":{"location":"stepDefinition.PatientTokenStepDef.patient_creates_post_request_by_entering_valid_data_into_the_form_data_key_and_value_fields()"},"keyword":"Given "},{"result":{"status":"skipped"},"line":8,"name":"Patient sends POST http request with endpoint","match":{"location":"stepDefinition.PatientTokenStepDef.patient_sends_post_http_request_with_endpoint()"},"keyword":"When "},{"result":{"status":"skipped"},"line":9,"name":"Patient recieves 403","match":{"arguments":[{"val":"403","offset":17}],"location":"stepDefinition.PatientTokenStepDef.patient_recieves_unauthorized(int)"},"keyword":"Then "}]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"error_message":"java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)\r\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)\r\n\tat java.base/java.util.Objects.checkIndex(Objects.java:385)\r\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\r\n\tat stepDefinition.PatientTokenStepDef.<init>(PatientTokenStepDef.java:36)\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\r\n\tat org.picocontainer.injectors.AbstractInjector.newInstance(AbstractInjector.java:145)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:342)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:678)\r\n\tat io.cucumber.picocontainer.PicoFactory.getInstance(PicoFactory.java:64)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)\r\n\tat io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:84)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:56)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:84)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)\r\n\tat io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\r\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\r\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\r\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\r\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\r\n\tat org.testng.TestRunner.run(TestRunner.java:614)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:312)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1208)\r\n\tat org.testng.TestNG.runSuites(TestNG.java:1112)\r\n\tat org.testng.TestNG.run(TestNG.java:1079)\r\n\tat org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)\r\n\tat org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)\r\n\tat org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)\r\n","duration":996800,"status":"failed"},"line":4,"name":"Set patient token","match":{"location":"stepDefinition.PatientTokenStepDef.set_patient_token()"},"keyword":"Given "}]},{"start_timestamp":"2024-08-22T21:09:15.682Z","line":11,"name":"Check Patient able to add new reports for existing patient with valid data","description":"","id":"patient-post--patient-put-add-new-reports--get-morbidity-details--get-retrievepatient--delete;check-patient-able-to-add-new-reports-for-existing-patient-with-valid-data","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"skipped"},"line":13,"name":"Patient creates PUT request by entering valid data into the form-data key and value fields and valid patient ID","match":{"location":"stepDefinition.PatientTokenStepDef.patient_creates_put_request_by_entering_valid_data_into_the_form_data_key_and_value_fields_and_valid_patient_id()"},"keyword":"Given "},{"result":{"status":"skipped"},"line":14,"name":"Patient send PUT http request with endpoint","match":{"location":"stepDefinition.PatientTokenStepDef.patient_send_put_http_request_with_endpoint()"},"keyword":"When "},{"result":{"status":"skipped"},"line":15,"name":"Paitent recieves 403","match":{"arguments":[{"val":"403","offset":17}],"location":"stepDefinition.PatientTokenStepDef.paitent_recieves_unauthorized(int)"},"keyword":"Then "}]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"error_message":"java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)\r\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)\r\n\tat java.base/java.util.Objects.checkIndex(Objects.java:385)\r\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\r\n\tat stepDefinition.PatientTokenStepDef.<init>(PatientTokenStepDef.java:36)\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\r\n\tat org.picocontainer.injectors.AbstractInjector.newInstance(AbstractInjector.java:145)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:342)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:678)\r\n\tat io.cucumber.picocontainer.PicoFactory.getInstance(PicoFactory.java:64)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)\r\n\tat io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:84)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:56)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:84)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)\r\n\tat io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\r\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\r\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\r\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\r\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\r\n\tat org.testng.TestRunner.run(TestRunner.java:614)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:312)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1208)\r\n\tat org.testng.TestNG.runSuites(TestNG.java:1112)\r\n\tat org.testng.TestNG.run(TestNG.java:1079)\r\n\tat org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)\r\n\tat org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)\r\n\tat org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)\r\n","duration":2030700,"status":"failed"},"line":4,"name":"Set patient token","match":{"location":"stepDefinition.PatientTokenStepDef.set_patient_token()"},"keyword":"Given "}]},{"start_timestamp":"2024-08-22T21:09:15.694Z","line":17,"name":"Check Patient able to retrieve patients morbidity details by patient ID","description":"","id":"patient-post--patient-put-add-new-reports--get-morbidity-details--get-retrievepatient--delete;check-patient-able-to-retrieve-patients-morbidity-details-by-patient-id","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":510300,"status":"skipped"},"line":18,"name":"Patient create GET request","match":{"location":"stepDefinition.PatientTokenStepDef.patient_create_get_request()"},"keyword":"Given "},{"result":{"status":"skipped"},"line":19,"name":"Patient send GET http request with endpoint","match":{"location":"stepDefinition.PatientTokenStepDef.patient_send_get_http_request_with_endpoint()"},"keyword":"When "},{"result":{"status":"skipped"},"line":20,"name":"Patient recieves 200","match":{"arguments":[{"val":"200","offset":17}],"location":"stepDefinition.PatientTokenStepDef.patient_recieves_unauthorized(int)"},"keyword":"Then "}]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"error_message":"java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)\r\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)\r\n\tat java.base/java.util.Objects.checkIndex(Objects.java:385)\r\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\r\n\tat stepDefinition.PatientTokenStepDef.<init>(PatientTokenStepDef.java:36)\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\r\n\tat org.picocontainer.injectors.AbstractInjector.newInstance(AbstractInjector.java:145)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:342)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:678)\r\n\tat io.cucumber.picocontainer.PicoFactory.getInstance(PicoFactory.java:64)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)\r\n\tat io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:84)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:56)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:84)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)\r\n\tat io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\r\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\r\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\r\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\r\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\r\n\tat org.testng.TestRunner.run(TestRunner.java:614)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:312)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1208)\r\n\tat org.testng.TestNG.runSuites(TestNG.java:1112)\r\n\tat org.testng.TestNG.run(TestNG.java:1079)\r\n\tat org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)\r\n\tat org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)\r\n\tat org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)\r\n","duration":1003000,"status":"failed"},"line":4,"name":"Set patient token","match":{"location":"stepDefinition.PatientTokenStepDef.set_patient_token()"},"keyword":"Given "}]},{"start_timestamp":"2024-08-22T21:09:15.706Z","line":22,"name":"Check Patient able to retrieve patients by field","description":"","id":"patient-post--patient-put-add-new-reports--get-morbidity-details--get-retrievepatient--delete;check-patient-able-to-retrieve-patients-by-field","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"skipped"},"line":23,"name":"Patient creates GET request no auth by fileId","match":{"location":"stepDefinition.PatientTokenStepDef.patient_creates_get_request_no_auth_by_file_id()"},"keyword":"Given "},{"result":{"status":"skipped"},"line":24,"name":"Patient send GET http request with endpoint for fileID","match":{"location":"stepDefinition.PatientTokenStepDef.patient_send_get_http_request_with_endpoint_for_file_id()"},"keyword":"When "},{"result":{"duration":997700,"status":"skipped"},"line":25,"name":"Patient recieves 200","match":{"arguments":[{"val":"200","offset":17}],"location":"stepDefinition.PatientTokenStepDef.patient_recieves_unauthorized(int)"},"keyword":"Then "}]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"error_message":"java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)\r\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)\r\n\tat java.base/java.util.Objects.checkIndex(Objects.java:385)\r\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\r\n\tat stepDefinition.PatientTokenStepDef.<init>(PatientTokenStepDef.java:36)\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\r\n\tat org.picocontainer.injectors.AbstractInjector.newInstance(AbstractInjector.java:145)\r\n\tat org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:342)\r\n\tat org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270)\r\n\tat org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364)\r\n\tat org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56)\r\n\tat org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64)\r\n\tat org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91)\r\n\tat org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647)\r\n\tat org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:678)\r\n\tat io.cucumber.picocontainer.PicoFactory.getInstance(PicoFactory.java:64)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)\r\n\tat io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:84)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:56)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:84)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)\r\n\tat io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\r\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\r\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\r\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\r\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\r\n\tat org.testng.TestRunner.run(TestRunner.java:614)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:312)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1208)\r\n\tat org.testng.TestNG.runSuites(TestNG.java:1112)\r\n\tat org.testng.TestNG.run(TestNG.java:1079)\r\n\tat org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)\r\n\tat org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)\r\n\tat org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)\r\n","duration":1000000,"status":"failed"},"line":4,"name":"Set patient token","match":{"location":"stepDefinition.PatientTokenStepDef.set_patient_token()"},"keyword":"Given "}]},{"start_timestamp":"2024-08-22T21:09:15.714Z","line":28,"name":"Check Patient able to delete patient by ID","description":"","id":"patient-post--patient-put-add-new-reports--get-morbidity-details--get-retrievepatient--delete;check-patient-able-to-delete-patient-by-id","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"skipped"},"line":29,"name":"Patient create DELETE request","match":{"location":"stepDefinition.PatientTokenStepDef.patient_create_delete_request()"},"keyword":"Given "},{"result":{"status":"skipped"},"line":30,"name":"Patient send DELETE http request with endpoint","match":{"location":"stepDefinition.PatientTokenStepDef.patient_send_delete_http_request_with_endpoint()"},"keyword":"When "},{"result":{"status":"skipped"},"line":31,"name":"Patient recieves 403","match":{"arguments":[{"val":"403","offset":17}],"location":"stepDefinition.PatientTokenStepDef.patient_recieves_unauthorized(int)"},"keyword":"Then "}]}],"name":"Patient Post, Patient put add new reports, Get morbidity details, Get retrievePatient, delete","description":"","id":"patient-post--patient-put-add-new-reports--get-morbidity-details--get-retrievepatient--delete","keyword":"Feature","uri":"file:src/test/resources/Features/PatientPatientToken.feature","tags":[]},{"line":2,"elements":[{"line":3,"name":"Set admin token","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:09:15.723Z","line":6,"name":"admin login and set token","description":"","id":"get-operation-[retrieve-morbidity-condition-by-test-name-];admin-login-and-set-token","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":982400,"status":"passed"},"line":7,"name":"admin create GET request","match":{"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_create_get_request()"},"keyword":"Given "},{"result":{"status":"passed"},"line":8,"name":"admin send GET http request with endpoint","match":{"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_send_get_http_request_with_endpoint()"},"keyword":"When "},{"result":{"error_message":"java.lang.NullPointerException: Cannot invoke \"io.restassured.response.Response.getStatusCode()\" because \"this.response\" is null\r\n\tat stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves(RetrieveMorbidityByTestName_Steps.java:55)\r\n\tat ✽.admin recieves 200(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/RetrieveMorbidity_byTestname.feature:9)\r\n","duration":1021700,"status":"failed"},"line":9,"name":"admin recieves 200","match":{"arguments":[{"val":"200","offset":15}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves(java.lang.Integer)"},"keyword":"Then "}]},{"line":3,"name":"Set admin token","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:09:15.729Z","line":20,"name":"Check admin able to retrieve morbidity condition by test name","description":"","id":"get-operation-[retrieve-morbidity-condition-by-test-name-];check-admin-able-to-retrieve-morbidity-condition-by-test-name;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":14,"name":"admin create GET request","match":{"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_create_get_request()"},"keyword":"Given "},{"result":{"duration":1302251500,"status":"passed"},"line":15,"name":"admin checks \"Fasting Glucose\" and send GET http request with endpoint","match":{"arguments":[{"val":"\"Fasting Glucose\"","offset":13}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_checks_and_send_get_http_request_with_endpoint(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected [200] but found [401]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1449)\r\n\tat stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_ok_with_details_of_the_patient_id(RetrieveMorbidityByTestName_Steps.java:51)\r\n\tat ✽.admin recieves 200 ok with details of the patient id(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/RetrieveMorbidity_byTestname.feature:16)\r\n","duration":996200,"status":"failed"},"line":16,"name":"admin recieves 200 ok with details of the patient id","match":{"arguments":[{"val":"200","offset":15}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_ok_with_details_of_the_patient_id(java.lang.Integer)"},"keyword":"Then "}]},{"line":3,"name":"Set admin token","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:09:17.038Z","line":21,"name":"Check admin able to retrieve morbidity condition by test name","description":"","id":"get-operation-[retrieve-morbidity-condition-by-test-name-];check-admin-able-to-retrieve-morbidity-condition-by-test-name;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":14,"name":"admin create GET request","match":{"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_create_get_request()"},"keyword":"Given "},{"result":{"duration":1625075600,"status":"passed"},"line":15,"name":"admin checks \"Average Glucose\" and send GET http request with endpoint","match":{"arguments":[{"val":"\"Average Glucose\"","offset":13}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_checks_and_send_get_http_request_with_endpoint(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected [200] but found [401]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1449)\r\n\tat stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_ok_with_details_of_the_patient_id(RetrieveMorbidityByTestName_Steps.java:51)\r\n\tat ✽.admin recieves 200 ok with details of the patient id(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/RetrieveMorbidity_byTestname.feature:16)\r\n","duration":3012100,"status":"failed"},"line":16,"name":"admin recieves 200 ok with details of the patient id","match":{"arguments":[{"val":"200","offset":15}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_ok_with_details_of_the_patient_id(java.lang.Integer)"},"keyword":"Then "}]},{"line":3,"name":"Set admin token","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:09:18.673Z","line":22,"name":"Check admin able to retrieve morbidity condition by test name","description":"","id":"get-operation-[retrieve-morbidity-condition-by-test-name-];check-admin-able-to-retrieve-morbidity-condition-by-test-name;;4","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":14,"name":"admin create GET request","match":{"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_create_get_request()"},"keyword":"Given "},{"result":{"duration":1220592900,"status":"passed"},"line":15,"name":"admin checks \"Plasma Glucose\" and send GET http request with endpoint","match":{"arguments":[{"val":"\"Plasma Glucose\"","offset":13}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_checks_and_send_get_http_request_with_endpoint(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected [200] but found [401]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1449)\r\n\tat stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_ok_with_details_of_the_patient_id(RetrieveMorbidityByTestName_Steps.java:51)\r\n\tat ✽.admin recieves 200 ok with details of the patient id(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/RetrieveMorbidity_byTestname.feature:16)\r\n","status":"failed"},"line":16,"name":"admin recieves 200 ok with details of the patient id","match":{"arguments":[{"val":"200","offset":15}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_ok_with_details_of_the_patient_id(java.lang.Integer)"},"keyword":"Then "}]},{"line":3,"name":"Set admin token","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:09:19.900Z","line":23,"name":"Check admin able to retrieve morbidity condition by test name","description":"","id":"get-operation-[retrieve-morbidity-condition-by-test-name-];check-admin-able-to-retrieve-morbidity-condition-by-test-name;;5","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":14,"name":"admin create GET request","match":{"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_create_get_request()"},"keyword":"Given "},{"result":{"duration":1407558500,"status":"passed"},"line":15,"name":"admin checks \"TSH\" and send GET http request with endpoint","match":{"arguments":[{"val":"\"TSH\"","offset":13}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_checks_and_send_get_http_request_with_endpoint(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected [200] but found [401]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1449)\r\n\tat stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_ok_with_details_of_the_patient_id(RetrieveMorbidityByTestName_Steps.java:51)\r\n\tat ✽.admin recieves 200 ok with details of the patient id(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/RetrieveMorbidity_byTestname.feature:16)\r\n","duration":997500,"status":"failed"},"line":16,"name":"admin recieves 200 ok with details of the patient id","match":{"arguments":[{"val":"200","offset":15}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_ok_with_details_of_the_patient_id(java.lang.Integer)"},"keyword":"Then "}]},{"line":3,"name":"Set admin token","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:09:21.315Z","line":24,"name":"Check admin able to retrieve morbidity condition by test name","description":"","id":"get-operation-[retrieve-morbidity-condition-by-test-name-];check-admin-able-to-retrieve-morbidity-condition-by-test-name;;6","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":14,"name":"admin create GET request","match":{"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_create_get_request()"},"keyword":"Given "},{"result":{"duration":1574515800,"status":"passed"},"line":15,"name":"admin checks \"T3\" and send GET http request with endpoint","match":{"arguments":[{"val":"\"T3\"","offset":13}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_checks_and_send_get_http_request_with_endpoint(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected [200] but found [401]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1449)\r\n\tat stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_ok_with_details_of_the_patient_id(RetrieveMorbidityByTestName_Steps.java:51)\r\n\tat ✽.admin recieves 200 ok with details of the patient id(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/RetrieveMorbidity_byTestname.feature:16)\r\n","duration":991900,"status":"failed"},"line":16,"name":"admin recieves 200 ok with details of the patient id","match":{"arguments":[{"val":"200","offset":15}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_ok_with_details_of_the_patient_id(java.lang.Integer)"},"keyword":"Then "}]},{"line":3,"name":"Set admin token","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:09:22.894Z","line":25,"name":"Check admin able to retrieve morbidity condition by test name","description":"","id":"get-operation-[retrieve-morbidity-condition-by-test-name-];check-admin-able-to-retrieve-morbidity-condition-by-test-name;;7","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":14,"name":"admin create GET request","match":{"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_create_get_request()"},"keyword":"Given "},{"result":{"duration":1176439400,"status":"passed"},"line":15,"name":"admin checks \"T4\" and send GET http request with endpoint","match":{"arguments":[{"val":"\"T4\"","offset":13}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_checks_and_send_get_http_request_with_endpoint(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected [200] but found [401]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1449)\r\n\tat stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_ok_with_details_of_the_patient_id(RetrieveMorbidityByTestName_Steps.java:51)\r\n\tat ✽.admin recieves 200 ok with details of the patient id(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/RetrieveMorbidity_byTestname.feature:16)\r\n","duration":970800,"status":"failed"},"line":16,"name":"admin recieves 200 ok with details of the patient id","match":{"arguments":[{"val":"200","offset":15}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_ok_with_details_of_the_patient_id(java.lang.Integer)"},"keyword":"Then "}]},{"line":3,"name":"Set admin token","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:09:24.075Z","line":26,"name":"Check admin able to retrieve morbidity condition by test name","description":"","id":"get-operation-[retrieve-morbidity-condition-by-test-name-];check-admin-able-to-retrieve-morbidity-condition-by-test-name;;8","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1001000,"status":"passed"},"line":14,"name":"admin create GET request","match":{"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_create_get_request()"},"keyword":"Given "},{"result":{"duration":1192765400,"status":"passed"},"line":15,"name":"admin checks \"HBA1C\" and send GET http request with endpoint","match":{"arguments":[{"val":"\"HBA1C\"","offset":13}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_checks_and_send_get_http_request_with_endpoint(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected [200] but found [401]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1449)\r\n\tat stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_ok_with_details_of_the_patient_id(RetrieveMorbidityByTestName_Steps.java:51)\r\n\tat ✽.admin recieves 200 ok with details of the patient id(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/RetrieveMorbidity_byTestname.feature:16)\r\n","duration":2020000,"status":"failed"},"line":16,"name":"admin recieves 200 ok with details of the patient id","match":{"arguments":[{"val":"200","offset":15}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_ok_with_details_of_the_patient_id(java.lang.Integer)"},"keyword":"Then "}]},{"line":3,"name":"Set admin token","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:09:25.276Z","line":37,"name":"Check admin able to retrieve morbidity condition by test name  with invalid method","description":"","id":"get-operation-[retrieve-morbidity-condition-by-test-name-];check-admin-able-to-retrieve-morbidity-condition-by-test-name--with-invalid-method;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":30,"name":"admin create POST request instead Get Request","match":{"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_create_post_request_instead_get_request()"},"keyword":"Given "},{"result":{"duration":1325495500,"status":"passed"},"line":31,"name":"admin send POST http request for  \"Fasting Glucose\" name instead Get Request with endpoint","match":{"arguments":[{"val":"\"Fasting Glucose\"","offset":34}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_send_post_http_request_for_name_instead_get_request_with_endpoint(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected [405] but found [401]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1449)\r\n\tat stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_method_not_allowed(RetrieveMorbidityByTestName_Steps.java:81)\r\n\tat ✽.admin recieves 405 method not allowed(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/RetrieveMorbidity_byTestname.feature:32)\r\n","duration":1977200,"status":"failed"},"line":32,"name":"admin recieves 405 method not allowed","match":{"arguments":[{"val":"405","offset":15}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_method_not_allowed(java.lang.Integer)"},"keyword":"Then "}]},{"line":3,"name":"Set admin token","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:09:26.622Z","line":38,"name":"Check admin able to retrieve morbidity condition by test name  with invalid method","description":"","id":"get-operation-[retrieve-morbidity-condition-by-test-name-];check-admin-able-to-retrieve-morbidity-condition-by-test-name--with-invalid-method;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":30,"name":"admin create POST request instead Get Request","match":{"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_create_post_request_instead_get_request()"},"keyword":"Given "},{"result":{"duration":1313157400,"status":"passed"},"line":31,"name":"admin send POST http request for  \"Average Glucose\" name instead Get Request with endpoint","match":{"arguments":[{"val":"\"Average Glucose\"","offset":34}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_send_post_http_request_for_name_instead_get_request_with_endpoint(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected [405] but found [401]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1449)\r\n\tat stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_method_not_allowed(RetrieveMorbidityByTestName_Steps.java:81)\r\n\tat ✽.admin recieves 405 method not allowed(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/RetrieveMorbidity_byTestname.feature:32)\r\n","duration":1001500,"status":"failed"},"line":32,"name":"admin recieves 405 method not allowed","match":{"arguments":[{"val":"405","offset":15}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_method_not_allowed(java.lang.Integer)"},"keyword":"Then "}]},{"line":3,"name":"Set admin token","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:09:27.945Z","line":39,"name":"Check admin able to retrieve morbidity condition by test name  with invalid method","description":"","id":"get-operation-[retrieve-morbidity-condition-by-test-name-];check-admin-able-to-retrieve-morbidity-condition-by-test-name--with-invalid-method;;4","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":30,"name":"admin create POST request instead Get Request","match":{"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_create_post_request_instead_get_request()"},"keyword":"Given "},{"result":{"duration":1386136200,"status":"passed"},"line":31,"name":"admin send POST http request for  \"Plasma Glucose\" name instead Get Request with endpoint","match":{"arguments":[{"val":"\"Plasma Glucose\"","offset":34}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_send_post_http_request_for_name_instead_get_request_with_endpoint(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected [405] but found [401]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1449)\r\n\tat stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_method_not_allowed(RetrieveMorbidityByTestName_Steps.java:81)\r\n\tat ✽.admin recieves 405 method not allowed(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/RetrieveMorbidity_byTestname.feature:32)\r\n","status":"failed"},"line":32,"name":"admin recieves 405 method not allowed","match":{"arguments":[{"val":"405","offset":15}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_method_not_allowed(java.lang.Integer)"},"keyword":"Then "}]},{"line":3,"name":"Set admin token","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:09:29.336Z","line":40,"name":"Check admin able to retrieve morbidity condition by test name  with invalid method","description":"","id":"get-operation-[retrieve-morbidity-condition-by-test-name-];check-admin-able-to-retrieve-morbidity-condition-by-test-name--with-invalid-method;;5","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":30,"name":"admin create POST request instead Get Request","match":{"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_create_post_request_instead_get_request()"},"keyword":"Given "},{"result":{"duration":1335804700,"status":"passed"},"line":31,"name":"admin send POST http request for  \"TSH\" name instead Get Request with endpoint","match":{"arguments":[{"val":"\"TSH\"","offset":34}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_send_post_http_request_for_name_instead_get_request_with_endpoint(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected [405] but found [401]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1449)\r\n\tat stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_method_not_allowed(RetrieveMorbidityByTestName_Steps.java:81)\r\n\tat ✽.admin recieves 405 method not allowed(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/RetrieveMorbidity_byTestname.feature:32)\r\n","duration":5003200,"status":"failed"},"line":32,"name":"admin recieves 405 method not allowed","match":{"arguments":[{"val":"405","offset":15}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_method_not_allowed(java.lang.Integer)"},"keyword":"Then "}]},{"line":3,"name":"Set admin token","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:09:30.684Z","line":41,"name":"Check admin able to retrieve morbidity condition by test name  with invalid method","description":"","id":"get-operation-[retrieve-morbidity-condition-by-test-name-];check-admin-able-to-retrieve-morbidity-condition-by-test-name--with-invalid-method;;6","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":30,"name":"admin create POST request instead Get Request","match":{"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_create_post_request_instead_get_request()"},"keyword":"Given "},{"result":{"duration":1242157900,"status":"passed"},"line":31,"name":"admin send POST http request for  \"T3\" name instead Get Request with endpoint","match":{"arguments":[{"val":"\"T3\"","offset":34}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_send_post_http_request_for_name_instead_get_request_with_endpoint(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected [405] but found [401]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1449)\r\n\tat stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_method_not_allowed(RetrieveMorbidityByTestName_Steps.java:81)\r\n\tat ✽.admin recieves 405 method not allowed(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/RetrieveMorbidity_byTestname.feature:32)\r\n","duration":964200,"status":"failed"},"line":32,"name":"admin recieves 405 method not allowed","match":{"arguments":[{"val":"405","offset":15}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_method_not_allowed(java.lang.Integer)"},"keyword":"Then "}]},{"line":3,"name":"Set admin token","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:09:31.933Z","line":42,"name":"Check admin able to retrieve morbidity condition by test name  with invalid method","description":"","id":"get-operation-[retrieve-morbidity-condition-by-test-name-];check-admin-able-to-retrieve-morbidity-condition-by-test-name--with-invalid-method;;7","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":30,"name":"admin create POST request instead Get Request","match":{"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_create_post_request_instead_get_request()"},"keyword":"Given "},{"result":{"duration":1732419100,"status":"passed"},"line":31,"name":"admin send POST http request for  \"T4\" name instead Get Request with endpoint","match":{"arguments":[{"val":"\"T4\"","offset":34}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_send_post_http_request_for_name_instead_get_request_with_endpoint(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected [405] but found [401]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1449)\r\n\tat stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_method_not_allowed(RetrieveMorbidityByTestName_Steps.java:81)\r\n\tat ✽.admin recieves 405 method not allowed(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/RetrieveMorbidity_byTestname.feature:32)\r\n","status":"failed"},"line":32,"name":"admin recieves 405 method not allowed","match":{"arguments":[{"val":"405","offset":15}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_method_not_allowed(java.lang.Integer)"},"keyword":"Then "}]},{"line":3,"name":"Set admin token","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:09:33.676Z","line":43,"name":"Check admin able to retrieve morbidity condition by test name  with invalid method","description":"","id":"get-operation-[retrieve-morbidity-condition-by-test-name-];check-admin-able-to-retrieve-morbidity-condition-by-test-name--with-invalid-method;;8","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":30,"name":"admin create POST request instead Get Request","match":{"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_create_post_request_instead_get_request()"},"keyword":"Given "},{"result":{"duration":1202186600,"status":"passed"},"line":31,"name":"admin send POST http request for  \"HBA1C\" name instead Get Request with endpoint","match":{"arguments":[{"val":"\"HBA1C\"","offset":34}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_send_post_http_request_for_name_instead_get_request_with_endpoint(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected [405] but found [401]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1449)\r\n\tat stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_method_not_allowed(RetrieveMorbidityByTestName_Steps.java:81)\r\n\tat ✽.admin recieves 405 method not allowed(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/RetrieveMorbidity_byTestname.feature:32)\r\n","duration":506300,"status":"failed"},"line":32,"name":"admin recieves 405 method not allowed","match":{"arguments":[{"val":"405","offset":15}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_method_not_allowed(java.lang.Integer)"},"keyword":"Then "}]},{"line":3,"name":"Set admin token","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:09:34.885Z","line":54,"name":"Check admin able to retrieve morbidity condition by invalid test name","description":"","id":"get-operation-[retrieve-morbidity-condition-by-test-name-];check-admin-able-to-retrieve-morbidity-condition-by-invalid-test-name;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1031400,"status":"passed"},"line":46,"name":"admin create GET request","match":{"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_create_get_request()"},"keyword":"Given "},{"result":{"duration":1458658000,"status":"passed"},"line":47,"name":"admin send http GET request \"fever\" with invalid test name","match":{"arguments":[{"val":"\"fever\"","offset":28}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_send_http_get_request_with_invalid_test_name(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected [404] but found [401]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1449)\r\n\tat stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_not_found(RetrieveMorbidityByTestName_Steps.java:88)\r\n\tat ✽.admin recieves 404 not found(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/RetrieveMorbidity_byTestname.feature:48)\r\n","duration":999000,"status":"failed"},"line":48,"name":"admin recieves 404 not found","match":{"arguments":[{"val":"404","offset":15}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_not_found(java.lang.Integer)"},"keyword":"Then "}]},{"line":3,"name":"Set admin token","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:09:36.356Z","line":55,"name":"Check admin able to retrieve morbidity condition by invalid test name","description":"","id":"get-operation-[retrieve-morbidity-condition-by-test-name-];check-admin-able-to-retrieve-morbidity-condition-by-invalid-test-name;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1000500,"status":"passed"},"line":46,"name":"admin create GET request","match":{"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_create_get_request()"},"keyword":"Given "},{"result":{"duration":1263345600,"status":"passed"},"line":47,"name":"admin send http GET request \"cold\" with invalid test name","match":{"arguments":[{"val":"\"cold\"","offset":28}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_send_http_get_request_with_invalid_test_name(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected [404] but found [401]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1449)\r\n\tat stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_not_found(RetrieveMorbidityByTestName_Steps.java:88)\r\n\tat ✽.admin recieves 404 not found(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/RetrieveMorbidity_byTestname.feature:48)\r\n","duration":999700,"status":"failed"},"line":48,"name":"admin recieves 404 not found","match":{"arguments":[{"val":"404","offset":15}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_not_found(java.lang.Integer)"},"keyword":"Then "}]},{"line":3,"name":"Set admin token","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:09:37.626Z","line":56,"name":"Check admin able to retrieve morbidity condition by invalid test name","description":"","id":"get-operation-[retrieve-morbidity-condition-by-test-name-];check-admin-able-to-retrieve-morbidity-condition-by-invalid-test-name;;4","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":46,"name":"admin create GET request","match":{"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_create_get_request()"},"keyword":"Given "},{"result":{"duration":1486565800,"status":"passed"},"line":47,"name":"admin send http GET request \"cough\" with invalid test name","match":{"arguments":[{"val":"\"cough\"","offset":28}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_send_http_get_request_with_invalid_test_name(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected [404] but found [401]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1449)\r\n\tat stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_not_found(RetrieveMorbidityByTestName_Steps.java:88)\r\n\tat ✽.admin recieves 404 not found(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/RetrieveMorbidity_byTestname.feature:48)\r\n","status":"failed"},"line":48,"name":"admin recieves 404 not found","match":{"arguments":[{"val":"404","offset":15}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_not_found(java.lang.Integer)"},"keyword":"Then "}]},{"line":3,"name":"Set admin token","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:09:39.123Z","line":57,"name":"Check admin able to retrieve morbidity condition by invalid test name","description":"","id":"get-operation-[retrieve-morbidity-condition-by-test-name-];check-admin-able-to-retrieve-morbidity-condition-by-invalid-test-name;;5","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":46,"name":"admin create GET request","match":{"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_create_get_request()"},"keyword":"Given "},{"result":{"duration":1642112600,"status":"passed"},"line":47,"name":"admin send http GET request \"covid\" with invalid test name","match":{"arguments":[{"val":"\"covid\"","offset":28}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_send_http_get_request_with_invalid_test_name(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected [404] but found [401]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1449)\r\n\tat stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_not_found(RetrieveMorbidityByTestName_Steps.java:88)\r\n\tat ✽.admin recieves 404 not found(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/RetrieveMorbidity_byTestname.feature:48)\r\n","duration":2495400,"status":"failed"},"line":48,"name":"admin recieves 404 not found","match":{"arguments":[{"val":"404","offset":15}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_not_found(java.lang.Integer)"},"keyword":"Then "}]},{"line":3,"name":"Set admin token","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:09:40.776Z","line":58,"name":"Check admin able to retrieve morbidity condition by invalid test name","description":"","id":"get-operation-[retrieve-morbidity-condition-by-test-name-];check-admin-able-to-retrieve-morbidity-condition-by-invalid-test-name;;6","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":46,"name":"admin create GET request","match":{"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_create_get_request()"},"keyword":"Given "},{"result":{"duration":1278598700,"status":"passed"},"line":47,"name":"admin send http GET request \"pcos\" with invalid test name","match":{"arguments":[{"val":"\"pcos\"","offset":28}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_send_http_get_request_with_invalid_test_name(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected [404] but found [401]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1449)\r\n\tat stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_not_found(RetrieveMorbidityByTestName_Steps.java:88)\r\n\tat ✽.admin recieves 404 not found(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/RetrieveMorbidity_byTestname.feature:48)\r\n","duration":1007600,"status":"failed"},"line":48,"name":"admin recieves 404 not found","match":{"arguments":[{"val":"404","offset":15}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_not_found(java.lang.Integer)"},"keyword":"Then "}]},{"line":3,"name":"Set admin token","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:09:42.062Z","line":59,"name":"Check admin able to retrieve morbidity condition by invalid test name","description":"","id":"get-operation-[retrieve-morbidity-condition-by-test-name-];check-admin-able-to-retrieve-morbidity-condition-by-invalid-test-name;;7","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":46,"name":"admin create GET request","match":{"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_create_get_request()"},"keyword":"Given "},{"result":{"duration":1259187300,"status":"passed"},"line":47,"name":"admin send http GET request \"headech\" with invalid test name","match":{"arguments":[{"val":"\"headech\"","offset":28}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_send_http_get_request_with_invalid_test_name(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected [404] but found [401]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1449)\r\n\tat stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_not_found(RetrieveMorbidityByTestName_Steps.java:88)\r\n\tat ✽.admin recieves 404 not found(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/RetrieveMorbidity_byTestname.feature:48)\r\n","duration":1073200,"status":"failed"},"line":48,"name":"admin recieves 404 not found","match":{"arguments":[{"val":"404","offset":15}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_not_found(java.lang.Integer)"},"keyword":"Then "}]},{"line":3,"name":"Set admin token","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:09:43.332Z","line":60,"name":"Check admin able to retrieve morbidity condition by invalid test name","description":"","id":"get-operation-[retrieve-morbidity-condition-by-test-name-];check-admin-able-to-retrieve-morbidity-condition-by-invalid-test-name;;8","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":46,"name":"admin create GET request","match":{"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_create_get_request()"},"keyword":"Given "},{"result":{"duration":1319112600,"status":"passed"},"line":47,"name":"admin send http GET request \"Jaundice\" with invalid test name","match":{"arguments":[{"val":"\"Jaundice\"","offset":28}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_send_http_get_request_with_invalid_test_name(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected [404] but found [401]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1449)\r\n\tat stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_not_found(RetrieveMorbidityByTestName_Steps.java:88)\r\n\tat ✽.admin recieves 404 not found(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/RetrieveMorbidity_byTestname.feature:48)\r\n","duration":935500,"status":"failed"},"line":48,"name":"admin recieves 404 not found","match":{"arguments":[{"val":"404","offset":15}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_not_found(java.lang.Integer)"},"keyword":"Then "}]},{"line":3,"name":"Set admin token","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:09:44.657Z","line":71,"name":"Check admin able to retrieve morbidity condition by test name with invalid endpoint","description":"","id":"get-operation-[retrieve-morbidity-condition-by-test-name-];check-admin-able-to-retrieve-morbidity-condition-by-test-name-with-invalid-endpoint;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":64,"name":"admin create GET request","match":{"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_create_get_request()"},"keyword":"Given "},{"result":{"duration":1711823200,"status":"passed"},"line":65,"name":"admin send GET http request \"Fasting Glucose\" with invalid endpoint","match":{"arguments":[{"val":"\"Fasting Glucose\"","offset":28}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_send_get_http_request_with_invalid_endpoint(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected [404] but found [401]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1449)\r\n\tat stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_not_found(RetrieveMorbidityByTestName_Steps.java:88)\r\n\tat ✽.admin recieves 404 not found(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/RetrieveMorbidity_byTestname.feature:66)\r\n","duration":751200,"status":"failed"},"line":66,"name":"admin recieves 404 not found","match":{"arguments":[{"val":"404","offset":15}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_not_found(java.lang.Integer)"},"keyword":"Then "}]},{"line":3,"name":"Set admin token","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:09:46.377Z","line":72,"name":"Check admin able to retrieve morbidity condition by test name with invalid endpoint","description":"","id":"get-operation-[retrieve-morbidity-condition-by-test-name-];check-admin-able-to-retrieve-morbidity-condition-by-test-name-with-invalid-endpoint;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":541000,"status":"passed"},"line":64,"name":"admin create GET request","match":{"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_create_get_request()"},"keyword":"Given "},{"result":{"duration":1369326600,"status":"passed"},"line":65,"name":"admin send GET http request \"Average Glucose\" with invalid endpoint","match":{"arguments":[{"val":"\"Average Glucose\"","offset":28}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_send_get_http_request_with_invalid_endpoint(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected [404] but found [401]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1449)\r\n\tat stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_not_found(RetrieveMorbidityByTestName_Steps.java:88)\r\n\tat ✽.admin recieves 404 not found(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/RetrieveMorbidity_byTestname.feature:66)\r\n","duration":2471200,"status":"failed"},"line":66,"name":"admin recieves 404 not found","match":{"arguments":[{"val":"404","offset":15}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_not_found(java.lang.Integer)"},"keyword":"Then "}]},{"line":3,"name":"Set admin token","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:09:47.765Z","line":73,"name":"Check admin able to retrieve morbidity condition by test name with invalid endpoint","description":"","id":"get-operation-[retrieve-morbidity-condition-by-test-name-];check-admin-able-to-retrieve-morbidity-condition-by-test-name-with-invalid-endpoint;;4","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1467100,"status":"passed"},"line":64,"name":"admin create GET request","match":{"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_create_get_request()"},"keyword":"Given "},{"result":{"duration":1432152700,"status":"passed"},"line":65,"name":"admin send GET http request \"Plasma Glucose\" with invalid endpoint","match":{"arguments":[{"val":"\"Plasma Glucose\"","offset":28}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_send_get_http_request_with_invalid_endpoint(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected [404] but found [401]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1449)\r\n\tat stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_not_found(RetrieveMorbidityByTestName_Steps.java:88)\r\n\tat ✽.admin recieves 404 not found(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/RetrieveMorbidity_byTestname.feature:66)\r\n","duration":1690200,"status":"failed"},"line":66,"name":"admin recieves 404 not found","match":{"arguments":[{"val":"404","offset":15}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_not_found(java.lang.Integer)"},"keyword":"Then "}]},{"line":3,"name":"Set admin token","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:09:49.214Z","line":74,"name":"Check admin able to retrieve morbidity condition by test name with invalid endpoint","description":"","id":"get-operation-[retrieve-morbidity-condition-by-test-name-];check-admin-able-to-retrieve-morbidity-condition-by-test-name-with-invalid-endpoint;;5","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":64,"name":"admin create GET request","match":{"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_create_get_request()"},"keyword":"Given "},{"result":{"duration":1507303000,"status":"passed"},"line":65,"name":"admin send GET http request \"TSH\" with invalid endpoint","match":{"arguments":[{"val":"\"TSH\"","offset":28}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_send_get_http_request_with_invalid_endpoint(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected [404] but found [401]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1449)\r\n\tat stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_not_found(RetrieveMorbidityByTestName_Steps.java:88)\r\n\tat ✽.admin recieves 404 not found(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/RetrieveMorbidity_byTestname.feature:66)\r\n","duration":998700,"status":"failed"},"line":66,"name":"admin recieves 404 not found","match":{"arguments":[{"val":"404","offset":15}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_not_found(java.lang.Integer)"},"keyword":"Then "}]},{"line":3,"name":"Set admin token","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:09:50.734Z","line":75,"name":"Check admin able to retrieve morbidity condition by test name with invalid endpoint","description":"","id":"get-operation-[retrieve-morbidity-condition-by-test-name-];check-admin-able-to-retrieve-morbidity-condition-by-test-name-with-invalid-endpoint;;6","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":64,"name":"admin create GET request","match":{"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_create_get_request()"},"keyword":"Given "},{"result":{"duration":1229373100,"status":"passed"},"line":65,"name":"admin send GET http request \"T3\" with invalid endpoint","match":{"arguments":[{"val":"\"T3\"","offset":28}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_send_get_http_request_with_invalid_endpoint(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected [404] but found [401]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1449)\r\n\tat stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_not_found(RetrieveMorbidityByTestName_Steps.java:88)\r\n\tat ✽.admin recieves 404 not found(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/RetrieveMorbidity_byTestname.feature:66)\r\n","duration":1015700,"status":"failed"},"line":66,"name":"admin recieves 404 not found","match":{"arguments":[{"val":"404","offset":15}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_not_found(java.lang.Integer)"},"keyword":"Then "}]},{"line":3,"name":"Set admin token","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:09:51.978Z","line":76,"name":"Check admin able to retrieve morbidity condition by test name with invalid endpoint","description":"","id":"get-operation-[retrieve-morbidity-condition-by-test-name-];check-admin-able-to-retrieve-morbidity-condition-by-test-name-with-invalid-endpoint;;7","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":64,"name":"admin create GET request","match":{"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_create_get_request()"},"keyword":"Given "},{"result":{"duration":1433216700,"status":"passed"},"line":65,"name":"admin send GET http request \"T4\" with invalid endpoint","match":{"arguments":[{"val":"\"T4\"","offset":28}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_send_get_http_request_with_invalid_endpoint(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected [404] but found [401]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1449)\r\n\tat stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_not_found(RetrieveMorbidityByTestName_Steps.java:88)\r\n\tat ✽.admin recieves 404 not found(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/RetrieveMorbidity_byTestname.feature:66)\r\n","duration":1002200,"status":"failed"},"line":66,"name":"admin recieves 404 not found","match":{"arguments":[{"val":"404","offset":15}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_not_found(java.lang.Integer)"},"keyword":"Then "}]},{"line":3,"name":"Set admin token","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:09:53.419Z","line":77,"name":"Check admin able to retrieve morbidity condition by test name with invalid endpoint","description":"","id":"get-operation-[retrieve-morbidity-condition-by-test-name-];check-admin-able-to-retrieve-morbidity-condition-by-test-name-with-invalid-endpoint;;8","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"status":"passed"},"line":64,"name":"admin create GET request","match":{"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_create_get_request()"},"keyword":"Given "},{"result":{"duration":1619948400,"status":"passed"},"line":65,"name":"admin send GET http request \"HBA1C\" with invalid endpoint","match":{"arguments":[{"val":"\"HBA1C\"","offset":28}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_send_get_http_request_with_invalid_endpoint(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected [404] but found [401]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1449)\r\n\tat stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_not_found(RetrieveMorbidityByTestName_Steps.java:88)\r\n\tat ✽.admin recieves 404 not found(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/RetrieveMorbidity_byTestname.feature:66)\r\n","duration":2013200,"status":"failed"},"line":66,"name":"admin recieves 404 not found","match":{"arguments":[{"val":"404","offset":15}],"location":"stepDefinition.RetrieveMorbidityByTestName_Steps.admin_recieves_not_found(java.lang.Integer)"},"keyword":"Then "}]}],"name":"Get Operation [Retrieve Morbidity condition by Test name ]","description":"","id":"get-operation-[retrieve-morbidity-condition-by-test-name-]","keyword":"Feature","uri":"file:src/test/resources/Features/RetrieveMorbidity_byTestname.feature","tags":[]},{"line":2,"elements":[{"start_timestamp":"2024-08-22T21:09:55.060Z","line":10,"name":"Validate logout functionality for different user roles with token","description":"","id":"get-logout;validate-logout-functionality-for-different-user-roles-with-token;;2","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1568539000,"status":"passed"},"line":5,"name":"User sends a GET request to fetch logout details  with \"get request\" \"Logout\" 0","match":{"arguments":[{"val":"\"get request\"","offset":55},{"val":"\"Logout\"","offset":69},{"val":"0","offset":78}],"location":"stepDefinition.LogoutStepDef.user_sends_a_get_request_to_fetch_logout_details_with(java.lang.String,java.lang.String,java.lang.Integer)"},"keyword":"When "},{"result":{"duration":61695800,"status":"passed"},"line":6,"name":"the response status code should be  with \"Logout\" 0","match":{"arguments":[{"val":"\"Logout\"","offset":41},{"val":"0","offset":50}],"location":"stepDefinition.LogoutStepDef.the_response_status_code_should_be_with(java.lang.String,java.lang.Integer)"},"keyword":"Then "}],"tags":[{"name":"@tag"}]},{"start_timestamp":"2024-08-22T21:09:56.706Z","line":11,"name":"Validate logout functionality for different user roles with token","description":"","id":"get-logout;validate-logout-functionality-for-different-user-roles-with-token;;3","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":2029274800,"status":"passed"},"line":5,"name":"User sends a GET request to fetch logout details  with \"get request\" \"Logout\" 1","match":{"arguments":[{"val":"\"get request\"","offset":55},{"val":"\"Logout\"","offset":69},{"val":"1","offset":78}],"location":"stepDefinition.LogoutStepDef.user_sends_a_get_request_to_fetch_logout_details_with(java.lang.String,java.lang.String,java.lang.Integer)"},"keyword":"When "},{"result":{"duration":51112800,"status":"passed"},"line":6,"name":"the response status code should be  with \"Logout\" 1","match":{"arguments":[{"val":"\"Logout\"","offset":41},{"val":"1","offset":50}],"location":"stepDefinition.LogoutStepDef.the_response_status_code_should_be_with(java.lang.String,java.lang.Integer)"},"keyword":"Then "}],"tags":[{"name":"@tag"}]},{"start_timestamp":"2024-08-22T21:09:58.798Z","line":12,"name":"Validate logout functionality for different user roles with token","description":"","id":"get-logout;validate-logout-functionality-for-different-user-roles-with-token;;4","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1336475400,"status":"passed"},"line":5,"name":"User sends a GET request to fetch logout details  with \"post request with invalid method\" \"Logout\" 2","match":{"arguments":[{"val":"\"post request with invalid method\"","offset":55},{"val":"\"Logout\"","offset":90},{"val":"2","offset":99}],"location":"stepDefinition.LogoutStepDef.user_sends_a_get_request_to_fetch_logout_details_with(java.lang.String,java.lang.String,java.lang.Integer)"},"keyword":"When "},{"result":{"duration":66537900,"status":"passed"},"line":6,"name":"the response status code should be  with \"Logout\" 2","match":{"arguments":[{"val":"\"Logout\"","offset":41},{"val":"2","offset":50}],"location":"stepDefinition.LogoutStepDef.the_response_status_code_should_be_with(java.lang.String,java.lang.Integer)"},"keyword":"Then "}],"tags":[{"name":"@tag"}]},{"start_timestamp":"2024-08-22T21:10:00.210Z","line":13,"name":"Validate logout functionality for different user roles with token","description":"","id":"get-logout;validate-logout-functionality-for-different-user-roles-with-token;;5","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1558754700,"status":"passed"},"line":5,"name":"User sends a GET request to fetch logout details  with \"get request\" \"Logout\" 3","match":{"arguments":[{"val":"\"get request\"","offset":55},{"val":"\"Logout\"","offset":69},{"val":"3","offset":78}],"location":"stepDefinition.LogoutStepDef.user_sends_a_get_request_to_fetch_logout_details_with(java.lang.String,java.lang.String,java.lang.Integer)"},"keyword":"When "},{"result":{"duration":55990200,"status":"passed"},"line":6,"name":"the response status code should be  with \"Logout\" 3","match":{"arguments":[{"val":"\"Logout\"","offset":41},{"val":"3","offset":50}],"location":"stepDefinition.LogoutStepDef.the_response_status_code_should_be_with(java.lang.String,java.lang.Integer)"},"keyword":"Then "}],"tags":[{"name":"@tag"}]},{"start_timestamp":"2024-08-22T21:10:01.838Z","line":14,"name":"Validate logout functionality for different user roles with token","description":"","id":"get-logout;validate-logout-functionality-for-different-user-roles-with-token;;6","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1343713300,"status":"passed"},"line":5,"name":"User sends a GET request to fetch logout details  with \"post request with invalid method\" \"Logout\" 4","match":{"arguments":[{"val":"\"post request with invalid method\"","offset":55},{"val":"\"Logout\"","offset":90},{"val":"4","offset":99}],"location":"stepDefinition.LogoutStepDef.user_sends_a_get_request_to_fetch_logout_details_with(java.lang.String,java.lang.String,java.lang.Integer)"},"keyword":"When "},{"result":{"duration":49999500,"status":"passed"},"line":6,"name":"the response status code should be  with \"Logout\" 4","match":{"arguments":[{"val":"\"Logout\"","offset":41},{"val":"4","offset":50}],"location":"stepDefinition.LogoutStepDef.the_response_status_code_should_be_with(java.lang.String,java.lang.Integer)"},"keyword":"Then "}],"tags":[{"name":"@tag"}]},{"start_timestamp":"2024-08-22T21:10:03.238Z","line":15,"name":"Validate logout functionality for different user roles with token","description":"","id":"get-logout;validate-logout-functionality-for-different-user-roles-with-token;;7","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1518095200,"status":"passed"},"line":5,"name":"User sends a GET request to fetch logout details  with \"get request\" \"Logout\" 5","match":{"arguments":[{"val":"\"get request\"","offset":55},{"val":"\"Logout\"","offset":69},{"val":"5","offset":78}],"location":"stepDefinition.LogoutStepDef.user_sends_a_get_request_to_fetch_logout_details_with(java.lang.String,java.lang.String,java.lang.Integer)"},"keyword":"When "},{"result":{"duration":51827700,"status":"passed"},"line":6,"name":"the response status code should be  with \"Logout\" 5","match":{"arguments":[{"val":"\"Logout\"","offset":41},{"val":"5","offset":50}],"location":"stepDefinition.LogoutStepDef.the_response_status_code_should_be_with(java.lang.String,java.lang.Integer)"},"keyword":"Then "}],"tags":[{"name":"@tag"}]},{"start_timestamp":"2024-08-22T21:10:04.821Z","line":16,"name":"Validate logout functionality for different user roles with token","description":"","id":"get-logout;validate-logout-functionality-for-different-user-roles-with-token;;8","type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1687489400,"status":"passed"},"line":5,"name":"User sends a GET request to fetch logout details  with \"post request with invalid method\" \"Logout\" 6","match":{"arguments":[{"val":"\"post request with invalid method\"","offset":55},{"val":"\"Logout\"","offset":90},{"val":"6","offset":99}],"location":"stepDefinition.LogoutStepDef.user_sends_a_get_request_to_fetch_logout_details_with(java.lang.String,java.lang.String,java.lang.Integer)"},"keyword":"When "},{"result":{"duration":45072500,"status":"passed"},"line":6,"name":"the response status code should be  with \"Logout\" 6","match":{"arguments":[{"val":"\"Logout\"","offset":41},{"val":"6","offset":50}],"location":"stepDefinition.LogoutStepDef.the_response_status_code_should_be_with(java.lang.String,java.lang.Integer)"},"keyword":"Then "}],"tags":[{"name":"@tag"}]}],"name":"Get Logout","description":"","id":"get-logout","keyword":"Feature","uri":"file:src/test/resources/Features/Userlogout.feature","tags":[{"name":"@tag","type":"Tag","location":{"line":1,"column":1}}]},{"line":2,"elements":[{"line":3,"name":"Set dietician token","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":988700,"status":"passed"},"line":4,"name":"User creates Post request with request body.","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_creates_post_request_with_request_body()"},"keyword":"Given "},{"result":{"duration":1457335700,"status":"passed"},"line":5,"name":"User send login POST HTTP request with endpoint","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_send_login_post_http_request_with_endpoint()"},"keyword":"When "},{"result":{"duration":2072000,"status":"passed"},"line":6,"name":"Admin sets the bearer admin token for the Post request","match":{"location":"stepDefinition.DieticianPostStepDef.admin_sets_the_bearer_admin_token_for_the_post_request()"},"keyword":"Then "}]},{"start_timestamp":"2024-08-22T21:10:06.562Z","line":9,"name":"Check dietician able to retrieve all patients","description":"","id":"get-operation-[get-all-patients];check-dietician-able-to-retrieve-all-patients","type":"scenario","keyword":"Scenario","steps":[{"result":{"error_message":"java.lang.NullPointerException: Cannot invoke \"utilities.ReqResSpec.ReqSpec()\" because \"this.reqres\" is null\r\n\tat stepDefinition.GetAllPatients_Steps.dietician_create_get_request(GetAllPatients_Steps.java:35)\r\n\tat ✽.Dietician create GET request(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/getOperation_GetAllPatient.feature:10)\r\n","duration":1008600,"status":"failed"},"line":10,"name":"Dietician create GET request","match":{"location":"stepDefinition.GetAllPatients_Steps.dietician_create_get_request()"},"keyword":"Given "},{"result":{"duration":1000000,"status":"skipped"},"line":11,"name":"Dietician send a GET http request with endpoint","match":{"location":"stepDefinition.GetAllPatients_Steps.dietician_send_a_get_http_request_with_endpoint()"},"keyword":"When "},{"result":{"status":"skipped"},"line":12,"name":"Dietician get 200 with response body","match":{"arguments":[{"val":"200","offset":14}],"location":"stepDefinition.GetAllPatients_Steps.dietician_get_with_response_body(java.lang.Integer)"},"keyword":"Then "}]},{"line":3,"name":"Set dietician token","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":1251300,"status":"passed"},"line":4,"name":"User creates Post request with request body.","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_creates_post_request_with_request_body()"},"keyword":"Given "},{"result":{"duration":1307584300,"status":"passed"},"line":5,"name":"User send login POST HTTP request with endpoint","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_send_login_post_http_request_with_endpoint()"},"keyword":"When "},{"result":{"duration":5241600,"status":"passed"},"line":6,"name":"Admin sets the bearer admin token for the Post request","match":{"location":"stepDefinition.DieticianPostStepDef.admin_sets_the_bearer_admin_token_for_the_post_request()"},"keyword":"Then "}]},{"start_timestamp":"2024-08-22T21:10:08.035Z","line":14,"name":"Check dietician able to retrieve all patient with invalid method","description":"","id":"get-operation-[get-all-patients];check-dietician-able-to-retrieve-all-patient-with-invalid-method","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1065100,"status":"passed"},"line":15,"name":"Dietician create PUT request","match":{"location":"stepDefinition.GetAllPatients_Steps.dietician_create_put_request()"},"keyword":"Given "},{"result":{"duration":1754909400,"status":"passed"},"line":16,"name":"Dietician send PUT http request with invalid method with endpoint","match":{"location":"stepDefinition.GetAllPatients_Steps.dietician_send_put_http_request_with_invalid_method_with_endpoint()"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected [405] but found [401]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1449)\r\n\tat stepDefinition.GetAllPatients_Steps.dietician_get_with_response_body(GetAllPatients_Steps.java:53)\r\n\tat ✽.Dietician get 405 with response body(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/getOperation_GetAllPatient.feature:17)\r\n","duration":1155100,"status":"failed"},"line":17,"name":"Dietician get 405 with response body","match":{"arguments":[{"val":"405","offset":14}],"location":"stepDefinition.GetAllPatients_Steps.dietician_get_with_response_body(java.lang.Integer)"},"keyword":"Then "}]},{"line":3,"name":"Set dietician token","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":1001700,"status":"passed"},"line":4,"name":"User creates Post request with request body.","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_creates_post_request_with_request_body()"},"keyword":"Given "},{"result":{"duration":1530207100,"status":"passed"},"line":5,"name":"User send login POST HTTP request with endpoint","match":{"location":"stepDefinition.AdminLoginStepDef_Dietician.user_send_login_post_http_request_with_endpoint()"},"keyword":"When "},{"result":{"duration":2044200,"status":"passed"},"line":6,"name":"Admin sets the bearer admin token for the Post request","match":{"location":"stepDefinition.DieticianPostStepDef.admin_sets_the_bearer_admin_token_for_the_post_request()"},"keyword":"Then "}]},{"start_timestamp":"2024-08-22T21:10:11.114Z","line":20,"name":"Check dietician able to retrieve all patient with invalid endpoint","description":"","id":"get-operation-[get-all-patients];check-dietician-able-to-retrieve-all-patient-with-invalid-endpoint","type":"scenario","keyword":"Scenario","steps":[{"result":{"error_message":"java.lang.NullPointerException: Cannot invoke \"utilities.ReqResSpec.ReqSpec()\" because \"this.reqres\" is null\r\n\tat stepDefinition.GetAllPatients_Steps.dietician_create_get_request(GetAllPatients_Steps.java:35)\r\n\tat ✽.Dietician create GET request(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/getOperation_GetAllPatient.feature:21)\r\n","duration":1233700,"status":"failed"},"line":21,"name":"Dietician create GET request","match":{"location":"stepDefinition.GetAllPatients_Steps.dietician_create_get_request()"},"keyword":"Given "},{"result":{"status":"skipped"},"line":22,"name":"Dietician sends GET http request with invalid endpoint","match":{"location":"stepDefinition.GetAllPatients_Steps.dietician_sends_get_http_request_with_invalid_endpoint()"},"keyword":"When "},{"result":{"status":"skipped"},"line":23,"name":"Dietician get 404 with response body","match":{"arguments":[{"val":"404","offset":14}],"location":"stepDefinition.GetAllPatients_Steps.dietician_get_with_response_body(java.lang.Integer)"},"keyword":"Then "}]}],"name":"Get Operation [Get all Patients]","description":"","id":"get-operation-[get-all-patients]","keyword":"Feature","uri":"file:src/test/resources/Features/getOperation_GetAllPatient.feature","tags":[]},{"line":1,"elements":[{"line":4,"name":"Set no auth","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:10:12.655Z","line":27,"name":"Check dietician able to create patient with valid data","description":"","id":"post-operation--put-operation;check-dietician-able-to-create-patient-with-valid-data","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":28,"name":"Dietician creates POST request  by entering valid data into the form-data key and value fields without token.","match":{"location":"stepDefinition.SetNoAuth_Steps.dietician_creates_post_request_by_entering_valid_data_into_the_form_data_key_and_value_fields_without_token()"},"keyword":"Given "},{"result":{"error_message":"java.lang.NullPointerException: Cannot invoke \"com.codoid.products.fillo.Connection.close()\" because \"conn\" is null\r\n\tat utilities.ExcelUtilities.getTestDataInMap(ExcelUtilities.java:45)\r\n\tat stepDefinition.SetNoAuth_Steps.dietician_send_post_http_request_without_token_with_endpoint(SetNoAuth_Steps.java:32)\r\n\tat ✽.Dietician send POST http request without token with endpoint(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/setNoAuth.feature:29)\r\n","duration":1510600,"status":"failed"},"line":29,"name":"Dietician send POST http request without token with endpoint","match":{"location":"stepDefinition.SetNoAuth_Steps.dietician_send_post_http_request_without_token_with_endpoint()"},"keyword":"When "},{"result":{"status":"skipped"},"line":30,"name":"Dietician recieves 401 unauthorized","match":{"arguments":[{"val":"401","offset":19}],"location":"stepDefinition.NoAuthStepDef.dietician_recieves_unauthorized(int)"},"keyword":"Then "}]},{"line":4,"name":"Set no auth","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:10:12.663Z","line":32,"name":"Check dietician able to update patient with valid data","description":"","id":"post-operation--put-operation;check-dietician-able-to-update-patient-with-valid-data","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":33,"name":"Dietician creates PUT request by entering valid data into the form-data key and value fields without token.","match":{"location":"stepDefinition.SetNoAuth_Steps.dietician_creates_put_request_by_entering_valid_data_into_the_form_data_key_and_value_fields_without_token()"},"keyword":"Given "},{"result":{"error_message":"java.lang.NullPointerException: Cannot invoke \"com.codoid.products.fillo.Connection.close()\" because \"conn\" is null\r\n\tat utilities.ExcelUtilities.getTestDataInMap(ExcelUtilities.java:45)\r\n\tat stepDefinition.SetNoAuth_Steps.dietician_send_put_http_request_without_token_with_endpoint(SetNoAuth_Steps.java:51)\r\n\tat ✽.Dietician send PUT http request without token with endpoint(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/setNoAuth.feature:34)\r\n","duration":991600,"status":"failed"},"line":34,"name":"Dietician send PUT http request without token with endpoint","match":{"location":"stepDefinition.SetNoAuth_Steps.dietician_send_put_http_request_without_token_with_endpoint()"},"keyword":"When "},{"result":{"status":"skipped"},"line":35,"name":"Dietician recieves the 401 unauthorized","match":{"arguments":[{"val":"401","offset":23}],"location":"stepDefinition.SetNoAuth_Steps.dietician_recieves_the_unauthorized(java.lang.Integer)"},"keyword":"Then "}]},{"line":4,"name":"Set no auth","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:10:12.671Z","line":38,"name":"Check dietician able to add new reports for existing patient with valid data","description":"","id":"post-operation--put-operation;check-dietician-able-to-add-new-reports-for-existing-patient-with-valid-data","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":39,"name":"Dietician creates PUT request by entering valid data into the form-data key and value fields and valid patient ID without token","match":{"location":"stepDefinition.SetNoAuth_Steps.dietician_creates_put_request_by_entering_valid_data_into_the_form_data_key_and_value_fields_and_valid_patient_id_without_token()"},"keyword":"Given "},{"result":{"error_message":"java.lang.NullPointerException: Cannot invoke \"com.codoid.products.fillo.Connection.close()\" because \"conn\" is null\r\n\tat utilities.ExcelUtilities.getTestDataInMap(ExcelUtilities.java:45)\r\n\tat stepDefinition.SetNoAuth_Steps.dietician_send_put_http_request_without_token_with_endpoint(SetNoAuth_Steps.java:51)\r\n\tat ✽.Dietician send PUT http request without token with endpoint(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/setNoAuth.feature:40)\r\n","duration":1003900,"status":"failed"},"line":40,"name":"Dietician send PUT http request without token with endpoint","match":{"location":"stepDefinition.SetNoAuth_Steps.dietician_send_put_http_request_without_token_with_endpoint()"},"keyword":"When "},{"result":{"status":"skipped"},"line":41,"name":"Dietician recieves the 401 unauthorized","match":{"arguments":[{"val":"401","offset":23}],"location":"stepDefinition.SetNoAuth_Steps.dietician_recieves_the_unauthorized(java.lang.Integer)"},"keyword":"Then "}]},{"line":4,"name":"Set no auth","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:10:12.680Z","line":44,"name":"Check dietician able to retrieve all patients","description":"","id":"post-operation--put-operation;check-dietician-able-to-retrieve-all-patients","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":45,"name":"Dietician create GET request without token","match":{"location":"stepDefinition.SetNoAuth_Steps.dietician_create_get_request_without_token()"},"keyword":"Given "},{"result":{"duration":1475038700,"status":"passed"},"line":46,"name":"Dietician send GET http request without token with endpoint","match":{"location":"stepDefinition.SetNoAuth_Steps.dietician_send_get_http_request_without_token_with_endpoint()"},"keyword":"When "},{"result":{"status":"passed"},"line":47,"name":"Dietician recieves the 401 unauthorized","match":{"arguments":[{"val":"401","offset":23}],"location":"stepDefinition.SetNoAuth_Steps.dietician_recieves_the_unauthorized(java.lang.Integer)"},"keyword":"Then "}]},{"line":4,"name":"Set no auth","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:10:14.163Z","line":50,"name":"Check dietician able to retrieve patients morbidity details by patient ID","description":"","id":"post-operation--put-operation;check-dietician-able-to-retrieve-patients-morbidity-details-by-patient-id","type":"scenario","keyword":"Scenario","steps":[{"result":{"error_message":"java.lang.NullPointerException: Cannot invoke \"utilities.ReqResSpec.ReqSpec()\" because \"this.reqres\" is null\r\n\tat stepDefinition.GetAllPatients_Steps.dietician_create_get_request(GetAllPatients_Steps.java:35)\r\n\tat ✽.Dietician create GET request(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/setNoAuth.feature:51)\r\n","duration":1158800,"status":"failed"},"line":51,"name":"Dietician create GET request","match":{"location":"stepDefinition.GetAllPatients_Steps.dietician_create_get_request()"},"keyword":"Given "},{"result":{"status":"skipped"},"line":52,"name":"Dietician send GET http request without token with endpoint","match":{"location":"stepDefinition.SetNoAuth_Steps.dietician_send_get_http_request_without_token_with_endpoint()"},"keyword":"When "},{"result":{"status":"skipped"},"line":53,"name":"Dietician recieves the 401 unauthorized","match":{"arguments":[{"val":"401","offset":23}],"location":"stepDefinition.SetNoAuth_Steps.dietician_recieves_the_unauthorized(java.lang.Integer)"},"keyword":"Then "}]},{"line":4,"name":"Set no auth","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:10:14.169Z","line":56,"name":"Check dietician able to retrieve patients by field","description":"","id":"post-operation--put-operation;check-dietician-able-to-retrieve-patients-by-field","type":"scenario","keyword":"Scenario","steps":[{"result":{"error_message":"java.lang.NullPointerException: Cannot invoke \"utilities.ReqResSpec.ReqSpec()\" because \"this.reqres\" is null\r\n\tat stepDefinition.GetAllPatients_Steps.dietician_create_get_request(GetAllPatients_Steps.java:35)\r\n\tat ✽.Dietician create GET request(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/setNoAuth.feature:57)\r\n","duration":1001000,"status":"failed"},"line":57,"name":"Dietician create GET request","match":{"location":"stepDefinition.GetAllPatients_Steps.dietician_create_get_request()"},"keyword":"Given "},{"result":{"status":"skipped"},"line":58,"name":"Dietician send GET http request without token with endpoint","match":{"location":"stepDefinition.SetNoAuth_Steps.dietician_send_get_http_request_without_token_with_endpoint()"},"keyword":"When "},{"result":{"status":"skipped"},"line":59,"name":"Dietician recieves 401 unauthorized","match":{"arguments":[{"val":"401","offset":19}],"location":"stepDefinition.NoAuthStepDef.dietician_recieves_unauthorized(int)"},"keyword":"Then "}]},{"line":4,"name":"Set no auth","description":"","type":"background","keyword":"Background","steps":[]},{"start_timestamp":"2024-08-22T21:10:14.179Z","line":62,"name":"Check dietician able to delete patient by ID","description":"","id":"post-operation--put-operation;check-dietician-able-to-delete-patient-by-id","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1017400,"status":"passed"},"line":63,"name":"Dietician create DELETE request without token","match":{"location":"stepDefinition.SetNoAuth_Steps.dietician_create_delete_request_without_token()"},"keyword":"Given "},{"result":{"error_message":"java.lang.NullPointerException: Cannot invoke \"com.codoid.products.fillo.Connection.close()\" because \"conn\" is null\r\n\tat utilities.ExcelUtilities.getTestDataInMap(ExcelUtilities.java:45)\r\n\tat stepDefinition.SetNoAuth_Steps.dietician_send_delete_http_request_without_token_with_endpoint(SetNoAuth_Steps.java:88)\r\n\tat ✽.Dietician send DELETE http request without token with endpoint(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/setNoAuth.feature:64)\r\n","duration":996900,"status":"failed"},"line":64,"name":"Dietician send DELETE http request without token with endpoint","match":{"location":"stepDefinition.SetNoAuth_Steps.dietician_send_delete_http_request_without_token_with_endpoint()"},"keyword":"When "},{"result":{"status":"skipped"},"line":65,"name":"Dietician recieves the 401 unauthorized","match":{"arguments":[{"val":"401","offset":23}],"location":"stepDefinition.SetNoAuth_Steps.dietician_recieves_the_unauthorized(java.lang.Integer)"},"keyword":"Then "}]}],"name":"Post Operation  Put Operation","description":"Get Operation [Get all Patients ]Get Operation [Retrieve Patient file by FileId ]\nDELETE ( by patient)","id":"post-operation--put-operation","keyword":"Feature","uri":"file:src/test/resources/Features/setNoAuth.feature","tags":[]}]