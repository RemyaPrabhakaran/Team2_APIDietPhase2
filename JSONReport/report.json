[{"line":2,"elements":[{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":997400,"status":"passed"},"line":6,"name":"Admin is logged in with valid credentials","match":{"location":"stepDefinition.DieticianPutStepDef.admin_is_logged_in_with_valid_credentials()"},"keyword":"Given "},{"result":{"duration":999800,"status":"passed"},"line":7,"name":"Admin sets the bearer admin token","match":{"location":"stepDefinition.DieticianPutStepDef.admin_sets_the_bearer_admin_token()"},"keyword":"Then "}]},{"start_timestamp":"2024-08-17T18:44:51.658Z","line":10,"name":"Check admin able to update dietician with valid data , dietician id and token","description":"","id":"put-(by-dietician-);check-admin-able-to-update-dietician-with-valid-data---dietician-id-and-token","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":11,"name":"Admin creates PUT request with valid data. ( Mandatory and additional details)","match":{"location":"stepDefinition.DieticianPutStepDef.admin_creates_put_request_with_valid_data_mandatory_and_additional_details()"},"keyword":"Given "},{"result":{"status":"passed"},"line":12,"name":"Admin send PUT http request with endpoint","match":{"location":"stepDefinition.DieticianPutStepDef.admin_send_put_http_request_with_endpoint()"},"keyword":"When "},{"result":{"duration":999400,"status":"passed"},"line":13,"name":"Admin recieves 200 ok and with updated response body.","match":{"arguments":[{"val":"200","offset":15}],"location":"stepDefinition.DieticianPutStepDef.admin_recieves_ok_and_with_updated_response_body(java.lang.Integer)"},"keyword":"Then "}]},{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"status":"passed"},"line":6,"name":"Admin is logged in with valid credentials","match":{"location":"stepDefinition.DieticianPutStepDef.admin_is_logged_in_with_valid_credentials()"},"keyword":"Given "},{"result":{"status":"passed"},"line":7,"name":"Admin sets the bearer admin token","match":{"location":"stepDefinition.DieticianPutStepDef.admin_sets_the_bearer_admin_token()"},"keyword":"Then "}]},{"start_timestamp":"2024-08-17T18:44:51.679Z","line":15,"name":"Check admin able to update dietician only with valid mandatory details and dietician id","description":"","id":"put-(by-dietician-);check-admin-able-to-update-dietician-only-with-valid-mandatory-details-and-dietician-id","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":16,"name":"Admin creates PUT request only with valid mandatory details","match":{"location":"stepDefinition.DieticianPutStepDef.admin_creates_put_request_only_with_valid_mandatory_details()"},"keyword":"Given "},{"result":{"status":"passed"},"line":17,"name":"Admin send PUT http request with endpoint","match":{"location":"stepDefinition.DieticianPutStepDef.admin_send_put_http_request_with_endpoint()"},"keyword":"When "},{"result":{"status":"passed"},"line":18,"name":"Admin recieves 200 ok and with updated response body.","match":{"arguments":[{"val":"200","offset":15}],"location":"stepDefinition.DieticianPutStepDef.admin_recieves_ok_and_with_updated_response_body(java.lang.Integer)"},"keyword":"Then "}]},{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":1001200,"status":"passed"},"line":6,"name":"Admin is logged in with valid credentials","match":{"location":"stepDefinition.DieticianPutStepDef.admin_is_logged_in_with_valid_credentials()"},"keyword":"Given "},{"result":{"status":"passed"},"line":7,"name":"Admin sets the bearer admin token","match":{"location":"stepDefinition.DieticianPutStepDef.admin_sets_the_bearer_admin_token()"},"keyword":"Then "}]},{"start_timestamp":"2024-08-17T18:44:51.691Z","line":20,"name":"Check admin able to update dietician only with valid additional details","description":"","id":"put-(by-dietician-);check-admin-able-to-update-dietician-only-with-valid-additional-details","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":21,"name":"Admin creates PUT request only with valid additional details","match":{"location":"stepDefinition.DieticianPutStepDef.admin_creates_put_request_only_with_valid_additional_details()"},"keyword":"Given "},{"result":{"status":"passed"},"line":22,"name":"Admin send PUT http request with endpoint","match":{"location":"stepDefinition.DieticianPutStepDef.admin_send_put_http_request_with_endpoint()"},"keyword":"When "},{"result":{"duration":1000500,"status":"passed"},"line":23,"name":"Admin recieves 400 Bad request","match":{"arguments":[{"val":"400","offset":15}],"location":"stepDefinition.DieticianPutStepDef.admin_recieves_bad_request(java.lang.Integer)"},"keyword":"Then "}]},{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":996100,"status":"passed"},"line":6,"name":"Admin is logged in with valid credentials","match":{"location":"stepDefinition.DieticianPutStepDef.admin_is_logged_in_with_valid_credentials()"},"keyword":"Given "},{"result":{"status":"passed"},"line":7,"name":"Admin sets the bearer admin token","match":{"location":"stepDefinition.DieticianPutStepDef.admin_sets_the_bearer_admin_token()"},"keyword":"Then "}]},{"start_timestamp":"2024-08-17T18:44:51.702Z","line":25,"name":"Check admin able to update dietician with invalid data and dietician id","description":"","id":"put-(by-dietician-);check-admin-able-to-update-dietician-with-invalid-data-and-dietician-id","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":26,"name":"Admin creates PUT request only with invalid additional details","match":{"location":"stepDefinition.DieticianPutStepDef.admin_creates_put_request_only_with_invalid_additional_details()"},"keyword":"Given "},{"result":{"duration":999200,"status":"passed"},"line":27,"name":"Admin send PUT http request with endpoint","match":{"location":"stepDefinition.DieticianPutStepDef.admin_send_put_http_request_with_endpoint()"},"keyword":"When "},{"result":{"status":"passed"},"line":28,"name":"Admin recieves 400 Bad request","match":{"arguments":[{"val":"400","offset":15}],"location":"stepDefinition.DieticianPutStepDef.admin_recieves_bad_request(java.lang.Integer)"},"keyword":"Then "}]},{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"status":"passed"},"line":6,"name":"Admin is logged in with valid credentials","match":{"location":"stepDefinition.DieticianPutStepDef.admin_is_logged_in_with_valid_credentials()"},"keyword":"Given "},{"result":{"status":"passed"},"line":7,"name":"Admin sets the bearer admin token","match":{"location":"stepDefinition.DieticianPutStepDef.admin_sets_the_bearer_admin_token()"},"keyword":"Then "}]},{"start_timestamp":"2024-08-17T18:44:51.712Z","line":30,"name":"Check admin able to update dietician with valid data and invalid dietician id","description":"","id":"put-(by-dietician-);check-admin-able-to-update-dietician-with-valid-data-and-invalid-dietician-id","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":31,"name":"Admin creates PUT request only with valid mandatory details","match":{"location":"stepDefinition.DieticianPutStepDef.admin_creates_put_request_only_with_valid_mandatory_details()"},"keyword":"Given "},{"result":{"duration":999200,"status":"passed"},"line":32,"name":"Admin send PUT http request with endpoint","match":{"location":"stepDefinition.DieticianPutStepDef.admin_send_put_http_request_with_endpoint()"},"keyword":"When "},{"result":{"status":"passed"},"line":33,"name":"Admin recieves 400 Bad request","match":{"arguments":[{"val":"400","offset":15}],"location":"stepDefinition.DieticianPutStepDef.admin_recieves_bad_request(java.lang.Integer)"},"keyword":"Then "}]},{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"status":"passed"},"line":6,"name":"Admin is logged in with valid credentials","match":{"location":"stepDefinition.DieticianPutStepDef.admin_is_logged_in_with_valid_credentials()"},"keyword":"Given "},{"result":{"status":"passed"},"line":7,"name":"Admin sets the bearer admin token","match":{"location":"stepDefinition.DieticianPutStepDef.admin_sets_the_bearer_admin_token()"},"keyword":"Then "}]},{"start_timestamp":"2024-08-17T18:44:51.720Z","line":35,"name":"Check admin able to update dietician with valid data, dietician id and invalid method","description":"","id":"put-(by-dietician-);check-admin-able-to-update-dietician-with-valid-data--dietician-id-and-invalid-method","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":36,"name":"Admin creates POST request only with valid details","match":{"location":"stepDefinition.DieticianPutStepDef.admin_creates_post_request_only_with_valid_details()"},"keyword":"Given "},{"result":{"duration":1001200,"status":"passed"},"line":37,"name":"Admin send POST http request with endpoint","match":{"location":"stepDefinition.DieticianPutStepDef.admin_send_post_http_request_with_endpoint()"},"keyword":"When "},{"result":{"status":"passed"},"line":38,"name":"Admin recieves 405 method not allowed","match":{"arguments":[{"val":"405","offset":15}],"location":"stepDefinition.DieticianPutStepDef.admin_recieves_method_not_allowed(java.lang.Integer)"},"keyword":"Then "}]},{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"status":"passed"},"line":6,"name":"Admin is logged in with valid credentials","match":{"location":"stepDefinition.DieticianPutStepDef.admin_is_logged_in_with_valid_credentials()"},"keyword":"Given "},{"result":{"status":"passed"},"line":7,"name":"Admin sets the bearer admin token","match":{"location":"stepDefinition.DieticianPutStepDef.admin_sets_the_bearer_admin_token()"},"keyword":"Then "}]},{"start_timestamp":"2024-08-17T18:44:51.729Z","line":40,"name":"Check admin able to update dietician with valid data, dietician id and invalid endpoint","description":"","id":"put-(by-dietician-);check-admin-able-to-update-dietician-with-valid-data--dietician-id-and-invalid-endpoint","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":41,"name":"Admin creates PUT request with valid data","match":{"location":"stepDefinition.DieticianPutStepDef.admin_creates_put_request_with_valid_data()"},"keyword":"Given "},{"result":{"status":"passed"},"line":42,"name":"Admin sent PUT http request with invalid endpoint","match":{"location":"stepDefinition.DieticianPutStepDef.admin_sent_put_http_request_with_invalid_endpoint()"},"keyword":"When "},{"result":{"status":"passed"},"line":43,"name":"Admin recieves 404 not found","match":{"arguments":[{"val":"404","offset":15}],"location":"stepDefinition.DieticianPutStepDef.admin_recieves_not_found(java.lang.Integer)"},"keyword":"Then "}]},{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"status":"passed"},"line":6,"name":"Admin is logged in with valid credentials","match":{"location":"stepDefinition.DieticianPutStepDef.admin_is_logged_in_with_valid_credentials()"},"keyword":"Given "},{"result":{"status":"passed"},"line":7,"name":"Admin sets the bearer admin token","match":{"location":"stepDefinition.DieticianPutStepDef.admin_sets_the_bearer_admin_token()"},"keyword":"Then "}]},{"start_timestamp":"2024-08-17T18:44:51.737Z","line":45,"name":"Check admin able to update dietician with valid data, dietician id and invalid content type","description":"","id":"put-(by-dietician-);check-admin-able-to-update-dietician-with-valid-data--dietician-id-and-invalid-content-type","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":46,"name":"Admin creates PUT request with valid data and invalid content type","match":{"location":"stepDefinition.DieticianPutStepDef.admin_creates_put_request_with_valid_data_and_invalid_content_type()"},"keyword":"Given "},{"result":{"status":"passed"},"line":47,"name":"Admin send PUT http request with endpoint","match":{"location":"stepDefinition.DieticianPutStepDef.admin_send_put_http_request_with_endpoint()"},"keyword":"When "},{"result":{"status":"passed"},"line":48,"name":"Admin recieves 415 unsupported media type","match":{"arguments":[{"val":"415","offset":15}],"location":"stepDefinition.DieticianPutStepDef.admin_recieves_unsupported_media_type(java.lang.Integer)"},"keyword":"Then "}]}],"name":"PUT (by dietician )","description":"  Admin logs in to the API without authorization","id":"put-(by-dietician-)","keyword":"Feature","uri":"file:src/test/resources/Features/Dietician_Put.feature","tags":[]},{"line":2,"elements":[{"line":5,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":6997700,"status":"passed"},"line":6,"name":"Admin sets the Authorization to no auth","match":{"location":"stepDefinition.AdminLoginStepDef.admin_sets_the_authorization_to_no_auth()"},"keyword":"Given "}]},{"start_timestamp":"2024-08-17T18:44:51.746Z","line":8,"name":"Check user able to login as admin with valid data","description":"","id":"user-login;check-user-able-to-login-as-admin-with-valid-data","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":520566200,"status":"passed"},"line":9,"name":"User creates Post request with request body.","match":{"location":"stepDefinition.AdminLoginStepDef.user_creates_post_request_with_request_body()"},"keyword":"Given "},{"result":{"error_message":"java.lang.AssertionError: 1 expectation failed.\nExpected status code <400> but was <401>.\n\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)\r\n\tat io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)\r\n\tat stepDefinition.AdminLoginStepDef.user_send_post_http_request_with_endpoint(AdminLoginStepDef.java:67)\r\n\tat ✽.User send POST HTTP request with endpoint(file:///C:/Users/chand/git/Team2_APIDietPhase2/src/test/resources/Features/User_Admin.feature:10)\r\n","duration":6039202900,"status":"failed"},"line":10,"name":"User send POST HTTP request with endpoint","match":{"location":"stepDefinition.AdminLoginStepDef.user_send_post_http_request_with_endpoint()"},"keyword":"When "},{"result":{"status":"skipped"},"line":11,"name":"User recieves 200 created with response body","match":{"arguments":[{"val":"200","offset":14}],"location":"stepDefinition.AdminLoginStepDef.user_recieves_created_with_response_body(java.lang.Integer)"},"keyword":"Then "}]}],"name":"User Login","description":"  Admin logs in to the API without authorization","id":"user-login","keyword":"Feature","uri":"file:src/test/resources/Features/User_Admin.feature","tags":[]}]